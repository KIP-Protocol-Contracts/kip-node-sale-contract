{"id":"61b9e5b705a7608a1541c309611bcc94","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Sorts the pair (a, b) and hashes the result.\n     */\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/KIPNode.sol":{"content":"// SPDX-License-Identifier: None\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\nerror InvalidRequest();\nerror SaleEventNotExist(uint256 start, uint256 end);\nerror PriceNotConfigured();\nerror ExceedAllowance();\nerror InvalidProof();\nerror InvalidURI();\nerror SetAddressZero();\nerror InvalidConfig(uint256 minTier, uint256 maxTier);\n\ncontract KIPNode is ERC721, Ownable {\n    using SafeERC20 for IERC20;\n\n    struct PublicSale {\n        uint256 price;\n        uint32 maxPerTier;\n        uint32 maxPerUser;\n        uint64 totalMintedAmount;\n        uint64 start;\n        uint64 end;\n    }\n\n    struct WhitelistSale {\n        bytes32 merkleRoot;\n        uint32 maxPerTier;\n        uint64 totalMintedAmount;\n        uint64 start;\n        uint64 end;\n    }\n\n    //  Store address of ERC-20 token as payment acceptance\n    IERC20 public paymentToken;\n\n    //  TokenId counter\n    uint256 private _nextTokenId;\n\n    // KIP Protocol 's Fund Address\n    address public KIPFundAddress = 0x6E3bbb13330102989Ac110163e4C649d0bB88777;\n\n    // Set max number of tiers for the sale event\n    uint256 public constant MAX_TIER = 38;\n\n    //  Mappings to store Sale Configurations (Public Sale and Whitelist Sale)\n    mapping(uint256 => PublicSale) public publicSaleConfigs;\n    mapping(uint256 => WhitelistSale) public whitelistSaleConfigs;\n\n    //  Mappings to record total minted Licenses per `buyer` (by tier)\n    mapping(uint256 => mapping(address => uint256)) public whitelistUserMinted;\n    mapping(uint256 => mapping(address => uint256)) public publicUserMinted;\n\n    //  A boolean flag to allow/block transferring License NFTs\n    bool public transferEnabled;\n\n    //  Store Base URI of the License NFT contract\n    string public baseURI;\n\n    event TokenMinted(\n        address indexed sender,\n        address indexed to,\n        uint256 tier,\n        uint256 tokenId,\n        uint256 price,\n        bool whitelist,\n        string code\n    );\n\n    event MintCountUpdated(\n        address indexed sender,\n        uint256 tier,\n        bool whitelist,\n        uint256 userMintCount,\n        uint256 tierMintCount\n    );\n\n    constructor(\n        address initialOwner,\n        address paymentToken_\n    ) ERC721(\"KIP License\", \"KIPNODE\") Ownable(initialOwner) {\n        paymentToken = IERC20(paymentToken_);\n        baseURI = \"https://node-nft.kip.pro/\";\n    }\n\n    /** \n        @notice Function for Minting Licenses in the Public Sale\n        @dev\n        - Requirements:\n          - Caller can be ANY\n        - Params:\n          - tier      Tier number (1 ~ 38)\n          - to        Address of the Receiver\n          - amount    A number of Licenses is requested to mint\n          - code      External message\n    */\n    function publicMint(\n        uint256 tier,\n        address to,\n        uint256 amount,\n        string calldata code\n    ) external {\n        //  Validate passing parameters\n        if (tier == 0 || tier > MAX_TIER || amount == 0 || to == address(0))\n            revert InvalidRequest();\n\n        //  Validate request's timestamp and the requesting amount\n        PublicSale memory config = publicSaleConfigs[tier];\n        address sender = _msgSender();\n        if (block.timestamp < config.start || block.timestamp > config.end)\n            revert SaleEventNotExist(config.start, config.end);\n        if (config.price == 0) revert PriceNotConfigured();\n        if (\n            publicUserMinted[tier][sender] + amount > config.maxPerUser ||\n            config.totalMintedAmount + amount > config.maxPerTier\n        ) revert ExceedAllowance();\n\n        //  Update state storage to avoid re-entrancy attack\n        publicSaleConfigs[tier].totalMintedAmount += uint64(amount); //  overflow is guaranteed by checking above\n        publicUserMinted[tier][sender] += amount;\n\n        //  Payment\n        uint256 totalPayment = config.price * amount;\n        paymentToken.safeTransferFrom(sender, KIPFundAddress, totalPayment);\n\n        //  Finally, call to mint License NFTs\n        for (uint256 i = 1; i <= amount; i++) {\n            _nextTokenId++;\n            _safeMint(to, _nextTokenId);\n            emit TokenMinted(\n                sender,\n                to,\n                tier,\n                _nextTokenId,\n                config.price,\n                false,\n                code\n            );\n        }\n\n        emit MintCountUpdated(\n            sender,\n            tier,\n            false,\n            publicUserMinted[tier][sender],\n            publicSaleConfigs[tier].totalMintedAmount\n        );\n    }\n\n    /** \n        @notice Function for Minting Licenses in the Whitelist Sale\n        @dev\n            - Requirements:\n              - Caller can be ANY\n            - Params:\n              - tier            Tier number (1 ~ 38)\n              - to              Address of the Receiver\n              - amount          A number of Licenses is requested to mint\n              - maxAmount       A max number of Licenses can be purchased (set in the Merkle Tree)\n              - merkleProof     An array of proof\n    */\n    function whitelistMint(\n        uint256 tier,\n        address to,\n        uint256 amount,\n        uint256 maxAmount,\n        bytes32[] calldata merkleProof\n    ) external {\n        //  Validate passing parameters\n        if (tier == 0 || tier > MAX_TIER || to == address(0) || amount == 0)\n            revert InvalidRequest();\n\n        //  Validate request's timestamp and the requesting amount\n        //  also validate proof to check its authentication\n        WhitelistSale memory config = whitelistSaleConfigs[tier];\n        address sender = _msgSender();\n        if (block.timestamp < config.start || block.timestamp > config.end)\n            revert SaleEventNotExist(config.start, config.end);\n        if (\n            whitelistUserMinted[tier][sender] + amount > maxAmount ||\n            config.totalMintedAmount + amount > config.maxPerTier\n        ) revert ExceedAllowance();\n        if (!_validateProof(tier, sender, maxAmount, merkleProof))\n            revert InvalidProof();\n\n        //  Update state storage to avoid re-entrancy attack\n        //  overflow is guaranteed by checking above\n        whitelistUserMinted[tier][sender] += amount;\n        whitelistSaleConfigs[tier].totalMintedAmount += uint64(amount);\n\n        //  And finally mint the License NFts\n        for (uint256 i = 1; i <= amount; i++) {\n            _nextTokenId++;\n            _safeMint(to, _nextTokenId);\n            emit TokenMinted(sender, to, tier, _nextTokenId, 0, true, \"\");\n        }\n\n        emit MintCountUpdated(\n            sender,\n            tier,\n            true,\n            whitelistUserMinted[tier][sender],\n            whitelistSaleConfigs[tier].totalMintedAmount\n        );\n    }\n\n    /** \n        @notice Update the new value of `baseURI`\n        @dev\n        - Requirements:\n          - Caller must be `owner`\n          - New string value of `baseURI` should not be empty\n        - Params:\n          - newURI      A new value of `baseURI` (as string)\n    */\n    function setBaseURI(string calldata newURI) external onlyOwner {\n        if (bytes(newURI).length == 0) revert InvalidURI();\n\n        baseURI = newURI;\n    }\n\n    /** \n        @notice Update the Public Sale configurations (per Tier)\n        @dev\n        - Requirements:\n          - Caller must be `owner`\n        - Params:\n          - tier            Tier number (1 ~ 38)\n          - settings:\n            - start               The starting time of the Public Sale (timestamp)\n            - end                 The ending time of the Public Sale (timestamp)\n            - price               The payment amount per License\n            - totalMintedAmount   The total Licenses that minted in the event (init value = 0)\n            - maxPerUser          The max number of Licenses is allowed to purchased\n            - maxPerTier          The max number of Licenses can be purchased in this tier\n    */\n    function setPublicSaleConfigs(\n        uint256 tier,\n        PublicSale calldata settings\n    ) external onlyOwner {\n        //  Note: Due to business logic, smart contract wouldn't validate the detail settings (i.e. start/end/price)\n        //  In fact, the validation must be done by off-chain mechanism,\n        //  and the smart contract allow `overwrite`\n        if (tier == 0 || tier > MAX_TIER) revert InvalidConfig(1, MAX_TIER);\n\n        publicSaleConfigs[tier] = settings;\n    }\n\n    /** \n        @notice Update the Whitelist Sale configurations (per Tier)\n        @dev\n        - Requirements:\n          - Caller must be `owner`\n        - Params:\n          - tier            Tier number (1 ~ 38)\n          - settings:\n            - start               The starting time of the Whitelist Sale (timestamp)\n            - end                 The ending time of the Whitelist Sale (timestamp)\n            - totalMintedAmount   The total Licenses that minted in the event (init value = 0)\n            - maxPerTier          The max number of Licenses can be purchased in this tier\n            - merkleRoot          The computed hash of Merkle Tree\n    */\n    function setWhitelistSaleConfigs(\n        uint256 tier,\n        WhitelistSale calldata settings\n    ) external onlyOwner {\n        //  Note: Due to business logic, smart contract wouldn't validate the detail settings (i.e. start/end/merkleRoot)\n        //  In fact, the validation must be done by off-chain mechanism,\n        //  and the smart contract allow `overwrite`\n        if (tier == 0 || tier > MAX_TIER) revert InvalidConfig(1, MAX_TIER);\n\n        whitelistSaleConfigs[tier] = settings;\n    }\n\n    /** \n        @notice Allow/Disable License Transfer\n        @dev\n        - Requirements:\n          - Caller must be `owner`\n        - Params:\n          - newState            New state of `transferEnabled` (true or false)\n    */\n    function setTransferEnabled(bool newState) external onlyOwner {\n        transferEnabled = newState;\n    }\n\n    /** @notice Update the new address of KIP Protocol Treasury\n        @dev\n        - Requirements:\n          - Caller must be `owner`\n          - New updating address must be non-zero (not 0x00)\n        - Params:\n          - newAddress            New address of KIP Protocol Treasury\n    */\n    function setKIPFundAddress(address newAddress) external onlyOwner {\n        if (newAddress == address(0)) revert SetAddressZero();\n\n        KIPFundAddress = newAddress;\n    }\n\n    /** @notice Set new Payment Token\n        @dev\n        - Requirements:\n          - Caller must be `owner`\n          - New updating payment token must be non-zero (not 0x00)\n        - Params:\n          - token            New address of the payment acceptance (ERC-20)\n    */\n    function setPaymentToken(address token) external onlyOwner {\n        if (token == address(0)) revert SetAddressZero();\n\n        paymentToken = IERC20(token);\n    }\n\n    /** Validate Merkle Proof before calling whitelistMint function\n    - Merkle Root (hash) already set (per tier) before the Sale event\n    - Requirements:\n      - Caller can be ANY\n    - Params:\n      - tier            Tier number (1 ~ 38)\n      - to              Address of the Receiver\n      - maxAmount       A max number of Licenses can be purchased (set in the Merkle Tree)\n      - merkleProof     An array of connecting nodes in the Merkle Tree\n    - Return: `true` or `false` \n    */\n    function _validateProof(\n        uint256 tier,\n        address to,\n        uint256 maxAmount,\n        bytes32[] calldata merkleProof\n    ) private view returns (bool) {\n        bytes32 leaf = keccak256(\n            bytes.concat(keccak256(abi.encode(to, maxAmount)))\n        );\n        return\n            MerkleProof.verify(\n                merkleProof,\n                whitelistSaleConfigs[tier].merkleRoot,\n                leaf\n            );\n    }\n\n    /** Override the logic of ERC-721 implementation\n    - During the locking state, `transferEnabled = false`, License NFTs are un-transferrable\n    - Minting License is acceptable while burning is not allowed\n    */\n    function _update(\n        address to,\n        uint256 tokenId,\n        address auth\n    ) internal override(ERC721) returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n        require(\n            transferEnabled || previousOwner == address(0),\n            \"Transfer not enabled\"\n        );\n        return previousOwner;\n    }\n\n    function _baseURI() internal view override returns (string memory) {\n        return baseURI;\n    }\n}\n"},"contracts/mock/Token20.sol":{"content":"// SPDX-License-Identifier: None\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Token20 is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\n\n    function mint(address _to, uint256 _amount) external {\n        _mint(_to, _amount);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2684],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2685,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2684,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2684],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:139:1","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"288:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"307:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"627:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"660:6:1","nodeType":"VariableDeclaration","scope":159,"src":"652:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"676:7:1","nodeType":"VariableDeclaration","scope":159,"src":"668:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"693:6:1","nodeType":"VariableDeclaration","scope":159,"src":"685:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:1"},"src":"621:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"707:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"870:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"897:6:1","nodeType":"VariableDeclaration","scope":164,"src":"889:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:1"},"src":"864:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"911:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1102:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:1"},"src":"1075:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1126:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1517:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1509:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1526:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1553:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1545:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:1"},"src":"1476:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1567:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1752:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1781:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:1"},"src":"1746:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1797:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2003:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2031:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:1"},"src":"1997:43:1"}],"scope":285,"src":"278:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2044:141:1","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2196:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2216:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2446:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2473:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2465:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:1"},"src":"2440:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2486:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2629:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2652:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:1"},"src":"2623:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2675:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3004:6:1","nodeType":"VariableDeclaration","scope":209,"src":"2996:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3037:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3029:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:1"},"src":"2969:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3050:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3213:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3241:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3233:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:1"},"src":"3207:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3255:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3447:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:1"},"src":"3419:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3471:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3764:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3756:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3774:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:1"},"src":"3723:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3797:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3982:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4012:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4004:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:1"},"src":"3976:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4028:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4236:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4266:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4258:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:1"},"src":"4230:46:1"}],"scope":285,"src":"2186:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4280:143:1","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4434:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4455:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4862:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4854:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4878:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4870:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4895:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4887:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4903:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:1"},"src":"4821:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4926:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5089:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5118:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5110:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:1"},"src":"5083:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5132:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5325:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:1"},"src":"5296:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5349:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5653:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5645:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5671:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:1"},"src":"5610:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5684:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5900:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5892:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:1"},"src":"5863:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5916:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6155:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6147:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:1"},"src":"6118:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6171:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6488:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6507:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:1"},"src":"6456:73:1"}],"scope":285,"src":"4424:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6420:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2684],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":878,"src":"131:36:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":904,"src":"168:63:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":2685,"src":"232:48:2","symbolAliases":[{"foreign":{"id":291,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":285,"src":"281:65:2","symbolAliases":[{"foreign":{"id":293,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":296,"name":"Context","nameLocations":["1428:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2684,"src":"1428:7:2"},"id":297,"nodeType":"InheritanceSpecifier","src":"1428:7:2"},{"baseName":{"id":298,"name":"IERC20","nameLocations":["1437:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1437:6:2"},"id":299,"nodeType":"InheritanceSpecifier","src":"1437:6:2"},{"baseName":{"id":300,"name":"IERC20Metadata","nameLocations":["1445:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"1445:14:2"},"id":301,"nodeType":"InheritanceSpecifier","src":"1445:14:2"},{"baseName":{"id":302,"name":"IERC20Errors","nameLocations":["1461:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1461:12:2"},"id":303,"nodeType":"InheritanceSpecifier","src":"1461:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"348:1052:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":799,"linearizedBaseContracts":[799,189,903,877,2684],"name":"ERC20","nameLocation":"1419:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":307,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:2","nodeType":"VariableDeclaration","scope":799,"src":"1480:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":306,"keyName":"account","keyNameLocation":"1496:7:2","keyType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":313,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:2","nodeType":"VariableDeclaration","scope":799,"src":"1540:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":312,"keyName":"account","keyNameLocation":"1556:7:2","keyType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":311,"keyName":"spender","keyNameLocation":"1583:7:2","keyType":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":315,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:2","nodeType":"VariableDeclaration","scope":799,"src":"1630:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"1680:5:2","nodeType":"VariableDeclaration","scope":799,"src":"1665:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:2","nodeType":"VariableDeclaration","scope":799,"src":"1691:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":335,"nodeType":"Block","src":"1952:57:2","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1962:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1970:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":330,"nodeType":"ExpressionStatement","src":"1962:13:2"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1985:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1995:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":334,"nodeType":"ExpressionStatement","src":"1985:17:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1720:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":336,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"name_","nameLocation":"1922:5:2","nodeType":"VariableDeclaration","scope":336,"src":"1908:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":321,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:2","nodeType":"VariableDeclaration","scope":336,"src":"1929:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":323,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1952:0:2"},"scope":799,"src":"1896:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[890],"body":{"id":344,"nodeType":"Block","src":"2134:29:2","statements":[{"expression":{"id":342,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2151:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":341,"id":343,"nodeType":"Return","src":"2144:12:2"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"2015:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:2","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"2087:2:2"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"2119:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:2"},"scope":799,"src":"2074:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":353,"nodeType":"Block","src":"2338:31:2","statements":[{"expression":{"id":351,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2355:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":350,"id":352,"nodeType":"Return","src":"2348:14:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"2169:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":354,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"2291:2:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2323:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:2"},"scope":799,"src":"2276:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[902],"body":{"id":362,"nodeType":"Block","src":"3058:26:2","statements":[{"expression":{"hexValue":"3138","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"3068:9:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2375:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:2","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"3019:2:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"3051:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":357,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:2"},"scope":799,"src":"3002:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[826],"body":{"id":371,"nodeType":"Block","src":"3205:36:2","statements":[{"expression":{"id":369,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"3222:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":370,"nodeType":"Return","src":"3215:19:2"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"3090:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":372,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:2","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"3164:2:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"3196:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:2"},"scope":799,"src":"3144:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[834],"body":{"id":384,"nodeType":"Block","src":"3373:42:2","statements":[{"expression":{"baseExpression":{"id":380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3390:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":382,"indexExpression":{"id":381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3400:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":383,"nodeType":"Return","src":"3383:25:2"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"3247:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"account","nameLocation":"3326:7:2","nodeType":"VariableDeclaration","scope":385,"src":"3318:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"3364:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:2"},"scope":799,"src":"3299:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[844],"body":{"id":408,"nodeType":"Block","src":"3685:103:2","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"3703:5:2","nodeType":"VariableDeclaration","scope":408,"src":"3695:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3711:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:2"},{"expression":{"arguments":[{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3743:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3750:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3754:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3733:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"3733:27:2"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"3770:11:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"3421:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"to","nameLocation":"3636:2:2","nodeType":"VariableDeclaration","scope":409,"src":"3628:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"3648:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3640:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"3679:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:2"},"scope":799,"src":"3610:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[854],"body":{"id":425,"nodeType":"Block","src":"3935:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":419,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3952:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":421,"indexExpression":{"id":420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3964:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":423,"indexExpression":{"id":422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3971:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":418,"id":424,"nodeType":"Return","src":"3945:34:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3794:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:2","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"owner","nameLocation":"3873:5:2","nodeType":"VariableDeclaration","scope":426,"src":"3865:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"spender","nameLocation":"3888:7:2","nodeType":"VariableDeclaration","scope":426,"src":"3880:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:2"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"3926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:2"},"scope":799,"src":"3846:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[864],"body":{"id":449,"nodeType":"Block","src":"4372:107:2","statements":[{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"4390:5:2","nodeType":"VariableDeclaration","scope":449,"src":"4382:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4398:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:2"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4429:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4436:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4445:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"4420:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"4420:31:2"},{"expression":{"hexValue":"74727565","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":435,"id":448,"nodeType":"Return","src":"4461:11:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"3992:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:2","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"spender","nameLocation":"4318:7:2","nodeType":"VariableDeclaration","scope":450,"src":"4310:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"4335:5:2","nodeType":"VariableDeclaration","scope":450,"src":"4327:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"4366:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:2"},"scope":799,"src":"4293:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":481,"nodeType":"Block","src":"5132:151:2","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"spender","nameLocation":"5150:7:2","nodeType":"VariableDeclaration","scope":481,"src":"5142:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":466,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5160:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:2"},{"expression":{"arguments":[{"id":468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5198:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"5204:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5213:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":467,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"5182:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"5182:37:2"},{"expression":{"arguments":[{"id":474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5239:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5245:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5249:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5229:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"5229:26:2"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":461,"id":480,"nodeType":"Return","src":"5265:11:2"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4485:549:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"5069:4:2","nodeType":"VariableDeclaration","scope":482,"src":"5061:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"5083:2:2","nodeType":"VariableDeclaration","scope":482,"src":"5075:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"value","nameLocation":"5095:5:2","nodeType":"VariableDeclaration","scope":482,"src":"5087:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"5126:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:2"},"scope":799,"src":"5039:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":528,"nodeType":"Block","src":"5725:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5739:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"5735:86:2","trueBody":{"id":505,"nodeType":"Block","src":"5759:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:2","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5780:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"RevertStatement","src":"5773:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5834:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:2","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"5830:86:2","trueBody":{"id":520,"nodeType":"Block","src":"5852:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:2","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":513,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5873:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"RevertStatement","src":"5866:39:2"}]}},{"expression":{"arguments":[{"id":523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5933:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5939:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5943:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5925:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"5925:24:2"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"5289:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:2","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"5683:4:2","nodeType":"VariableDeclaration","scope":529,"src":"5675:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"5697:2:2","nodeType":"VariableDeclaration","scope":529,"src":"5689:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"5709:5:2","nodeType":"VariableDeclaration","scope":529,"src":"5701:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5725:0:2"},"scope":799,"src":"5656:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"6346:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6360:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:2","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":576,"nodeType":"Block","src":"6534:362:2","statements":[{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:2","nodeType":"VariableDeclaration","scope":576,"src":"6548:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":555,"initialValue":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6570:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6580:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6603:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6617:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":566,"nodeType":"IfStatement","src":"6599:115:2","trueBody":{"id":565,"nodeType":"Block","src":"6624:90:2","statements":[{"errorCall":{"arguments":[{"id":560,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6674:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6680:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6693:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6649:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"RevertStatement","src":"6642:57:2"}]}},{"id":575,"nodeType":"UncheckedBlock","src":"6727:159:2","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":567,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6834:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":569,"indexExpression":{"id":568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6844:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6852:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6866:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":574,"nodeType":"ExpressionStatement","src":"6834:37:2"}]}]},"id":577,"nodeType":"IfStatement","src":"6356:540:2","trueBody":{"id":549,"nodeType":"Block","src":"6380:148:2","statements":[{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6496:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6512:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"6496:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6910:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:2","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":597,"nodeType":"Block","src":"7125:206:2","statements":[{"id":596,"nodeType":"UncheckedBlock","src":"7139:182:2","statements":[{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":590,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"7284:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":592,"indexExpression":{"id":591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7294:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7301:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"7284:22:2"}]}]},"id":598,"nodeType":"IfStatement","src":"6906:425:2","trueBody":{"id":589,"nodeType":"Block","src":"6928:191:2","statements":[{"id":588,"nodeType":"UncheckedBlock","src":"6942:167:2","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"7073:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7089:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":587,"nodeType":"ExpressionStatement","src":"7073:21:2"}]}]}},{"eventCall":{"arguments":[{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"7355:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7361:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7365:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":599,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7346:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"EmitStatement","src":"7341:30:2"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"5962:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:2","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"from","nameLocation":"6296:4:2","nodeType":"VariableDeclaration","scope":606,"src":"6288:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"6310:2:2","nodeType":"VariableDeclaration","scope":606,"src":"6302:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"6322:5:2","nodeType":"VariableDeclaration","scope":606,"src":"6314:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:2"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"6346:0:2"},"scope":799,"src":"6271:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"7777:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7791:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:2","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"7787:91:2","trueBody":{"id":627,"nodeType":"Block","src":"7814:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":620,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7835:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"RevertStatement","src":"7828:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:2","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7907:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7916:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7887:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"7887:35:2"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"7384:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"account","nameLocation":"7744:7:2","nodeType":"VariableDeclaration","scope":639,"src":"7736:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"value","nameLocation":"7761:5:2","nodeType":"VariableDeclaration","scope":639,"src":"7753:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:2"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"7777:0:2"},"scope":799,"src":"7721:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"8303:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8317:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"8313:89:2","trueBody":{"id":660,"nodeType":"Block","src":"8340:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:2","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8361:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"RevertStatement","src":"8354:37:2"}]}},{"expression":{"arguments":[{"id":663,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8419:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8440:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8411:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"8411:35:2"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"7935:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"8270:7:2","nodeType":"VariableDeclaration","scope":672,"src":"8262:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"value","nameLocation":"8287:5:2","nodeType":"VariableDeclaration","scope":672,"src":"8279:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:2"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"8303:0:2"},"scope":799,"src":"8247:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"9063:54:2","statements":[{"expression":{"arguments":[{"id":683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9082:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9089:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"9098:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":682,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"9073:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"9073:37:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"8459:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"owner","nameLocation":"9015:5:2","nodeType":"VariableDeclaration","scope":690,"src":"9007:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"spender","nameLocation":"9030:7:2","nodeType":"VariableDeclaration","scope":690,"src":"9022:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"value","nameLocation":"9047:5:2","nodeType":"VariableDeclaration","scope":690,"src":"9039:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"9063:0:2"},"scope":799,"src":"8989:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"10047:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10061:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:2","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"10057:89:2","trueBody":{"id":715,"nodeType":"Block","src":"10082:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:2","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"10103:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"RevertStatement","src":"10096:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10159:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"10155:90:2","trueBody":{"id":730,"nodeType":"Block","src":"10182:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10203:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"RevertStatement","src":"10196:38:2"}]}},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":732,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"10254:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":735,"indexExpression":{"id":733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10266:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":736,"indexExpression":{"id":734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10273:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10284:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"10254:35:2"},{"condition":{"id":740,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10303:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"10299:76:2","trueBody":{"id":747,"nodeType":"Block","src":"10314:61:2","statements":[{"eventCall":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10342:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10349:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10358:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10333:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"10328:36:2"}]}}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"9123:821:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"9975:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9967:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"spender","nameLocation":"9990:7:2","nodeType":"VariableDeclaration","scope":750,"src":"9982:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"10007:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9999:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:2","nodeType":"VariableDeclaration","scope":750,"src":"10014:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"10047:0:2"},"scope":799,"src":"9949:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"10752:388:2","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:2","nodeType":"VariableDeclaration","scope":797,"src":"10762:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10799:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10806:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10789:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10828:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:2","memberName":"max","nodeType":"MemberAccess","src":"10848:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":796,"nodeType":"IfStatement","src":"10824:310:2","trueBody":{"id":795,"nodeType":"Block","src":"10867:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10885:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10904:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"10881:130:2","trueBody":{"id":783,"nodeType":"Block","src":"10911:100:2","statements":[{"errorCall":{"arguments":[{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10963:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10972:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10990:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10936:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"RevertStatement","src":"10929:67:2"}]}},{"id":794,"nodeType":"UncheckedBlock","src":"11024:100:2","statements":[{"expression":{"arguments":[{"id":786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"11061:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"11068:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"11077:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"11096:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"11052:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"11052:57:2"}]}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"10387:271:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"owner","nameLocation":"10696:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10688:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"spender","nameLocation":"10711:7:2","nodeType":"VariableDeclaration","scope":798,"src":"10703:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"10728:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10720:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"10752:0:2"},"scope":799,"src":"10663:477:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":800,"src":"1401:9741:2","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"105:11038:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"132:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":877,"linearizedBaseContracts":[877],"name":"IERC20","nameLocation":"213:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"226:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":811,"name":"Transfer","nameLocation":"395:8:3","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:3","nodeType":"VariableDeclaration","scope":811,"src":"404:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:3","nodeType":"VariableDeclaration","scope":811,"src":"426:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:3","nodeType":"VariableDeclaration","scope":811,"src":"446:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:3"},"src":"389:72:3"},{"anonymous":false,"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"467:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":820,"name":"Approval","nameLocation":"626:8:3","nodeType":"EventDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:3","nodeType":"VariableDeclaration","scope":820,"src":"635:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:3","nodeType":"VariableDeclaration","scope":820,"src":"658:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:3","nodeType":"VariableDeclaration","scope":820,"src":"683:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:3"},"src":"620:78:3"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"704:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":877,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"835:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:3","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"938:7:3","nodeType":"VariableDeclaration","scope":834,"src":"930:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"970:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:3"},"scope":877,"src":"911:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"985:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"to","nameLocation":"1229:2:3","nodeType":"VariableDeclaration","scope":844,"src":"1221:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"1241:5:3","nodeType":"VariableDeclaration","scope":844,"src":"1233:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"1266:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:3"},"scope":877,"src":"1203:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1278:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1574:5:3","nodeType":"VariableDeclaration","scope":854,"src":"1566:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1589:7:3","nodeType":"VariableDeclaration","scope":854,"src":"1581:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1621:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:3"},"scope":877,"src":"1547:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1636:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:3","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"2333:7:3","nodeType":"VariableDeclaration","scope":864,"src":"2325:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"2350:5:3","nodeType":"VariableDeclaration","scope":864,"src":"2342:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"2375:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:3"},"scope":877,"src":"2308:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2387:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"from","nameLocation":"2719:4:3","nodeType":"VariableDeclaration","scope":876,"src":"2711:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"2733:2:3","nodeType":"VariableDeclaration","scope":876,"src":"2725:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"2745:5:3","nodeType":"VariableDeclaration","scope":876,"src":"2737:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2770:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:3"},"scope":877,"src":"2689:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":878,"src":"203:2575:3","usedErrors":[],"usedEvents":[811,820]}],"src":"106:2673:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[877],"IERC20Metadata":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":904,"sourceUnit":878,"src":"151:37:4","symbolAliases":[{"foreign":{"id":880,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":883,"name":"IERC20","nameLocations":["305:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"305:6:4"},"id":884,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"190:86:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":903,"linearizedBaseContracts":[903,877],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":903,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":903,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":899,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":903,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":904,"src":"277:405:4","usedErrors":[],"usedEvents":[811,820]}],"src":"125:558:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[939]},"id":940,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"149:1963:5","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":939,"linearizedBaseContracts":[939],"name":"IERC20Permit","nameLocation":"2123:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"2142:850:5","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":924,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:5","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"owner","nameLocation":"3030:5:5","nodeType":"VariableDeclaration","scope":924,"src":"3022:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"spender","nameLocation":"3053:7:5","nodeType":"VariableDeclaration","scope":924,"src":"3045:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"value","nameLocation":"3078:5:5","nodeType":"VariableDeclaration","scope":924,"src":"3070:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":915,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:5","nodeType":"VariableDeclaration","scope":924,"src":"3093:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"v","nameLocation":"3125:1:5","nodeType":"VariableDeclaration","scope":924,"src":"3119:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":916,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"r","nameLocation":"3144:1:5","nodeType":"VariableDeclaration","scope":924,"src":"3136:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"s","nameLocation":"3163:1:5","nodeType":"VariableDeclaration","scope":924,"src":"3155:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:5"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[],"src":"3179:0:5"},"scope":939,"src":"2997:183:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"3186:294:5","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":932,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:5","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"owner","nameLocation":"3509:5:5","nodeType":"VariableDeclaration","scope":932,"src":"3501:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:5"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"3539:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:5"},"scope":939,"src":"3485:63:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"3554:128:5","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":938,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:5","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"3765:2:5"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":938,"src":"3791:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:5"},"scope":939,"src":"3740:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":940,"src":"2113:1689:5","usedErrors":[],"usedEvents":[]}],"src":"123:3680:5"},"id":5},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2654],"IERC20":[877],"IERC20Permit":[939],"SafeERC20":[1229]},"id":1230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":941,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":943,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1230,"sourceUnit":878,"src":"141:37:6","symbolAliases":[{"foreign":{"id":942,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"149:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":945,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1230,"sourceUnit":940,"src":"179:60:6","symbolAliases":[{"foreign":{"id":944,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"187:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1230,"sourceUnit":2655,"src":"240:51:6","symbolAliases":[{"foreign":{"id":946,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"248:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"293:457:6","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1229,"linearizedBaseContracts":[1229],"name":"SafeERC20","nameLocation":"759:9:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":951,"libraryName":{"id":949,"name":"Address","nameLocations":["781:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2654,"src":"781:7:6"},"nodeType":"UsingForDirective","src":"775:26:6","typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"807:64:6","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":956,"name":"SafeERC20FailedOperation","nameLocation":"882:24:6","nodeType":"ErrorDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"token","nameLocation":"915:5:6","nodeType":"VariableDeclaration","scope":956,"src":"907:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:6"},"src":"876:46:6"},{"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"928:71:6","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":965,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:6","nodeType":"ErrorDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"spender","nameLocation":"1051:7:6","nodeType":"VariableDeclaration","scope":965,"src":"1043:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:6","nodeType":"VariableDeclaration","scope":965,"src":"1060:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:6","nodeType":"VariableDeclaration","scope":965,"src":"1086:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:6"},"src":"1004:109:6"},{"body":{"id":988,"nodeType":"Block","src":"1375:88:6","statements":[{"expression":{"arguments":[{"id":977,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"1405:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":980,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"1427:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":844,"src":"1427:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":982,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"1444:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"1448:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":978,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":976,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"1385:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"ExpressionStatement","src":"1385:71:6"}]},"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"1119:179:6","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":989,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:6","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"token","nameLocation":"1332:5:6","nodeType":"VariableDeclaration","scope":989,"src":"1325:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":968,"nodeType":"UserDefinedTypeName","pathNode":{"id":967,"name":"IERC20","nameLocations":["1325:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1325:6:6"},"referencedDeclaration":877,"src":"1325:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"to","nameLocation":"1347:2:6","nodeType":"VariableDeclaration","scope":989,"src":"1339:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"value","nameLocation":"1359:5:6","nodeType":"VariableDeclaration","scope":989,"src":"1351:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:6"},"returnParameters":{"id":975,"nodeType":"ParameterList","parameters":[],"src":"1375:0:6"},"scope":1229,"src":"1303:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1015,"nodeType":"Block","src":"1792:98:6","statements":[{"expression":{"arguments":[{"id":1003,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"1822:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1006,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"1844:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":876,"src":"1844:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1008,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"1865:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1009,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"1871:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"1875:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1004,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1002,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"1802:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1014,"nodeType":"ExpressionStatement","src":"1802:81:6"}]},"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"1469:228:6","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1016,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:6","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"token","nameLocation":"1735:5:6","nodeType":"VariableDeclaration","scope":1016,"src":"1728:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":992,"nodeType":"UserDefinedTypeName","pathNode":{"id":991,"name":"IERC20","nameLocations":["1728:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1728:6:6"},"referencedDeclaration":877,"src":"1728:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"from","nameLocation":"1750:4:6","nodeType":"VariableDeclaration","scope":1016,"src":"1742:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"to","nameLocation":"1764:2:6","nodeType":"VariableDeclaration","scope":1016,"src":"1756:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":999,"mutability":"mutable","name":"value","nameLocation":"1776:5:6","nodeType":"VariableDeclaration","scope":1016,"src":"1768:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:6"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"1792:0:6"},"scope":1229,"src":"1702:188:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1046,"nodeType":"Block","src":"2167:139:6","statements":[{"assignments":[1028],"declarations":[{"constant":false,"id":1028,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:6","nodeType":"VariableDeclaration","scope":1046,"src":"2177:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1037,"initialValue":{"arguments":[{"arguments":[{"id":1033,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1229","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1229","typeString":"library SafeERC20"}],"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:6","typeDescriptions":{}}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1035,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"2231:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1029,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2200:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":854,"src":"2200:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:6"},{"expression":{"arguments":[{"id":1039,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2262:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},{"id":1040,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"2269:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1041,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"2278:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"2293:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1038,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"2249:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1045,"nodeType":"ExpressionStatement","src":"2249:50:6"}]},"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"1896:180:6","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1047,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:6","nodeType":"FunctionDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1020,"mutability":"mutable","name":"token","nameLocation":"2119:5:6","nodeType":"VariableDeclaration","scope":1047,"src":"2112:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":1019,"nodeType":"UserDefinedTypeName","pathNode":{"id":1018,"name":"IERC20","nameLocations":["2112:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"2112:6:6"},"referencedDeclaration":877,"src":"2112:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"spender","nameLocation":"2134:7:6","nodeType":"VariableDeclaration","scope":1047,"src":"2126:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"value","nameLocation":"2151:5:6","nodeType":"VariableDeclaration","scope":1047,"src":"2143:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:6"},"returnParameters":{"id":1026,"nodeType":"ParameterList","parameters":[],"src":"2167:0:6"},"scope":1229,"src":"2081:225:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1089,"nodeType":"Block","src":"2607:370:6","statements":[{"id":1088,"nodeType":"UncheckedBlock","src":"2617:354:6","statements":[{"assignments":[1059],"declarations":[{"constant":false,"id":1059,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:6","nodeType":"VariableDeclaration","scope":1088,"src":"2641:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1068,"initialValue":{"arguments":[{"arguments":[{"id":1064,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1229","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1229","typeString":"library SafeERC20"}],"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:6","typeDescriptions":{}}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1066,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"2699:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1060,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2668:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":854,"src":"2668:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1069,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2725:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1070,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2744:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1079,"nodeType":"IfStatement","src":"2721:160:6","trueBody":{"id":1078,"nodeType":"Block","src":"2763:118:6","statements":[{"errorCall":{"arguments":[{"id":1073,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"2821:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2830:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1075,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2848:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"2788:32:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"RevertStatement","src":"2781:85:6"}]}},{"expression":{"arguments":[{"id":1081,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2907:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},{"id":1082,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"2914:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1083,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2923:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1084,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2942:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1080,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"2894:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1087,"nodeType":"ExpressionStatement","src":"2894:66:6"}]}]},"documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"2312:192:6","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:6","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"token","nameLocation":"2547:5:6","nodeType":"VariableDeclaration","scope":1090,"src":"2540:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":1050,"nodeType":"UserDefinedTypeName","pathNode":{"id":1049,"name":"IERC20","nameLocations":["2540:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"2540:6:6"},"referencedDeclaration":877,"src":"2540:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"spender","nameLocation":"2562:7:6","nodeType":"VariableDeclaration","scope":1090,"src":"2554:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:6","nodeType":"VariableDeclaration","scope":1090,"src":"2571:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:6"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[],"src":"2607:0:6"},"scope":1229,"src":"2509:468:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1136,"nodeType":"Block","src":"3373:303:6","statements":[{"assignments":[1102],"declarations":[{"constant":false,"id":1102,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:6","nodeType":"VariableDeclaration","scope":1136,"src":"3383:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1101,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1111,"initialValue":{"arguments":[{"expression":{"id":1105,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"3426:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":864,"src":"3426:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1107,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"3442:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"3451:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1103,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:6"},{"condition":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:6","subExpression":{"arguments":[{"id":1113,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"3498:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},{"id":1114,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3505:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1112,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"3474:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1135,"nodeType":"IfStatement","src":"3469:201:6","trueBody":{"id":1134,"nodeType":"Block","src":"3520:150:6","statements":[{"expression":{"arguments":[{"id":1118,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"3554:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1121,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"3576:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":864,"src":"3576:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1123,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"3592:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1119,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1117,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"3534:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"3534:71:6"},{"expression":{"arguments":[{"id":1130,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"3639:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},{"id":1131,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3646:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1129,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"3619:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1133,"nodeType":"ExpressionStatement","src":"3619:40:6"}]}}]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"2983:308:6","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1137,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:6","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"token","nameLocation":"3325:5:6","nodeType":"VariableDeclaration","scope":1137,"src":"3318:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":1093,"nodeType":"UserDefinedTypeName","pathNode":{"id":1092,"name":"IERC20","nameLocations":["3318:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"3318:6:6"},"referencedDeclaration":877,"src":"3318:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"spender","nameLocation":"3340:7:6","nodeType":"VariableDeclaration","scope":1137,"src":"3332:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"value","nameLocation":"3357:5:6","nodeType":"VariableDeclaration","scope":1137,"src":"3349:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:6"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[],"src":"3373:0:6"},"scope":1229,"src":"3296:380:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1178,"nodeType":"Block","src":"4129:559:6","statements":[{"assignments":[1147],"declarations":[{"constant":false,"id":1147,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:6","nodeType":"VariableDeclaration","scope":1178,"src":"4478:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1146,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1155,"initialValue":{"arguments":[{"id":1153,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"4532:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1150,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4512:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}],"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:6","typeDescriptions":{}}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:6","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2475,"src":"4504:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1156,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"4551:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:6","memberName":"length","nodeType":"MemberAccess","src":"4551:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:6","subExpression":{"arguments":[{"id":1162,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"4589:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1163,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:6","typeDescriptions":{}}}],"id":1165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1160,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:6","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1177,"nodeType":"IfStatement","src":"4547:135:6","trueBody":{"id":1176,"nodeType":"Block","src":"4610:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1172,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4664:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:6","typeDescriptions":{}}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1169,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"4631:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"RevertStatement","src":"4624:47:6"}]}}]},"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"3682:372:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1179,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:6","nodeType":"FunctionDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"token","nameLocation":"4095:5:6","nodeType":"VariableDeclaration","scope":1179,"src":"4088:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":1140,"nodeType":"UserDefinedTypeName","pathNode":{"id":1139,"name":"IERC20","nameLocations":["4088:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"4088:6:6"},"referencedDeclaration":877,"src":"4088:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"data","nameLocation":"4115:4:6","nodeType":"VariableDeclaration","scope":1179,"src":"4102:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1142,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:6"},"returnParameters":{"id":1145,"nodeType":"ParameterList","parameters":[],"src":"4129:0:6"},"scope":1229,"src":"4059:629:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1227,"nodeType":"Block","src":"5278:489:6","statements":[{"assignments":[1191,1193],"declarations":[{"constant":false,"id":1191,"mutability":"mutable","name":"success","nameLocation":"5579:7:6","nodeType":"VariableDeclaration","scope":1227,"src":"5574:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1190,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:6","nodeType":"VariableDeclaration","scope":1227,"src":"5588:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1192,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1201,"initialValue":{"arguments":[{"id":1199,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5635:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1196,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"5623:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}],"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:6","typeDescriptions":{}}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:6","memberName":"call","nodeType":"MemberAccess","src":"5615:19:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:6"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1202,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"5657:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1203,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"5669:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:6","memberName":"length","nodeType":"MemberAccess","src":"5669:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1209,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"5706:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1210,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:6","typeDescriptions":{}}}],"id":1212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1207,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:6","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1219,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"5738:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:6","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:6","memberName":"code","nodeType":"MemberAccess","src":"5730:19:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:6","memberName":"length","nodeType":"MemberAccess","src":"5730:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1189,"id":1226,"nodeType":"Return","src":"5650:110:6"}]},"documentation":{"id":1180,"nodeType":"StructuredDocumentation","src":"4694:490:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1228,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:6","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"token","nameLocation":"5229:5:6","nodeType":"VariableDeclaration","scope":1228,"src":"5222:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":1182,"nodeType":"UserDefinedTypeName","pathNode":{"id":1181,"name":"IERC20","nameLocations":["5222:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"5222:6:6"},"referencedDeclaration":877,"src":"5222:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"data","nameLocation":"5249:4:6","nodeType":"VariableDeclaration","scope":1228,"src":"5236:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1184,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:6"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1228,"src":"5272:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1187,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:6"},"scope":1229,"src":"5189:578:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1230,"src":"751:5018:6","usedErrors":[956,965],"usedEvents":[]}],"src":"115:5655:6"},"id":6},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2684],"ERC165":[3500],"ERC721":[2238],"IERC165":[3512],"IERC721":[2355],"IERC721Errors":[237],"IERC721Metadata":[2401],"IERC721Receiver":[2373],"Strings":[2939]},"id":2239,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":2356,"src":"133:38:7","symbolAliases":[{"foreign":{"id":1232,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"141:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1235,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":2374,"src":"172:54:7","symbolAliases":[{"foreign":{"id":1234,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"180:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":2402,"src":"227:65:7","symbolAliases":[{"foreign":{"id":1236,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"235:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1239,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":2685,"src":"293:48:7","symbolAliases":[{"foreign":{"id":1238,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"301:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1241,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":2940,"src":"342:48:7","symbolAliases":[{"foreign":{"id":1240,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"350:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":3501,"src":"391:69:7","symbolAliases":[{"foreign":{"id":1242,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"399:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1243,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"408:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":285,"src":"461:66:7","symbolAliases":[{"foreign":{"id":1245,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"469:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1248,"name":"Context","nameLocations":["804:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2684,"src":"804:7:7"},"id":1249,"nodeType":"InheritanceSpecifier","src":"804:7:7"},{"baseName":{"id":1250,"name":"ERC165","nameLocations":["813:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3500,"src":"813:6:7"},"id":1251,"nodeType":"InheritanceSpecifier","src":"813:6:7"},{"baseName":{"id":1252,"name":"IERC721","nameLocations":["821:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2355,"src":"821:7:7"},"id":1253,"nodeType":"InheritanceSpecifier","src":"821:7:7"},{"baseName":{"id":1254,"name":"IERC721Metadata","nameLocations":["830:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"830:15:7"},"id":1255,"nodeType":"InheritanceSpecifier","src":"830:15:7"},{"baseName":{"id":1256,"name":"IERC721Errors","nameLocations":["847:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"847:13:7"},"id":1257,"nodeType":"InheritanceSpecifier","src":"847:13:7"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"529:246:7","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2238,"linearizedBaseContracts":[2238,237,2401,2355,3500,3512,2684],"name":"ERC721","nameLocation":"794:6:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1260,"libraryName":{"id":1258,"name":"Strings","nameLocations":["873:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2939,"src":"873:7:7"},"nodeType":"UsingForDirective","src":"867:26:7","typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1262,"mutability":"mutable","name":"_name","nameLocation":"932:5:7","nodeType":"VariableDeclaration","scope":2238,"src":"917:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1261,"name":"string","nodeType":"ElementaryTypeName","src":"917:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1264,"mutability":"mutable","name":"_symbol","nameLocation":"979:7:7","nodeType":"VariableDeclaration","scope":2238,"src":"964:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1263,"name":"string","nodeType":"ElementaryTypeName","src":"964:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1268,"mutability":"mutable","name":"_owners","nameLocation":"1037:7:7","nodeType":"VariableDeclaration","scope":2238,"src":"993:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1267,"keyName":"tokenId","keyNameLocation":"1009:7:7","keyType":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"993:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1272,"mutability":"mutable","name":"_balances","nameLocation":"1093:9:7","nodeType":"VariableDeclaration","scope":2238,"src":"1051:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1271,"keyName":"owner","keyNameLocation":"1067:5:7","keyType":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1051:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1276,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1153:15:7","nodeType":"VariableDeclaration","scope":2238,"src":"1109:59:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1275,"keyName":"tokenId","keyNameLocation":"1125:7:7","keyType":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1109:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1282,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1243:18:7","nodeType":"VariableDeclaration","scope":2238,"src":"1175:86:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1281,"keyName":"owner","keyNameLocation":"1191:5:7","keyType":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"1183:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1175:59:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1280,"keyName":"operator","keyNameLocation":"1216:8:7","keyType":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"1208:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1200:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1279,"name":"bool","nodeType":"ElementaryTypeName","src":"1228:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1298,"nodeType":"Block","src":"1437:57:7","statements":[{"expression":{"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1290,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"1447:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1291,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"1455:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1447:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1293,"nodeType":"ExpressionStatement","src":"1447:13:7"},{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1294,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"1470:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1295,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"1480:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1470:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1297,"nodeType":"ExpressionStatement","src":"1470:17:7"}]},"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"1268:108:7","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1299,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"name_","nameLocation":"1407:5:7","nodeType":"VariableDeclaration","scope":1299,"src":"1393:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1284,"name":"string","nodeType":"ElementaryTypeName","src":"1393:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"symbol_","nameLocation":"1428:7:7","nodeType":"VariableDeclaration","scope":1299,"src":"1414:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1286,"name":"string","nodeType":"ElementaryTypeName","src":"1414:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1392:44:7"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[],"src":"1437:0:7"},"scope":2238,"src":"1381:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3499,3511],"body":{"id":1329,"nodeType":"Block","src":"1669:192:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1310,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"1698:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1312,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"1718:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2355_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2355_$","typeString":"type(contract IERC721)"}],"id":1311,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1713:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2355","typeString":"type(contract IERC721)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1727:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1713:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1698:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1316,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"1754:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1318,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"1774:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2401_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2401_$","typeString":"type(contract IERC721Metadata)"}],"id":1317,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1769:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2401","typeString":"type(contract IERC721Metadata)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1791:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1769:33:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1754:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:104:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1325,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"1842:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1323,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1818:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2238_$","typeString":"type(contract super ERC721)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1824:17:7","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3499,"src":"1818:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1818:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:156:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1309,"id":1328,"nodeType":"Return","src":"1679:175:7"}]},"documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"1500:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1330,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1570:17:7","nodeType":"FunctionDefinition","overrides":{"id":1306,"nodeType":"OverrideSpecifier","overrides":[{"id":1304,"name":"ERC165","nameLocations":["1637:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3500,"src":"1637:6:7"},{"id":1305,"name":"IERC165","nameLocations":["1645:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3512,"src":"1645:7:7"}],"src":"1628:25:7"},"parameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"interfaceId","nameLocation":"1595:11:7","nodeType":"VariableDeclaration","scope":1330,"src":"1588:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1301,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1588:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1587:20:7"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1330,"src":"1663:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1307,"name":"bool","nodeType":"ElementaryTypeName","src":"1663:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1662:6:7"},"scope":2238,"src":"1561:300:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2280],"body":{"id":1357,"nodeType":"Block","src":"1992:136:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2006:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2023:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2015:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"2015:7:7","typeDescriptions":{}}},"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1352,"nodeType":"IfStatement","src":"2002:87:7","trueBody":{"id":1351,"nodeType":"Block","src":"2027:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2075:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2067:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"2067:7:7","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1344,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2048:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1350,"nodeType":"RevertStatement","src":"2041:37:7"}]}},{"expression":{"baseExpression":{"id":1353,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"2105:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1355,"indexExpression":{"id":1354,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2115:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2105:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1337,"id":1356,"nodeType":"Return","src":"2098:23:7"}]},"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"1867:48:7","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1358,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1929:9:7","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"owner","nameLocation":"1947:5:7","nodeType":"VariableDeclaration","scope":1358,"src":"1939:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1938:15:7"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1358,"src":"1983:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1982:9:7"},"scope":2238,"src":"1920:208:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2288],"body":{"id":1370,"nodeType":"Block","src":"2257:46:7","statements":[{"expression":{"arguments":[{"id":1367,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"2288:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1366,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"2274:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1365,"id":1369,"nodeType":"Return","src":"2267:29:7"}]},"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"2134:46:7","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1371,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2194:7:7","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"tokenId","nameLocation":"2210:7:7","nodeType":"VariableDeclaration","scope":1371,"src":"2202:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:17:7"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1371,"src":"2248:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2247:9:7"},"scope":2238,"src":"2185:118:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2386],"body":{"id":1379,"nodeType":"Block","src":"2425:29:7","statements":[{"expression":{"id":1377,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"2442:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1376,"id":1378,"nodeType":"Return","src":"2435:12:7"}]},"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"2309:51:7","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1380,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2374:4:7","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[],"src":"2378:2:7"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1380,"src":"2410:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1374,"name":"string","nodeType":"ElementaryTypeName","src":"2410:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2409:15:7"},"scope":2238,"src":"2365:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2392],"body":{"id":1388,"nodeType":"Block","src":"2580:31:7","statements":[{"expression":{"id":1386,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"2597:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1385,"id":1387,"nodeType":"Return","src":"2590:14:7"}]},"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"2460:53:7","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1389,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2527:6:7","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"2533:2:7"},"returnParameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"2565:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1383,"name":"string","nodeType":"ElementaryTypeName","src":"2565:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2564:15:7"},"scope":2238,"src":"2518:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2400],"body":{"id":1424,"nodeType":"Block","src":"2756:176:7","statements":[{"expression":{"arguments":[{"id":1398,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"2780:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1397,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"2766:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2766:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1400,"nodeType":"ExpressionStatement","src":"2766:22:7"},{"assignments":[1402],"declarations":[{"constant":false,"id":1402,"mutability":"mutable","name":"baseURI","nameLocation":"2813:7:7","nodeType":"VariableDeclaration","scope":1424,"src":"2799:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1401,"name":"string","nodeType":"ElementaryTypeName","src":"2799:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1405,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1403,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2823:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2823:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2799:34:7"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1408,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"2856:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2850:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1406,"name":"bytes","nodeType":"ElementaryTypeName","src":"2850:5:7","typeDescriptions":{}}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:6:7","memberName":"length","nodeType":"MemberAccess","src":"2850:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2874:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2850:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2923:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2850:75:7","trueExpression":{"arguments":[{"id":1416,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"2892:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1417,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"2901:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2909:8:7","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2752,"src":"2901:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2901:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2878:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1413,"name":"string","nodeType":"ElementaryTypeName","src":"2878:6:7","typeDescriptions":{}}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2885:6:7","memberName":"concat","nodeType":"MemberAccess","src":"2878:13:7","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2878:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1396,"id":1423,"nodeType":"Return","src":"2843:82:7"}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"2617:55:7","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1425,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2686:8:7","nodeType":"FunctionDefinition","parameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"tokenId","nameLocation":"2703:7:7","nodeType":"VariableDeclaration","scope":1425,"src":"2695:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2695:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2694:17:7"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1425,"src":"2741:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1394,"name":"string","nodeType":"ElementaryTypeName","src":"2741:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2740:15:7"},"scope":2238,"src":"2677:255:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1433,"nodeType":"Block","src":"3240:26:7","statements":[{"expression":{"hexValue":"","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3257:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1430,"id":1432,"nodeType":"Return","src":"3250:9:7"}]},"documentation":{"id":1426,"nodeType":"StructuredDocumentation","src":"2938:231:7","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1434,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3183:8:7","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[],"src":"3191:2:7"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1434,"src":"3225:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1428,"name":"string","nodeType":"ElementaryTypeName","src":"3225:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3224:15:7"},"scope":2238,"src":"3174:92:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2328],"body":{"id":1449,"nodeType":"Block","src":"3384:52:7","statements":[{"expression":{"arguments":[{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"3403:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1444,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"3407:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1445,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3416:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1442,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2041,2107],"referencedDeclaration":2041,"src":"3394:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1448,"nodeType":"ExpressionStatement","src":"3394:35:7"}]},"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"3272:46:7","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1450,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3332:7:7","nodeType":"FunctionDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"to","nameLocation":"3348:2:7","nodeType":"VariableDeclaration","scope":1450,"src":"3340:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1436,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"tokenId","nameLocation":"3360:7:7","nodeType":"VariableDeclaration","scope":1450,"src":"3352:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"3352:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3339:29:7"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[],"src":"3384:0:7"},"scope":2238,"src":"3323:113:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2344],"body":{"id":1466,"nodeType":"Block","src":"3573:78:7","statements":[{"expression":{"arguments":[{"id":1459,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"3597:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1458,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"3583:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1461,"nodeType":"ExpressionStatement","src":"3583:22:7"},{"expression":{"arguments":[{"id":1463,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"3636:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1462,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"3623:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1457,"id":1465,"nodeType":"Return","src":"3616:28:7"}]},"documentation":{"id":1451,"nodeType":"StructuredDocumentation","src":"3442:50:7","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3506:11:7","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:7","nodeType":"VariableDeclaration","scope":1467,"src":"3518:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3517:17:7"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1467,"src":"3564:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"3564:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3563:9:7"},"scope":2238,"src":"3497:154:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2336],"body":{"id":1482,"nodeType":"Block","src":"3793:69:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1476,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3822:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1478,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"3836:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1479,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"3846:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1475,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"3803:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3803:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1481,"nodeType":"ExpressionStatement","src":"3803:52:7"}]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"3657:56:7","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1483,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3727:17:7","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"operator","nameLocation":"3753:8:7","nodeType":"VariableDeclaration","scope":1483,"src":"3745:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"approved","nameLocation":"3768:8:7","nodeType":"VariableDeclaration","scope":1483,"src":"3763:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1471,"name":"bool","nodeType":"ElementaryTypeName","src":"3763:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3744:33:7"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[],"src":"3793:0:7"},"scope":2238,"src":"3718:144:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2354],"body":{"id":1499,"nodeType":"Block","src":"4022:59:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1493,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"4039:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1495,"indexExpression":{"id":1494,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"4058:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1497,"indexExpression":{"id":1496,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"4065:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1492,"id":1498,"nodeType":"Return","src":"4032:42:7"}]},"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"3868:55:7","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1500,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3937:16:7","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"owner","nameLocation":"3962:5:7","nodeType":"VariableDeclaration","scope":1500,"src":"3954:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"3954:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"operator","nameLocation":"3977:8:7","nodeType":"VariableDeclaration","scope":1500,"src":"3969:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"3969:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3953:33:7"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1500,"src":"4016:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1490,"name":"bool","nodeType":"ElementaryTypeName","src":"4016:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4015:6:7"},"scope":2238,"src":"3928:153:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2320],"body":{"id":1545,"nodeType":"Block","src":"4223:498:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1510,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"4237:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4251:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"4243:7:7","typeDescriptions":{}}},"id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4237:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1524,"nodeType":"IfStatement","src":"4233:87:7","trueBody":{"id":1523,"nodeType":"Block","src":"4255:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4306:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4298:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"4298:7:7","typeDescriptions":{}}},"id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4298:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1516,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4276:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"RevertStatement","src":"4269:40:7"}]}},{"assignments":[1526],"declarations":[{"constant":false,"id":1526,"mutability":"mutable","name":"previousOwner","nameLocation":"4546:13:7","nodeType":"VariableDeclaration","scope":1545,"src":"4538:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"4538:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1533,"initialValue":{"arguments":[{"id":1528,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"4570:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1529,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4574:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1530,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4583:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4583:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1527,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"4562:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4538:58:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"4610:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1535,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"4627:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4610:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1544,"nodeType":"IfStatement","src":"4606:109:7","trueBody":{"id":1543,"nodeType":"Block","src":"4633:82:7","statements":[{"errorCall":{"arguments":[{"id":1538,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"4675:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1539,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4681:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1540,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"4690:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1537,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4654:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4654:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1542,"nodeType":"RevertStatement","src":"4647:57:7"}]}}]},"documentation":{"id":1501,"nodeType":"StructuredDocumentation","src":"4087:51:7","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1546,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4152:12:7","nodeType":"FunctionDefinition","parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"from","nameLocation":"4173:4:7","nodeType":"VariableDeclaration","scope":1546,"src":"4165:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1502,"name":"address","nodeType":"ElementaryTypeName","src":"4165:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"to","nameLocation":"4187:2:7","nodeType":"VariableDeclaration","scope":1546,"src":"4179:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"4179:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"tokenId","nameLocation":"4199:7:7","nodeType":"VariableDeclaration","scope":1546,"src":"4191:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"4191:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4164:43:7"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[],"src":"4223:0:7"},"scope":2238,"src":"4143:578:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2310],"body":{"id":1563,"nodeType":"Block","src":"4863:56:7","statements":[{"expression":{"arguments":[{"id":1557,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4890:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1558,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"4896:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1559,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"4900:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4909:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1556,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1564,1590],"referencedDeclaration":1590,"src":"4873:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1562,"nodeType":"ExpressionStatement","src":"4873:39:7"}]},"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"4727:55:7","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1564,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4796:16:7","nodeType":"FunctionDefinition","parameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"from","nameLocation":"4821:4:7","nodeType":"VariableDeclaration","scope":1564,"src":"4813:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"4813:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"to","nameLocation":"4835:2:7","nodeType":"VariableDeclaration","scope":1564,"src":"4827:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1553,"mutability":"mutable","name":"tokenId","nameLocation":"4847:7:7","nodeType":"VariableDeclaration","scope":1564,"src":"4839:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"4839:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4812:43:7"},"returnParameters":{"id":1555,"nodeType":"ParameterList","parameters":[],"src":"4863:0:7"},"scope":2238,"src":"4787:132:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2300],"body":{"id":1589,"nodeType":"Block","src":"5088:105:7","statements":[{"expression":{"arguments":[{"id":1577,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"5111:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"5117:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1579,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5121:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1576,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"5098:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"ExpressionStatement","src":"5098:31:7"},{"expression":{"arguments":[{"id":1583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"5162:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1584,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"5168:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1585,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5172:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1586,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"5181:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1582,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"5139:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5139:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1588,"nodeType":"ExpressionStatement","src":"5139:47:7"}]},"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"4925:55:7","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1590,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4994:16:7","nodeType":"FunctionDefinition","parameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"from","nameLocation":"5019:4:7","nodeType":"VariableDeclaration","scope":1590,"src":"5011:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"to","nameLocation":"5033:2:7","nodeType":"VariableDeclaration","scope":1590,"src":"5025:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"5025:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"tokenId","nameLocation":"5045:7:7","nodeType":"VariableDeclaration","scope":1590,"src":"5037:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5037:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"data","nameLocation":"5067:4:7","nodeType":"VariableDeclaration","scope":1590,"src":"5054:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1572,"name":"bytes","nodeType":"ElementaryTypeName","src":"5054:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5010:62:7"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"5088:0:7"},"scope":2238,"src":"4985:208:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1602,"nodeType":"Block","src":"5782:40:7","statements":[{"expression":{"baseExpression":{"id":1598,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"5799:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1600,"indexExpression":{"id":1599,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"5807:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5799:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1597,"id":1601,"nodeType":"Return","src":"5792:23:7"}]},"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"5199:503:7","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1603,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5716:8:7","nodeType":"FunctionDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"tokenId","nameLocation":"5733:7:7","nodeType":"VariableDeclaration","scope":1603,"src":"5725:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"5725:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5724:17:7"},"returnParameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1603,"src":"5773:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"5773:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5772:9:7"},"scope":2238,"src":"5707:115:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1615,"nodeType":"Block","src":"6017:48:7","statements":[{"expression":{"baseExpression":{"id":1611,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6034:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1613,"indexExpression":{"id":1612,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"6050:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6034:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1610,"id":1614,"nodeType":"Return","src":"6027:31:7"}]},"documentation":{"id":1604,"nodeType":"StructuredDocumentation","src":"5828:105:7","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5947:12:7","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"tokenId","nameLocation":"5968:7:7","nodeType":"VariableDeclaration","scope":1616,"src":"5960:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"5960:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5959:17:7"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"6008:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"6008:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6007:9:7"},"scope":2238,"src":"5938:127:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1651,"nodeType":"Block","src":"6485:163:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1628,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6514:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6533:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6525:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"6525:7:7","typeDescriptions":{}}},"id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6525:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6514:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1634,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"6552:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1635,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6561:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6552:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"6589:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6596:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1637,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"6572:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6572:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1643,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"6621:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1642,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"6608:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6608:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1645,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6633:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6608:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:88:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1648,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6551:90:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6514:127:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1627,"id":1650,"nodeType":"Return","src":"6495:146:7"}]},"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"6071:300:7","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1652,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6385:13:7","nodeType":"FunctionDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"owner","nameLocation":"6407:5:7","nodeType":"VariableDeclaration","scope":1652,"src":"6399:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"6399:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"spender","nameLocation":"6422:7:7","nodeType":"VariableDeclaration","scope":1652,"src":"6414:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"6414:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"tokenId","nameLocation":"6439:7:7","nodeType":"VariableDeclaration","scope":1652,"src":"6431:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"6431:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6398:49:7"},"returnParameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1652,"src":"6479:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1625,"name":"bool","nodeType":"ElementaryTypeName","src":"6479:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6478:6:7"},"scope":2238,"src":"6376:272:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1688,"nodeType":"Block","src":"7179:271:7","statements":[{"condition":{"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7193:39:7","subExpression":{"arguments":[{"id":1663,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"7208:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1664,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"7215:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1665,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"7224:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1662,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"7194:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7194:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1687,"nodeType":"IfStatement","src":"7189:255:7","trueBody":{"id":1686,"nodeType":"Block","src":"7234:210:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1668,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"7252:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7261:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"7261:7:7","typeDescriptions":{}}},"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7261:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7252:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1684,"nodeType":"Block","src":"7350:84:7","statements":[{"errorCall":{"arguments":[{"id":1680,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"7402:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1681,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"7411:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1679,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7375:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7375:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1683,"nodeType":"RevertStatement","src":"7368:51:7"}]},"id":1685,"nodeType":"IfStatement","src":"7248:186:7","trueBody":{"id":1678,"nodeType":"Block","src":"7273:71:7","statements":[{"errorCall":{"arguments":[{"id":1675,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"7321:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1674,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7298:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1677,"nodeType":"RevertStatement","src":"7291:38:7"}]}}]}}]},"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"6654:423:7","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7091:16:7","nodeType":"FunctionDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"owner","nameLocation":"7116:5:7","nodeType":"VariableDeclaration","scope":1689,"src":"7108:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"spender","nameLocation":"7131:7:7","nodeType":"VariableDeclaration","scope":1689,"src":"7123:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"7123:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"mutability":"mutable","name":"tokenId","nameLocation":"7148:7:7","nodeType":"VariableDeclaration","scope":1689,"src":"7140:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"7140:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:49:7"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"7179:0:7"},"scope":2238,"src":"7082:368:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1704,"nodeType":"Block","src":"8167:78:7","statements":[{"id":1703,"nodeType":"UncheckedBlock","src":"8177:62:7","statements":[{"expression":{"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1697,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"8201:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1699,"indexExpression":{"id":1698,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"8211:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8201:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"8223:5:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8201:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1702,"nodeType":"ExpressionStatement","src":"8201:27:7"}]}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"7456:631:7","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1705,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8101:16:7","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"account","nameLocation":"8126:7:7","nodeType":"VariableDeclaration","scope":1705,"src":"8118:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"8118:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"value","nameLocation":"8143:5:7","nodeType":"VariableDeclaration","scope":1705,"src":"8135:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1693,"name":"uint128","nodeType":"ElementaryTypeName","src":"8135:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8117:32:7"},"returnParameters":{"id":1696,"nodeType":"ParameterList","parameters":[],"src":"8167:0:7"},"scope":2238,"src":"8092:153:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1794,"nodeType":"Block","src":"8933:700:7","statements":[{"assignments":[1718],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"from","nameLocation":"8951:4:7","nodeType":"VariableDeclaration","scope":1794,"src":"8943:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"8943:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1722,"initialValue":{"arguments":[{"id":1720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"8967:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1719,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"8958:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8943:32:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1723,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"9035:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9051:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9043:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1724,"name":"address","nodeType":"ElementaryTypeName","src":"9043:7:7","typeDescriptions":{}}},"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9043:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9035:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1736,"nodeType":"IfStatement","src":"9031:86:7","trueBody":{"id":1735,"nodeType":"Block","src":"9055:62:7","statements":[{"expression":{"arguments":[{"id":1730,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"9086:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1731,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"9092:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1732,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"9098:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1729,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"9069:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9069:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1734,"nodeType":"ExpressionStatement","src":"9069:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1737,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"9161:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9177:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9169:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1738,"name":"address","nodeType":"ElementaryTypeName","src":"9169:7:7","typeDescriptions":{}}},"id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9169:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9161:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1764,"nodeType":"IfStatement","src":"9157:256:7","trueBody":{"id":1763,"nodeType":"Block","src":"9181:232:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9294:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9286:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"9286:7:7","typeDescriptions":{}}},"id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9286:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1748,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"9298:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9315:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9307:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1749,"name":"address","nodeType":"ElementaryTypeName","src":"9307:7:7","typeDescriptions":{}}},"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9307:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9319:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1743,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2041,2107],"referencedDeclaration":2107,"src":"9277:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9277:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1755,"nodeType":"ExpressionStatement","src":"9277:48:7"},{"id":1762,"nodeType":"UncheckedBlock","src":"9340:63:7","statements":[{"expression":{"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1756,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"9368:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1758,"indexExpression":{"id":1757,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"9378:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9368:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9387:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9368:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1761,"nodeType":"ExpressionStatement","src":"9368:20:7"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1765,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"9427:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9441:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9433:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1766,"name":"address","nodeType":"ElementaryTypeName","src":"9433:7:7","typeDescriptions":{}}},"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9433:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9427:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1779,"nodeType":"IfStatement","src":"9423:107:7","trueBody":{"id":1778,"nodeType":"Block","src":"9445:85:7","statements":[{"id":1777,"nodeType":"UncheckedBlock","src":"9459:61:7","statements":[{"expression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1771,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"9487:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1773,"indexExpression":{"id":1772,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"9497:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9487:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9504:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9487:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1776,"nodeType":"ExpressionStatement","src":"9487:18:7"}]}]}},{"expression":{"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1780,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"9540:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1782,"indexExpression":{"id":1781,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"9548:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9540:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1783,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"9559:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9540:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1785,"nodeType":"ExpressionStatement","src":"9540:21:7"},{"eventCall":{"arguments":[{"id":1787,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"9586:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1788,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"9592:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1789,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"9596:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1786,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"9577:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9577:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1791,"nodeType":"EmitStatement","src":"9572:32:7"},{"expression":{"id":1792,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"9622:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1716,"id":1793,"nodeType":"Return","src":"9615:11:7"}]},"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"8251:582:7","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1795,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8847:7:7","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"to","nameLocation":"8863:2:7","nodeType":"VariableDeclaration","scope":1795,"src":"8855:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"8855:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"tokenId","nameLocation":"8875:7:7","nodeType":"VariableDeclaration","scope":1795,"src":"8867:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"8867:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"auth","nameLocation":"8892:4:7","nodeType":"VariableDeclaration","scope":1795,"src":"8884:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"8884:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8854:43:7"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1795,"src":"8924:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"8924:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8923:9:7"},"scope":2238,"src":"8838:795:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1844,"nodeType":"Block","src":"10008:274:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"10022:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10036:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10028:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1804,"name":"address","nodeType":"ElementaryTypeName","src":"10028:7:7","typeDescriptions":{}}},"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10028:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10022:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1817,"nodeType":"IfStatement","src":"10018:87:7","trueBody":{"id":1816,"nodeType":"Block","src":"10040:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10091:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10083:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"10083:7:7","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10083:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1809,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"10061:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10061:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1815,"nodeType":"RevertStatement","src":"10054:40:7"}]}},{"assignments":[1819],"declarations":[{"constant":false,"id":1819,"mutability":"mutable","name":"previousOwner","nameLocation":"10122:13:7","nodeType":"VariableDeclaration","scope":1844,"src":"10114:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1818,"name":"address","nodeType":"ElementaryTypeName","src":"10114:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1828,"initialValue":{"arguments":[{"id":1821,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"10146:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1822,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"10150:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10159:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"10159:7:7","typeDescriptions":{}}},"id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10159:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1820,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"10138:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10138:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10114:56:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1829,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"10184:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10209:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10201:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1830,"name":"address","nodeType":"ElementaryTypeName","src":"10201:7:7","typeDescriptions":{}}},"id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10201:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10184:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1843,"nodeType":"IfStatement","src":"10180:96:7","trueBody":{"id":1842,"nodeType":"Block","src":"10213:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10262:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10254:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"10254:7:7","typeDescriptions":{}}},"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10254:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1835,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"10234:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10234:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1841,"nodeType":"RevertStatement","src":"10227:38:7"}]}}]},"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"9639:311:7","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9964:5:7","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"to","nameLocation":"9978:2:7","nodeType":"VariableDeclaration","scope":1845,"src":"9970:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"9970:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"tokenId","nameLocation":"9990:7:7","nodeType":"VariableDeclaration","scope":1845,"src":"9982:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"9982:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9969:29:7"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[],"src":"10008:0:7"},"scope":2238,"src":"9955:327:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1859,"nodeType":"Block","src":"10690:43:7","statements":[{"expression":{"arguments":[{"id":1854,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"10710:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1855,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"10714:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10723:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1853,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1860,1886],"referencedDeclaration":1886,"src":"10700:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1858,"nodeType":"ExpressionStatement","src":"10700:26:7"}]},"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"10288:340:7","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1860,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10642:9:7","nodeType":"FunctionDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"to","nameLocation":"10660:2:7","nodeType":"VariableDeclaration","scope":1860,"src":"10652:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"10652:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"tokenId","nameLocation":"10672:7:7","nodeType":"VariableDeclaration","scope":1860,"src":"10664:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"10664:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10651:29:7"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[],"src":"10690:0:7"},"scope":2238,"src":"10633:100:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1885,"nodeType":"Block","src":"11038:98:7","statements":[{"expression":{"arguments":[{"id":1871,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"11054:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1872,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"11058:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1870,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"11048:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11048:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1874,"nodeType":"ExpressionStatement","src":"11048:18:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11107:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11099:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"11099:7:7","typeDescriptions":{}}},"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1880,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"11111:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"11115:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1882,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"11124:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1875,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"11076:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11076:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1884,"nodeType":"ExpressionStatement","src":"11076:53:7"}]},"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"10739:210:7","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1886,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10963:9:7","nodeType":"FunctionDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"to","nameLocation":"10981:2:7","nodeType":"VariableDeclaration","scope":1886,"src":"10973:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1862,"name":"address","nodeType":"ElementaryTypeName","src":"10973:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"tokenId","nameLocation":"10993:7:7","nodeType":"VariableDeclaration","scope":1886,"src":"10985:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"10985:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1867,"mutability":"mutable","name":"data","nameLocation":"11015:4:7","nodeType":"VariableDeclaration","scope":1886,"src":"11002:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1866,"name":"bytes","nodeType":"ElementaryTypeName","src":"11002:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10972:48:7"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[],"src":"11038:0:7"},"scope":2238,"src":"10954:182:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1918,"nodeType":"Block","src":"11503:186:7","statements":[{"assignments":[1893],"declarations":[{"constant":false,"id":1893,"mutability":"mutable","name":"previousOwner","nameLocation":"11521:13:7","nodeType":"VariableDeclaration","scope":1918,"src":"11513:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"11513:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1905,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11545:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"11545:7:7","typeDescriptions":{}}},"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11545:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1899,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"11557:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11566:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1900,"name":"address","nodeType":"ElementaryTypeName","src":"11566:7:7","typeDescriptions":{}}},"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11566:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1894,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"11537:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11537:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11513:64:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1906,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"11591:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11608:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"11608:7:7","typeDescriptions":{}}},"id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11608:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11591:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1917,"nodeType":"IfStatement","src":"11587:96:7","trueBody":{"id":1916,"nodeType":"Block","src":"11620:63:7","statements":[{"errorCall":{"arguments":[{"id":1913,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"11664:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1912,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11641:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11641:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1915,"nodeType":"RevertStatement","src":"11634:38:7"}]}}]},"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"11142:315:7","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1919,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11471:5:7","nodeType":"FunctionDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"tokenId","nameLocation":"11485:7:7","nodeType":"VariableDeclaration","scope":1919,"src":"11477:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1888,"name":"uint256","nodeType":"ElementaryTypeName","src":"11477:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11476:17:7"},"returnParameters":{"id":1891,"nodeType":"ParameterList","parameters":[],"src":"11503:0:7"},"scope":2238,"src":"11462:227:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1978,"nodeType":"Block","src":"12084:389:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1929,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"12098:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12104:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"12104:7:7","typeDescriptions":{}}},"id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12104:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12098:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1943,"nodeType":"IfStatement","src":"12094:87:7","trueBody":{"id":1942,"nodeType":"Block","src":"12116:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12167:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12159:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1936,"name":"address","nodeType":"ElementaryTypeName","src":"12159:7:7","typeDescriptions":{}}},"id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12159:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1935,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"12137:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1941,"nodeType":"RevertStatement","src":"12130:40:7"}]}},{"assignments":[1945],"declarations":[{"constant":false,"id":1945,"mutability":"mutable","name":"previousOwner","nameLocation":"12198:13:7","nodeType":"VariableDeclaration","scope":1978,"src":"12190:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"12190:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1954,"initialValue":{"arguments":[{"id":1947,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"12222:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1948,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"12226:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12243:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12235:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"12235:7:7","typeDescriptions":{}}},"id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12235:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1946,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"12214:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12214:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12190:56:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1955,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"12260:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12277:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"12277:7:7","typeDescriptions":{}}},"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12277:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12260:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"12362:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1967,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"12379:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12362:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1976,"nodeType":"IfStatement","src":"12358:109:7","trueBody":{"id":1975,"nodeType":"Block","src":"12385:82:7","statements":[{"errorCall":{"arguments":[{"id":1970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"12427:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1971,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"12433:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1972,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"12442:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1969,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12406:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12406:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1974,"nodeType":"RevertStatement","src":"12399:57:7"}]}},"id":1977,"nodeType":"IfStatement","src":"12256:211:7","trueBody":{"id":1965,"nodeType":"Block","src":"12289:63:7","statements":[{"errorCall":{"arguments":[{"id":1962,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"12333:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1961,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12310:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12310:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1964,"nodeType":"RevertStatement","src":"12303:38:7"}]}}]},"documentation":{"id":1920,"nodeType":"StructuredDocumentation","src":"11695:313:7","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1979,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12022:9:7","nodeType":"FunctionDefinition","parameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"from","nameLocation":"12040:4:7","nodeType":"VariableDeclaration","scope":1979,"src":"12032:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"12032:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"to","nameLocation":"12054:2:7","nodeType":"VariableDeclaration","scope":1979,"src":"12046:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"12046:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"tokenId","nameLocation":"12066:7:7","nodeType":"VariableDeclaration","scope":1979,"src":"12058:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"12058:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12031:43:7"},"returnParameters":{"id":1928,"nodeType":"ParameterList","parameters":[],"src":"12084:0:7"},"scope":2238,"src":"12013:460:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1996,"nodeType":"Block","src":"13481:53:7","statements":[{"expression":{"arguments":[{"id":1990,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"13505:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1991,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"13511:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1992,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"13515:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13524:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1989,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1997,2023],"referencedDeclaration":2023,"src":"13491:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13491:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"ExpressionStatement","src":"13491:36:7"}]},"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"12479:922:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1997,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13415:13:7","nodeType":"FunctionDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"from","nameLocation":"13437:4:7","nodeType":"VariableDeclaration","scope":1997,"src":"13429:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"13429:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1984,"mutability":"mutable","name":"to","nameLocation":"13451:2:7","nodeType":"VariableDeclaration","scope":1997,"src":"13443:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"13443:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"tokenId","nameLocation":"13463:7:7","nodeType":"VariableDeclaration","scope":1997,"src":"13455:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"13455:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13428:43:7"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[],"src":"13481:0:7"},"scope":2238,"src":"13406:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2022,"nodeType":"Block","src":"13873:102:7","statements":[{"expression":{"arguments":[{"id":2010,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"13893:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2011,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"13899:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2012,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"13903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2009,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"13883:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13883:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2014,"nodeType":"ExpressionStatement","src":"13883:28:7"},{"expression":{"arguments":[{"id":2016,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"13944:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2017,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"13950:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2018,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"13954:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2019,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"13963:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2015,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"13921:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2021,"nodeType":"ExpressionStatement","src":"13921:47:7"}]},"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"13540:226:7","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2023,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13780:13:7","nodeType":"FunctionDefinition","parameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"from","nameLocation":"13802:4:7","nodeType":"VariableDeclaration","scope":2023,"src":"13794:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1999,"name":"address","nodeType":"ElementaryTypeName","src":"13794:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"to","nameLocation":"13816:2:7","nodeType":"VariableDeclaration","scope":2023,"src":"13808:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"13808:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"tokenId","nameLocation":"13828:7:7","nodeType":"VariableDeclaration","scope":2023,"src":"13820:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"13820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"data","nameLocation":"13850:4:7","nodeType":"VariableDeclaration","scope":2023,"src":"13837:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2005,"name":"bytes","nodeType":"ElementaryTypeName","src":"13837:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13793:62:7"},"returnParameters":{"id":2008,"nodeType":"ParameterList","parameters":[],"src":"13873:0:7"},"scope":2238,"src":"13771:204:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2040,"nodeType":"Block","src":"14488:50:7","statements":[{"expression":{"arguments":[{"id":2034,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"14507:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2035,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"14511:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2036,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"14520:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14526:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2033,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2041,2107],"referencedDeclaration":2107,"src":"14498:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14498:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2039,"nodeType":"ExpressionStatement","src":"14498:33:7"}]},"documentation":{"id":2024,"nodeType":"StructuredDocumentation","src":"13981:432:7","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14427:8:7","nodeType":"FunctionDefinition","parameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"to","nameLocation":"14444:2:7","nodeType":"VariableDeclaration","scope":2041,"src":"14436:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2025,"name":"address","nodeType":"ElementaryTypeName","src":"14436:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2028,"mutability":"mutable","name":"tokenId","nameLocation":"14456:7:7","nodeType":"VariableDeclaration","scope":2041,"src":"14448:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"14448:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2030,"mutability":"mutable","name":"auth","nameLocation":"14473:4:7","nodeType":"VariableDeclaration","scope":2041,"src":"14465:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2029,"name":"address","nodeType":"ElementaryTypeName","src":"14465:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14435:43:7"},"returnParameters":{"id":2032,"nodeType":"ParameterList","parameters":[],"src":"14488:0:7"},"scope":2238,"src":"14418:120:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2106,"nodeType":"Block","src":"14814:568:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2053,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"14880:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2054,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"14893:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14909:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14901:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"14901:7:7","typeDescriptions":{}}},"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14901:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14893:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14880:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2099,"nodeType":"IfStatement","src":"14876:460:7","trueBody":{"id":2098,"nodeType":"Block","src":"14913:423:7","statements":[{"assignments":[2062],"declarations":[{"constant":false,"id":2062,"mutability":"mutable","name":"owner","nameLocation":"14935:5:7","nodeType":"VariableDeclaration","scope":2098,"src":"14927:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2061,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2066,"initialValue":{"arguments":[{"id":2064,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"14957:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2063,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"14943:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14943:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14927:38:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2067,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"15093:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15109:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15101:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"15101:7:7","typeDescriptions":{}}},"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15093:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2073,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"15115:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2074,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"15124:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15115:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15132:30:7","subExpression":{"arguments":[{"id":2078,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"15150:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2079,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"15157:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2077,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"15133:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15133:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2088,"nodeType":"IfStatement","src":"15089:142:7","trueBody":{"id":2087,"nodeType":"Block","src":"15164:67:7","statements":[{"errorCall":{"arguments":[{"id":2084,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"15211:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2083,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"15189:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15189:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2086,"nodeType":"RevertStatement","src":"15182:34:7"}]}},{"condition":{"id":2089,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"15249:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2097,"nodeType":"IfStatement","src":"15245:81:7","trueBody":{"id":2096,"nodeType":"Block","src":"15260:66:7","statements":[{"eventCall":{"arguments":[{"id":2091,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"15292:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2092,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"15299:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2093,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"15303:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2090,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"15283:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15283:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2095,"nodeType":"EmitStatement","src":"15278:33:7"}]}}]}},{"expression":{"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2100,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"15346:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2102,"indexExpression":{"id":2101,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"15362:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15346:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2103,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"15373:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15346:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2105,"nodeType":"ExpressionStatement","src":"15346:29:7"}]},"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"14544:171:7","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":2107,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14729:8:7","nodeType":"FunctionDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"to","nameLocation":"14746:2:7","nodeType":"VariableDeclaration","scope":2107,"src":"14738:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"14738:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"tokenId","nameLocation":"14758:7:7","nodeType":"VariableDeclaration","scope":2107,"src":"14750:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"14750:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"auth","nameLocation":"14775:4:7","nodeType":"VariableDeclaration","scope":2107,"src":"14767:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2047,"name":"address","nodeType":"ElementaryTypeName","src":"14767:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2050,"mutability":"mutable","name":"emitEvent","nameLocation":"14786:9:7","nodeType":"VariableDeclaration","scope":2107,"src":"14781:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2049,"name":"bool","nodeType":"ElementaryTypeName","src":"14781:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14737:59:7"},"returnParameters":{"id":2052,"nodeType":"ParameterList","parameters":[],"src":"14814:0:7"},"scope":2238,"src":"14720:662:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2143,"nodeType":"Block","src":"15684:219:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2117,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"15698:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15718:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15710:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2118,"name":"address","nodeType":"ElementaryTypeName","src":"15710:7:7","typeDescriptions":{}}},"id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15710:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15698:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2128,"nodeType":"IfStatement","src":"15694:91:7","trueBody":{"id":2127,"nodeType":"Block","src":"15722:63:7","statements":[{"errorCall":{"arguments":[{"id":2124,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"15765:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2123,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15743:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15743:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2126,"nodeType":"RevertStatement","src":"15736:38:7"}]}},{"expression":{"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2129,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"15794:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2132,"indexExpression":{"id":2130,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"15813:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15794:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2133,"indexExpression":{"id":2131,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"15820:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15794:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2134,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"15832:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15794:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2136,"nodeType":"ExpressionStatement","src":"15794:46:7"},{"eventCall":{"arguments":[{"id":2138,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"15870:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2139,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"15877:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2140,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"15887:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2137,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"15855:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15855:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2142,"nodeType":"EmitStatement","src":"15850:46:7"}]},"documentation":{"id":2108,"nodeType":"StructuredDocumentation","src":"15388:198:7","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":2144,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15600:18:7","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"owner","nameLocation":"15627:5:7","nodeType":"VariableDeclaration","scope":2144,"src":"15619:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2109,"name":"address","nodeType":"ElementaryTypeName","src":"15619:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2112,"mutability":"mutable","name":"operator","nameLocation":"15642:8:7","nodeType":"VariableDeclaration","scope":2144,"src":"15634:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"15634:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"approved","nameLocation":"15657:8:7","nodeType":"VariableDeclaration","scope":2144,"src":"15652:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2113,"name":"bool","nodeType":"ElementaryTypeName","src":"15652:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15618:48:7"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[],"src":"15684:0:7"},"scope":2238,"src":"15591:312:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2172,"nodeType":"Block","src":"16210:169:7","statements":[{"assignments":[2153],"declarations":[{"constant":false,"id":2153,"mutability":"mutable","name":"owner","nameLocation":"16228:5:7","nodeType":"VariableDeclaration","scope":2172,"src":"16220:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2152,"name":"address","nodeType":"ElementaryTypeName","src":"16220:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2157,"initialValue":{"arguments":[{"id":2155,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"16245:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2154,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"16236:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16236:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16220:33:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"16267:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16284:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16276:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"16276:7:7","typeDescriptions":{}}},"id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16276:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16267:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2169,"nodeType":"IfStatement","src":"16263:88:7","trueBody":{"id":2168,"nodeType":"Block","src":"16288:63:7","statements":[{"errorCall":{"arguments":[{"id":2165,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"16332:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2164,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16309:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16309:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2167,"nodeType":"RevertStatement","src":"16302:38:7"}]}},{"expression":{"id":2170,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"16367:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2151,"id":2171,"nodeType":"Return","src":"16360:12:7"}]},"documentation":{"id":2145,"nodeType":"StructuredDocumentation","src":"15909:224:7","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":2173,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16147:13:7","nodeType":"FunctionDefinition","parameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"tokenId","nameLocation":"16169:7:7","nodeType":"VariableDeclaration","scope":2173,"src":"16161:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"16161:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16160:17:7"},"returnParameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2173,"src":"16201:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2149,"name":"address","nodeType":"ElementaryTypeName","src":"16201:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16200:9:7"},"scope":2238,"src":"16138:241:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2236,"nodeType":"Block","src":"17020:680:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2185,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"17034:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17037:4:7","memberName":"code","nodeType":"MemberAccess","src":"17034:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17042:6:7","memberName":"length","nodeType":"MemberAccess","src":"17034:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17051:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17034:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2235,"nodeType":"IfStatement","src":"17030:664:7","trueBody":{"id":2234,"nodeType":"Block","src":"17054:640:7","statements":[{"clauses":[{"block":{"id":2214,"nodeType":"Block","src":"17168:162:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"17190:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2204,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"17200:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2373_$","typeString":"type(contract IERC721Receiver)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17216:16:7","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"17200:32:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17233:8:7","memberName":"selector","nodeType":"MemberAccess","src":"17200:41:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"17190:51:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2213,"nodeType":"IfStatement","src":"17186:130:7","trueBody":{"id":2212,"nodeType":"Block","src":"17243:73:7","statements":[{"errorCall":{"arguments":[{"id":2209,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"17294:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2208,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"17272:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17272:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2211,"nodeType":"RevertStatement","src":"17265:32:7"}]}}]},"errorName":"","id":2215,"nodeType":"TryCatchClause","parameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"retval","nameLocation":"17160:6:7","nodeType":"VariableDeclaration","scope":2215,"src":"17153:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2200,"name":"bytes4","nodeType":"ElementaryTypeName","src":"17153:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"17152:15:7"},"src":"17144:186:7"},{"block":{"id":2231,"nodeType":"Block","src":"17359:325:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2219,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"17381:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17388:6:7","memberName":"length","nodeType":"MemberAccess","src":"17381:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17398:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17381:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2229,"nodeType":"Block","src":"17480:190:7","statements":[{"AST":{"nodeType":"YulBlock","src":"17566:86:7","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17603:2:7","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"17607:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17599:3:7"},"nodeType":"YulFunctionCall","src":"17599:15:7"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"17622:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17616:5:7"},"nodeType":"YulFunctionCall","src":"17616:13:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17592:6:7"},"nodeType":"YulFunctionCall","src":"17592:38:7"},"nodeType":"YulExpressionStatement","src":"17592:38:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2217,"isOffset":false,"isSlot":false,"src":"17607:6:7","valueSize":1},{"declaration":2217,"isOffset":false,"isSlot":false,"src":"17622:6:7","valueSize":1}],"id":2228,"nodeType":"InlineAssembly","src":"17557:95:7"}]},"id":2230,"nodeType":"IfStatement","src":"17377:293:7","trueBody":{"id":2227,"nodeType":"Block","src":"17401:73:7","statements":[{"errorCall":{"arguments":[{"id":2224,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"17452:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2223,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"17430:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17430:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2226,"nodeType":"RevertStatement","src":"17423:32:7"}]}}]},"errorName":"","id":2232,"nodeType":"TryCatchClause","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"reason","nameLocation":"17351:6:7","nodeType":"VariableDeclaration","scope":2232,"src":"17338:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2216,"name":"bytes","nodeType":"ElementaryTypeName","src":"17338:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17337:21:7"},"src":"17331:353:7"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2194,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"17109:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17109:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2196,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"17123:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2197,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"17129:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2198,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"17138:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2191,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"17088:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2190,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"17072:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2373_$","typeString":"type(contract IERC721Receiver)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2373","typeString":"contract IERC721Receiver"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17092:16:7","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"17072:36:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:71:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2233,"nodeType":"TryStatement","src":"17068:616:7"}]}}]},"documentation":{"id":2174,"nodeType":"StructuredDocumentation","src":"16385:528:7","text":" @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"},"id":2237,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"16927:22:7","nodeType":"FunctionDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"from","nameLocation":"16958:4:7","nodeType":"VariableDeclaration","scope":2237,"src":"16950:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"16950:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"to","nameLocation":"16972:2:7","nodeType":"VariableDeclaration","scope":2237,"src":"16964:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"16964:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"tokenId","nameLocation":"16984:7:7","nodeType":"VariableDeclaration","scope":2237,"src":"16976:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"data","nameLocation":"17006:4:7","nodeType":"VariableDeclaration","scope":2237,"src":"16993:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2181,"name":"bytes","nodeType":"ElementaryTypeName","src":"16993:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16949:62:7"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[],"src":"17020:0:7"},"scope":2238,"src":"16918:782:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2239,"src":"776:16926:7","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[2254,2263,2272]}],"src":"107:17596:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3512],"IERC721":[2355]},"id":2356,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2240,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2356,"sourceUnit":3513,"src":"134:62:8","symbolAliases":[{"foreign":{"id":2241,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"142:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2244,"name":"IERC165","nameLocations":["287:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3512,"src":"287:7:8"},"id":2245,"nodeType":"InheritanceSpecifier","src":"287:7:8"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"198:67:8","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2355,"linearizedBaseContracts":[2355,3512],"name":"IERC721","nameLocation":"276:7:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2246,"nodeType":"StructuredDocumentation","src":"301:88:8","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2254,"name":"Transfer","nameLocation":"400:8:8","nodeType":"EventDefinition","parameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"425:4:8","nodeType":"VariableDeclaration","scope":2254,"src":"409:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2247,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2250,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"447:2:8","nodeType":"VariableDeclaration","scope":2254,"src":"431:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2252,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:8","nodeType":"VariableDeclaration","scope":2254,"src":"451:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:67:8"},"src":"394:82:8"},{"anonymous":false,"documentation":{"id":2255,"nodeType":"StructuredDocumentation","src":"482:94:8","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2263,"name":"Approval","nameLocation":"587:8:8","nodeType":"EventDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"612:5:8","nodeType":"VariableDeclaration","scope":2263,"src":"596:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2259,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"635:8:8","nodeType":"VariableDeclaration","scope":2263,"src":"619:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2261,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"661:7:8","nodeType":"VariableDeclaration","scope":2263,"src":"645:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2260,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:74:8"},"src":"581:89:8"},{"anonymous":false,"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"676:117:8","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2272,"name":"ApprovalForAll","nameLocation":"804:14:8","nodeType":"EventDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"835:5:8","nodeType":"VariableDeclaration","scope":2272,"src":"819:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2268,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"858:8:8","nodeType":"VariableDeclaration","scope":2272,"src":"842:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2270,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"873:8:8","nodeType":"VariableDeclaration","scope":2272,"src":"868:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2269,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:64:8"},"src":"798:85:8"},{"documentation":{"id":2273,"nodeType":"StructuredDocumentation","src":"889:76:8","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2280,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"979:9:8","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"owner","nameLocation":"997:5:8","nodeType":"VariableDeclaration","scope":2280,"src":"989:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2274,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"988:15:8"},"returnParameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"balance","nameLocation":"1035:7:8","nodeType":"VariableDeclaration","scope":2280,"src":"1027:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2277,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:17:8"},"scope":2355,"src":"970:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"1050:131:8","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2288,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1195:7:8","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"tokenId","nameLocation":"1211:7:8","nodeType":"VariableDeclaration","scope":2288,"src":"1203:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:17:8"},"returnParameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"owner","nameLocation":"1251:5:8","nodeType":"VariableDeclaration","scope":2288,"src":"1243:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2285,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:15:8"},"scope":2355,"src":"1186:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"1264:565:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2300,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1843:16:8","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"from","nameLocation":"1868:4:8","nodeType":"VariableDeclaration","scope":2300,"src":"1860:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2290,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"to","nameLocation":"1882:2:8","nodeType":"VariableDeclaration","scope":2300,"src":"1874:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2292,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:8","nodeType":"VariableDeclaration","scope":2300,"src":"1886:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"data","nameLocation":"1918:4:8","nodeType":"VariableDeclaration","scope":2300,"src":"1903:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2296,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1859:64:8"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[],"src":"1932:0:8"},"scope":2355,"src":"1834:99:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2301,"nodeType":"StructuredDocumentation","src":"1939:705:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2310,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2658:16:8","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"from","nameLocation":"2683:4:8","nodeType":"VariableDeclaration","scope":2310,"src":"2675:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2302,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"to","nameLocation":"2697:2:8","nodeType":"VariableDeclaration","scope":2310,"src":"2689:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2304,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:8","nodeType":"VariableDeclaration","scope":2310,"src":"2701:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2674:43:8"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[],"src":"2726:0:8"},"scope":2355,"src":"2649:78:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"2733:732:8","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2320,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3479:12:8","nodeType":"FunctionDefinition","parameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"from","nameLocation":"3500:4:8","nodeType":"VariableDeclaration","scope":2320,"src":"3492:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2312,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"to","nameLocation":"3514:2:8","nodeType":"VariableDeclaration","scope":2320,"src":"3506:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2317,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:8","nodeType":"VariableDeclaration","scope":2320,"src":"3518:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:43:8"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[],"src":"3543:0:8"},"scope":2355,"src":"3470:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2321,"nodeType":"StructuredDocumentation","src":"3550:452:8","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2328,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4016:7:8","nodeType":"FunctionDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"to","nameLocation":"4032:2:8","nodeType":"VariableDeclaration","scope":2328,"src":"4024:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2322,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2325,"mutability":"mutable","name":"tokenId","nameLocation":"4044:7:8","nodeType":"VariableDeclaration","scope":2328,"src":"4036:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"4036:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:29:8"},"returnParameters":{"id":2327,"nodeType":"ParameterList","parameters":[],"src":"4061:0:8"},"scope":2355,"src":"4007:55:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2329,"nodeType":"StructuredDocumentation","src":"4068:315:8","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2336,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4397:17:8","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"operator","nameLocation":"4423:8:8","nodeType":"VariableDeclaration","scope":2336,"src":"4415:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2330,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"approved","nameLocation":"4438:8:8","nodeType":"VariableDeclaration","scope":2336,"src":"4433:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2332,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:33:8"},"returnParameters":{"id":2335,"nodeType":"ParameterList","parameters":[],"src":"4456:0:8"},"scope":2355,"src":"4388:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2337,"nodeType":"StructuredDocumentation","src":"4463:139:8","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2344,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4616:11:8","nodeType":"FunctionDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"tokenId","nameLocation":"4636:7:8","nodeType":"VariableDeclaration","scope":2344,"src":"4628:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:17:8"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"operator","nameLocation":"4676:8:8","nodeType":"VariableDeclaration","scope":2344,"src":"4668:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2341,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4667:18:8"},"scope":2355,"src":"4607:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2345,"nodeType":"StructuredDocumentation","src":"4692:138:8","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2354,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4844:16:8","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"owner","nameLocation":"4869:5:8","nodeType":"VariableDeclaration","scope":2354,"src":"4861:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"operator","nameLocation":"4884:8:8","nodeType":"VariableDeclaration","scope":2354,"src":"4876:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4860:33:8"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2354,"src":"4917:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2351,"name":"bool","nodeType":"ElementaryTypeName","src":"4917:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4916:6:8"},"scope":2355,"src":"4835:88:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2356,"src":"266:4659:8","usedErrors":[],"usedEvents":[2254,2263,2272]}],"src":"108:4818:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2373]},"id":2374,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2357,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"142:152:9","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2373,"linearizedBaseContracts":[2373],"name":"IERC721Receiver","nameLocation":"305:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2359,"nodeType":"StructuredDocumentation","src":"327:500:9","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2372,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"841:16:9","nodeType":"FunctionDefinition","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"operator","nameLocation":"875:8:9","nodeType":"VariableDeclaration","scope":2372,"src":"867:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2360,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"from","nameLocation":"901:4:9","nodeType":"VariableDeclaration","scope":2372,"src":"893:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2362,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"tokenId","nameLocation":"923:7:9","nodeType":"VariableDeclaration","scope":2372,"src":"915:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"data","nameLocation":"955:4:9","nodeType":"VariableDeclaration","scope":2372,"src":"940:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2366,"name":"bytes","nodeType":"ElementaryTypeName","src":"940:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"857:108:9"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"984:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2369,"name":"bytes4","nodeType":"ElementaryTypeName","src":"984:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"983:8:9"},"scope":2373,"src":"832:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2374,"src":"295:699:9","usedErrors":[],"usedEvents":[]}],"src":"116:879:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2355],"IERC721Metadata":[2401]},"id":2402,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2375,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2402,"sourceUnit":2356,"src":"153:39:10","symbolAliases":[{"foreign":{"id":2376,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"161:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2379,"name":"IERC721","nameLocations":["357:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2355,"src":"357:7:10"},"id":2380,"nodeType":"InheritanceSpecifier","src":"357:7:10"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2378,"nodeType":"StructuredDocumentation","src":"194:133:10","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2401,"linearizedBaseContracts":[2401,2355,3512],"name":"IERC721Metadata","nameLocation":"338:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"371:58:10","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2386,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:10","nodeType":"FunctionDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[],"src":"447:2:10"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2386,"src":"473:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2383,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:10"},"scope":2401,"src":"434:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2387,"nodeType":"StructuredDocumentation","src":"494:60:10","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2392,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:10","nodeType":"FunctionDefinition","parameters":{"id":2388,"nodeType":"ParameterList","parameters":[],"src":"574:2:10"},"returnParameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2392,"src":"600:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2389,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:10"},"scope":2401,"src":"559:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"621:90:10","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2400,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:10","nodeType":"FunctionDefinition","parameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:10","nodeType":"VariableDeclaration","scope":2400,"src":"734:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:10"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2400,"src":"774:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2397,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:10"},"scope":2401,"src":"716:73:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2402,"src":"328:463:10","usedErrors":[],"usedEvents":[2254,2263,2272]}],"src":"127:665:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2654]},"id":2655,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2403,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"127:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2654,"linearizedBaseContracts":[2654],"name":"Address","nameLocation":"203:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2405,"nodeType":"StructuredDocumentation","src":"217:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":2409,"name":"AddressInsufficientBalance","nameLocation":"322:26:11","nodeType":"ErrorDefinition","parameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"account","nameLocation":"357:7:11","nodeType":"VariableDeclaration","scope":2409,"src":"349:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2406,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:11"},"src":"316:50:11"},{"documentation":{"id":2410,"nodeType":"StructuredDocumentation","src":"372:75:11","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2414,"name":"AddressEmptyCode","nameLocation":"458:16:11","nodeType":"ErrorDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"target","nameLocation":"483:6:11","nodeType":"VariableDeclaration","scope":2414,"src":"475:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2411,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:11"},"src":"452:39:11"},{"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"497:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":2417,"name":"FailedInnerCall","nameLocation":"597:15:11","nodeType":"ErrorDefinition","parameters":{"id":2416,"nodeType":"ParameterList","parameters":[],"src":"612:2:11"},"src":"591:24:11"},{"body":{"id":2457,"nodeType":"Block","src":"1602:260:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2427,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2654","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2654","typeString":"library Address"}],"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:11","typeDescriptions":{}}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:11","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2430,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"1640:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2440,"nodeType":"IfStatement","src":"1612:109:11","trueBody":{"id":2439,"nodeType":"Block","src":"1648:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2435,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2654","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2654","typeString":"library Address"}],"id":2434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2433,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:11","typeDescriptions":{}}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2432,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1669:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2438,"nodeType":"RevertStatement","src":"1662:48:11"}]}},{"assignments":[2442,null],"declarations":[{"constant":false,"id":2442,"mutability":"mutable","name":"success","nameLocation":"1737:7:11","nodeType":"VariableDeclaration","scope":2457,"src":"1732:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2441,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2449,"initialValue":{"arguments":[{"hexValue":"","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2443,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"1750:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:11","memberName":"call","nodeType":"MemberAccess","src":"1750:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2445,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"1772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:11"},{"condition":{"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:11","subExpression":{"id":2450,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"1798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2456,"nodeType":"IfStatement","src":"1793:63:11","trueBody":{"id":2455,"nodeType":"Block","src":"1807:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2452,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"1828:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2454,"nodeType":"RevertStatement","src":"1821:24:11"}]}}]},"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"621:905:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:11","nodeType":"FunctionDefinition","parameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:11","nodeType":"VariableDeclaration","scope":2458,"src":"1550:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2419,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2422,"mutability":"mutable","name":"amount","nameLocation":"1585:6:11","nodeType":"VariableDeclaration","scope":2458,"src":"1577:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:11"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[],"src":"1602:0:11"},"scope":2654,"src":"1531:331:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2474,"nodeType":"Block","src":"2794:62:11","statements":[{"expression":{"arguments":[{"id":2469,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"2833:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2470,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"2841:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2468,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"2811:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2467,"id":2473,"nodeType":"Return","src":"2804:45:11"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"1868:832:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2475,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:11","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"target","nameLocation":"2735:6:11","nodeType":"VariableDeclaration","scope":2475,"src":"2727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"data","nameLocation":"2756:4:11","nodeType":"VariableDeclaration","scope":2475,"src":"2743:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2462,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:11"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2475,"src":"2780:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2465,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:11"},"scope":2654,"src":"2705:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2520,"nodeType":"Block","src":"3293:279:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2489,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2654","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2654","typeString":"library Address"}],"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2487,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:11","typeDescriptions":{}}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:11","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"3331:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2502,"nodeType":"IfStatement","src":"3303:108:11","trueBody":{"id":2501,"nodeType":"Block","src":"3338:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2497,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2654","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2654","typeString":"library Address"}],"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2495,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:11","typeDescriptions":{}}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2494,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"3359:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2500,"nodeType":"RevertStatement","src":"3352:48:11"}]}},{"assignments":[2504,2506],"declarations":[{"constant":false,"id":2504,"mutability":"mutable","name":"success","nameLocation":"3426:7:11","nodeType":"VariableDeclaration","scope":2520,"src":"3421:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2503,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2506,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:11","nodeType":"VariableDeclaration","scope":2520,"src":"3435:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2505,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2513,"initialValue":{"arguments":[{"id":2511,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"3488:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2507,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"3462:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:11","memberName":"call","nodeType":"MemberAccess","src":"3462:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"3481:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:11"},{"expression":{"arguments":[{"id":2515,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"3537:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2516,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3545:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2517,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3554:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2514,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3510:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2486,"id":2519,"nodeType":"Return","src":"3503:62:11"}]},"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"2862:313:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2521,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:11","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"target","nameLocation":"3219:6:11","nodeType":"VariableDeclaration","scope":2521,"src":"3211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"data","nameLocation":"3240:4:11","nodeType":"VariableDeclaration","scope":2521,"src":"3227:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2479,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"value","nameLocation":"3254:5:11","nodeType":"VariableDeclaration","scope":2521,"src":"3246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:11"},"returnParameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2521,"src":"3279:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2484,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:11"},"scope":2654,"src":"3180:392:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2546,"nodeType":"Block","src":"3811:154:11","statements":[{"assignments":[2532,2534],"declarations":[{"constant":false,"id":2532,"mutability":"mutable","name":"success","nameLocation":"3827:7:11","nodeType":"VariableDeclaration","scope":2546,"src":"3822:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2531,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2534,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:11","nodeType":"VariableDeclaration","scope":2546,"src":"3836:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2533,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2539,"initialValue":{"arguments":[{"id":2537,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"3881:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2535,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"3863:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:11"},{"expression":{"arguments":[{"id":2541,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"3930:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2542,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"3938:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2543,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"3947:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2540,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3903:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2530,"id":2545,"nodeType":"Return","src":"3896:62:11"}]},"documentation":{"id":2522,"nodeType":"StructuredDocumentation","src":"3578:128:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2547,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:11","nodeType":"FunctionDefinition","parameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"target","nameLocation":"3747:6:11","nodeType":"VariableDeclaration","scope":2547,"src":"3739:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2526,"mutability":"mutable","name":"data","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":2547,"src":"3755:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2525,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:11"},"returnParameters":{"id":2530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2547,"src":"3797:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2528,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:11"},"scope":2654,"src":"3711:254:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2572,"nodeType":"Block","src":"4203:156:11","statements":[{"assignments":[2558,2560],"declarations":[{"constant":false,"id":2558,"mutability":"mutable","name":"success","nameLocation":"4219:7:11","nodeType":"VariableDeclaration","scope":2572,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2557,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:11","nodeType":"VariableDeclaration","scope":2572,"src":"4228:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2559,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2565,"initialValue":{"arguments":[{"id":2563,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"4275:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2561,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"4255:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:11"},{"expression":{"arguments":[{"id":2567,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"4324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2568,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2569,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"4341:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2566,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"4297:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2556,"id":2571,"nodeType":"Return","src":"4290:62:11"}]},"documentation":{"id":2548,"nodeType":"StructuredDocumentation","src":"3971:130:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2573,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:11","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"target","nameLocation":"4144:6:11","nodeType":"VariableDeclaration","scope":2573,"src":"4136:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"data","nameLocation":"4165:4:11","nodeType":"VariableDeclaration","scope":2573,"src":"4152:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2551,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:11"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2573,"src":"4189:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2554,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:11"},"scope":2654,"src":"4106:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2612,"nodeType":"Block","src":"4783:424:11","statements":[{"condition":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:11","subExpression":{"id":2585,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"4798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2610,"nodeType":"Block","src":"4857:344:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2592,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"5045:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:11","memberName":"length","nodeType":"MemberAccess","src":"5045:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2596,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"5071:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:11","memberName":"code","nodeType":"MemberAccess","src":"5071:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:11","memberName":"length","nodeType":"MemberAccess","src":"5071:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2607,"nodeType":"IfStatement","src":"5041:119:11","trueBody":{"id":2606,"nodeType":"Block","src":"5096:64:11","statements":[{"errorCall":{"arguments":[{"id":2603,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"5138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2602,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"5121:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2605,"nodeType":"RevertStatement","src":"5114:31:11"}]}},{"expression":{"id":2608,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"5180:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2584,"id":2609,"nodeType":"Return","src":"5173:17:11"}]},"id":2611,"nodeType":"IfStatement","src":"4793:408:11","trueBody":{"id":2591,"nodeType":"Block","src":"4807:44:11","statements":[{"expression":{"arguments":[{"id":2588,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"4829:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2587,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"4821:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2590,"nodeType":"ExpressionStatement","src":"4821:19:11"}]}}]},"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"4365:255:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2613,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:11","nodeType":"FunctionDefinition","parameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"target","nameLocation":"4678:6:11","nodeType":"VariableDeclaration","scope":2613,"src":"4670:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2575,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"success","nameLocation":"4699:7:11","nodeType":"VariableDeclaration","scope":2613,"src":"4694:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2577,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:11","nodeType":"VariableDeclaration","scope":2613,"src":"4716:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2579,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:11"},"returnParameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2613,"src":"4769:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2582,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:11"},"scope":2654,"src":"4625:582:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2634,"nodeType":"Block","src":"5509:122:11","statements":[{"condition":{"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:11","subExpression":{"id":2623,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"5524:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2632,"nodeType":"Block","src":"5583:42:11","statements":[{"expression":{"id":2630,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"5604:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2622,"id":2631,"nodeType":"Return","src":"5597:17:11"}]},"id":2633,"nodeType":"IfStatement","src":"5519:106:11","trueBody":{"id":2629,"nodeType":"Block","src":"5533:44:11","statements":[{"expression":{"arguments":[{"id":2626,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"5555:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2625,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"5547:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2628,"nodeType":"ExpressionStatement","src":"5547:19:11"}]}}]},"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"5213:189:11","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2635,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:11","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"success","nameLocation":"5438:7:11","nodeType":"VariableDeclaration","scope":2635,"src":"5433:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2615,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:11","nodeType":"VariableDeclaration","scope":2635,"src":"5447:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2617,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:11"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2635,"src":"5495:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2620,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:11"},"scope":2654,"src":"5407:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2652,"nodeType":"Block","src":"5798:461:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2641,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"5874:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:11","memberName":"length","nodeType":"MemberAccess","src":"5874:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2650,"nodeType":"Block","src":"6204:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2647,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"6225:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2649,"nodeType":"RevertStatement","src":"6218:24:11"}]},"id":2651,"nodeType":"IfStatement","src":"5870:383:11","trueBody":{"id":2646,"nodeType":"Block","src":"5897:301:11","statements":[{"AST":{"nodeType":"YulBlock","src":"6055:133:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6073:40:11","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"6102:10:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6096:5:11"},"nodeType":"YulFunctionCall","src":"6096:17:11"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6077:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:2:11","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"6145:10:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6137:3:11"},"nodeType":"YulFunctionCall","src":"6137:19:11"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6158:15:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:11"},"nodeType":"YulFunctionCall","src":"6130:44:11"},"nodeType":"YulExpressionStatement","src":"6130:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2638,"isOffset":false,"isSlot":false,"src":"6102:10:11","valueSize":1},{"declaration":2638,"isOffset":false,"isSlot":false,"src":"6145:10:11","valueSize":1}],"id":2645,"nodeType":"InlineAssembly","src":"6046:142:11"}]}}]},"documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"5637:101:11","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2653,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:11","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:11","nodeType":"VariableDeclaration","scope":2653,"src":"5760:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2637,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:11"},"returnParameters":{"id":2640,"nodeType":"ParameterList","parameters":[],"src":"5798:0:11"},"scope":2654,"src":"5743:516:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2655,"src":"195:6066:11","usedErrors":[2409,2414,2417],"usedEvents":[]}],"src":"101:6161:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2684]},"id":2685,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2656,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2684,"linearizedBaseContracts":[2684],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2665,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":2662,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2661,"id":2664,"nodeType":"Return","src":"728:17:12"}]},"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2666,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2659,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":2684,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2674,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":2671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2670,"id":2673,"nodeType":"Return","src":"835:15:12"}]},"id":2675,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2675,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2668,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":2684,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2682,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2679,"id":2681,"nodeType":"Return","src":"945:8:12"}]},"id":2683,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2683,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":2684,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2685,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4566],"SignedMath":[4671],"Strings":[2939]},"id":2940,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2686,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2688,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2940,"sourceUnit":4567,"src":"127:37:13","symbolAliases":[{"foreign":{"id":2687,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"135:4:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2940,"sourceUnit":4672,"src":"165:49:13","symbolAliases":[{"foreign":{"id":2689,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"173:10:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"216:34:13","text":" @dev String operations."},"fullyImplemented":true,"id":2939,"linearizedBaseContracts":[2939],"name":"Strings","nameLocation":"259:7:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2694,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:13","nodeType":"VariableDeclaration","scope":2939,"src":"273:56:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2692,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2697,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:13","nodeType":"VariableDeclaration","scope":2939,"src":"335:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2695,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"384:81:13","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2704,"name":"StringsInsufficientHexLength","nameLocation":"476:28:13","nodeType":"ErrorDefinition","parameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"value","nameLocation":"513:5:13","nodeType":"VariableDeclaration","scope":2704,"src":"505:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"length","nameLocation":"528:6:13","nodeType":"VariableDeclaration","scope":2704,"src":"520:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:13"},"src":"470:66:13"},{"body":{"id":2751,"nodeType":"Block","src":"708:627:13","statements":[{"id":2750,"nodeType":"UncheckedBlock","src":"718:611:13","statements":[{"assignments":[2713],"declarations":[{"constant":false,"id":2713,"mutability":"mutable","name":"length","nameLocation":"750:6:13","nodeType":"VariableDeclaration","scope":2750,"src":"742:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2720,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"770:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2714,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"759:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4566_$","typeString":"type(library Math)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:13","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4386,"src":"759:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:13"},{"assignments":[2722],"declarations":[{"constant":false,"id":2722,"mutability":"mutable","name":"buffer","nameLocation":"808:6:13","nodeType":"VariableDeclaration","scope":2750,"src":"794:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2721,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2727,"initialValue":{"arguments":[{"id":2725,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"828:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2723,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:13"},{"assignments":[2729],"declarations":[{"constant":false,"id":2729,"mutability":"mutable","name":"ptr","nameLocation":"857:3:13","nodeType":"VariableDeclaration","scope":2750,"src":"849:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2728,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2730,"nodeType":"VariableDeclarationStatement","src":"849:11:13"},{"AST":{"nodeType":"YulBlock","src":"930:67:13","statements":[{"nodeType":"YulAssignment","src":"948:35:13","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:13","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:13"},"nodeType":"YulFunctionCall","src":"967:15:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:13"},"nodeType":"YulFunctionCall","src":"955:28:13"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2722,"isOffset":false,"isSlot":false,"src":"959:6:13","valueSize":1},{"declaration":2713,"isOffset":false,"isSlot":false,"src":"975:6:13","valueSize":1},{"declaration":2729,"isOffset":false,"isSlot":false,"src":"948:3:13","valueSize":1}],"id":2731,"nodeType":"InlineAssembly","src":"921:76:13"},{"body":{"id":2746,"nodeType":"Block","src":"1023:269:13","statements":[{"expression":{"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:13","subExpression":{"id":2733,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1041:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2735,"nodeType":"ExpressionStatement","src":"1041:5:13"},{"AST":{"nodeType":"YulBlock","src":"1124:86:13","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:13"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:13","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:13"},"nodeType":"YulFunctionCall","src":"1164:14:13"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:13"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:13"},"nodeType":"YulFunctionCall","src":"1159:32:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:13"},"nodeType":"YulFunctionCall","src":"1146:46:13"},"nodeType":"YulExpressionStatement","src":"1146:46:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2694,"isOffset":false,"isSlot":false,"src":"1180:10:13","valueSize":1},{"declaration":2729,"isOffset":false,"isSlot":false,"src":"1154:3:13","valueSize":1},{"declaration":2707,"isOffset":false,"isSlot":false,"src":"1168:5:13","valueSize":1}],"id":2736,"nodeType":"InlineAssembly","src":"1115:95:13"},{"expression":{"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"1227:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2740,"nodeType":"ExpressionStatement","src":"1227:11:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"1260:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2745,"nodeType":"IfStatement","src":"1256:21:13","trueBody":{"id":2744,"nodeType":"Break","src":"1272:5:13"}}]},"condition":{"hexValue":"74727565","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2747,"nodeType":"WhileStatement","src":"1010:282:13"},{"expression":{"id":2748,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"1312:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2711,"id":2749,"nodeType":"Return","src":"1305:13:13"}]}]},"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"542:90:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2752,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:13","nodeType":"FunctionDefinition","parameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"value","nameLocation":"663:5:13","nodeType":"VariableDeclaration","scope":2752,"src":"655:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:13"},"returnParameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2752,"src":"693:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2709,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:13"},"scope":2939,"src":"637:698:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2777,"nodeType":"Block","src":"1511:92:13","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"1542:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:13","trueExpression":{"hexValue":"2d","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"1588:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2770,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"1573:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$4671_$","typeString":"type(library SignedMath)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:13","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":4670,"src":"1573:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2769,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"1564:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2760,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:13","typeDescriptions":{}}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:13","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:13","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2759,"id":2776,"nodeType":"Return","src":"1521:75:13"}]},"documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"1341:89:13","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2778,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:13","nodeType":"FunctionDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"value","nameLocation":"1466:5:13","nodeType":"VariableDeclaration","scope":2778,"src":"1459:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2754,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:13"},"returnParameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2778,"src":"1496:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2757,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:13"},"scope":2939,"src":"1435:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2797,"nodeType":"Block","src":"1782:100:13","statements":[{"id":2796,"nodeType":"UncheckedBlock","src":"1792:84:13","statements":[{"expression":{"arguments":[{"id":2787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"1835:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"1854:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2788,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"1842:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4566_$","typeString":"type(library Math)"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:13","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4508,"src":"1842:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2786,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2798,2881,2901],"referencedDeclaration":2881,"src":"1823:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2785,"id":2795,"nodeType":"Return","src":"1816:49:13"}]}]},"documentation":{"id":2779,"nodeType":"StructuredDocumentation","src":"1609:94:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2798,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:13","nodeType":"FunctionDefinition","parameters":{"id":2782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2781,"mutability":"mutable","name":"value","nameLocation":"1737:5:13","nodeType":"VariableDeclaration","scope":2798,"src":"1729:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:13"},"returnParameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2798,"src":"1767:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2783,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:13"},"scope":2939,"src":"1708:174:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2880,"nodeType":"Block","src":"2095:435:13","statements":[{"assignments":[2809],"declarations":[{"constant":false,"id":2809,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:13","nodeType":"VariableDeclaration","scope":2880,"src":"2105:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2811,"initialValue":{"id":2810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"2126:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:13"},{"assignments":[2813],"declarations":[{"constant":false,"id":2813,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:13","nodeType":"VariableDeclaration","scope":2880,"src":"2141:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2812,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2822,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2817,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"2177:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2814,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:13"},{"expression":{"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2823,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2198:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2825,"indexExpression":{"hexValue":"30","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2828,"nodeType":"ExpressionStatement","src":"2198:15:13"},{"expression":{"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2829,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2223:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2831,"indexExpression":{"hexValue":"31","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2834,"nodeType":"ExpressionStatement","src":"2223:15:13"},{"body":{"id":2863,"nodeType":"Block","src":"2293:95:13","statements":[{"expression":{"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2849,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2307:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2851,"indexExpression":{"id":2850,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"2314:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2852,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"2319:10:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2856,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2853,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"2330:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2858,"nodeType":"ExpressionStatement","src":"2307:40:13"},{"expression":{"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2859,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"2361:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2862,"nodeType":"ExpressionStatement","src":"2361:16:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2843,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"2281:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2864,"initializationExpression":{"assignments":[2836],"declarations":[{"constant":false,"id":2836,"mutability":"mutable","name":"i","nameLocation":"2261:1:13","nodeType":"VariableDeclaration","scope":2864,"src":"2253:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2842,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2838,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"2269:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:13"},"loopExpression":{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:13","subExpression":{"id":2846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"2290:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2848,"nodeType":"ExpressionStatement","src":"2288:3:13"},"nodeType":"ForStatement","src":"2248:140:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2865,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"2401:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2874,"nodeType":"IfStatement","src":"2397:96:13","trueBody":{"id":2873,"nodeType":"Block","src":"2418:75:13","statements":[{"errorCall":{"arguments":[{"id":2869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"2468:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2870,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"2475:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2868,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"2439:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2872,"nodeType":"RevertStatement","src":"2432:50:13"}]}},{"expression":{"arguments":[{"id":2877,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2516:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2875,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:13","typeDescriptions":{}}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2807,"id":2879,"nodeType":"Return","src":"2502:21:13"}]},"documentation":{"id":2799,"nodeType":"StructuredDocumentation","src":"1888:112:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2881,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:13","nodeType":"FunctionDefinition","parameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"value","nameLocation":"2034:5:13","nodeType":"VariableDeclaration","scope":2881,"src":"2026:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2803,"mutability":"mutable","name":"length","nameLocation":"2049:6:13","nodeType":"VariableDeclaration","scope":2881,"src":"2041:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:13"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2881,"src":"2080:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2805,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:13"},"scope":2939,"src":"2005:525:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2900,"nodeType":"Block","src":"2762:75:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2894,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"2807:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2892,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:13","typeDescriptions":{}}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:13","typeDescriptions":{}}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2897,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"2815:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2889,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2798,2881,2901],"referencedDeclaration":2881,"src":"2779:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2888,"id":2899,"nodeType":"Return","src":"2772:58:13"}]},"documentation":{"id":2882,"nodeType":"StructuredDocumentation","src":"2536:148:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2901,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:13","nodeType":"FunctionDefinition","parameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"addr","nameLocation":"2718:4:13","nodeType":"VariableDeclaration","scope":2901,"src":"2710:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2883,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:13"},"returnParameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2901,"src":"2747:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2886,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:13"},"scope":2939,"src":"2689:148:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2937,"nodeType":"Block","src":"2992:104:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"3015:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2911,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:13","typeDescriptions":{}}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:13","memberName":"length","nodeType":"MemberAccess","src":"3009:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2918,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"3034:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2916,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:13","typeDescriptions":{}}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:13","memberName":"length","nodeType":"MemberAccess","src":"3028:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"3063:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2923,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:13","typeDescriptions":{}}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2922,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2931,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"3086:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2929,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:13","typeDescriptions":{}}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2928,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2910,"id":2936,"nodeType":"Return","src":"3002:87:13"}]},"documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"2843:66:13","text":" @dev Returns true if the two strings are equal."},"id":2938,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:13","nodeType":"FunctionDefinition","parameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"a","nameLocation":"2943:1:13","nodeType":"VariableDeclaration","scope":2938,"src":"2929:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2903,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"b","nameLocation":"2960:1:13","nodeType":"VariableDeclaration","scope":2938,"src":"2946:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2905,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:13"},"returnParameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2938,"src":"2986:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2908,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:13"},"scope":2939,"src":"2914:182:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2940,"src":"251:2847:13","usedErrors":[2704],"usedEvents":[]}],"src":"101:2998:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[3476]},"id":3477,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2941,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":2942,"nodeType":"StructuredDocumentation","src":"144:658:14","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":3476,"linearizedBaseContracts":[3476],"name":"MerkleProof","nameLocation":"811:11:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"829:60:14","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":2945,"name":"MerkleProofInvalidMultiproof","nameLocation":"900:28:14","nodeType":"ErrorDefinition","parameters":{"id":2944,"nodeType":"ParameterList","parameters":[],"src":"928:2:14"},"src":"894:37:14"},{"body":{"id":2965,"nodeType":"Block","src":"1362:57:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2959,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"1392:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":2960,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"1399:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2958,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"1379:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1379:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2962,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"1408:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1379:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2957,"id":2964,"nodeType":"Return","src":"1372:40:14"}]},"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"937:323:14","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":2966,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1274:6:14","nodeType":"FunctionDefinition","parameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"proof","nameLocation":"1298:5:14","nodeType":"VariableDeclaration","scope":2966,"src":"1281:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1281:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2948,"nodeType":"ArrayTypeName","src":"1281:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2951,"mutability":"mutable","name":"root","nameLocation":"1313:4:14","nodeType":"VariableDeclaration","scope":2966,"src":"1305:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1305:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2953,"mutability":"mutable","name":"leaf","nameLocation":"1327:4:14","nodeType":"VariableDeclaration","scope":2966,"src":"1319:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1319:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1280:52:14"},"returnParameters":{"id":2957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2966,"src":"1356:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2955,"name":"bool","nodeType":"ElementaryTypeName","src":"1356:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1355:6:14"},"scope":3476,"src":"1265:154:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2986,"nodeType":"Block","src":"1589:65:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2980,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"1627:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":2981,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"1634:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2979,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"1606:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2983,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"1643:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1606:41:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2978,"id":2985,"nodeType":"Return","src":"1599:48:14"}]},"documentation":{"id":2967,"nodeType":"StructuredDocumentation","src":"1425:52:14","text":" @dev Calldata version of {verify}"},"id":2987,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1491:14:14","nodeType":"FunctionDefinition","parameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"proof","nameLocation":"1525:5:14","nodeType":"VariableDeclaration","scope":2987,"src":"1506:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1506:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2969,"nodeType":"ArrayTypeName","src":"1506:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"root","nameLocation":"1540:4:14","nodeType":"VariableDeclaration","scope":2987,"src":"1532:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1532:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"leaf","nameLocation":"1554:4:14","nodeType":"VariableDeclaration","scope":2987,"src":"1546:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1546:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1505:54:14"},"returnParameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2987,"src":"1583:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2976,"name":"bool","nodeType":"ElementaryTypeName","src":"1583:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1582:6:14"},"scope":3476,"src":"1482:172:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3026,"nodeType":"Block","src":"2059:198:14","statements":[{"assignments":[2999],"declarations":[{"constant":false,"id":2999,"mutability":"mutable","name":"computedHash","nameLocation":"2077:12:14","nodeType":"VariableDeclaration","scope":3026,"src":"2069:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3001,"initialValue":{"id":3000,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"2092:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2069:27:14"},{"body":{"id":3022,"nodeType":"Block","src":"2149:73:14","statements":[{"expression":{"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3013,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"2163:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3015,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"2188:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3016,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"2202:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3018,"indexExpression":{"id":3017,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"2208:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2202:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3014,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"2178:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2163:48:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3021,"nodeType":"ExpressionStatement","src":"2163:48:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3006,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"2126:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3007,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"2130:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2136:6:14","memberName":"length","nodeType":"MemberAccess","src":"2130:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3023,"initializationExpression":{"assignments":[3003],"declarations":[{"constant":false,"id":3003,"mutability":"mutable","name":"i","nameLocation":"2119:1:14","nodeType":"VariableDeclaration","scope":3023,"src":"2111:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3005,"initialValue":{"hexValue":"30","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2123:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2111:13:14"},"loopExpression":{"expression":{"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2144:3:14","subExpression":{"id":3010,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"2144:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3012,"nodeType":"ExpressionStatement","src":"2144:3:14"},"nodeType":"ForStatement","src":"2106:116:14"},{"expression":{"id":3024,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"2238:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2997,"id":3025,"nodeType":"Return","src":"2231:19:14"}]},"documentation":{"id":2988,"nodeType":"StructuredDocumentation","src":"1660:302:14","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted."},"id":3027,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1976:12:14","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"proof","nameLocation":"2006:5:14","nodeType":"VariableDeclaration","scope":3027,"src":"1989:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2990,"nodeType":"ArrayTypeName","src":"1989:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"leaf","nameLocation":"2021:4:14","nodeType":"VariableDeclaration","scope":3027,"src":"2013:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2013:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1988:38:14"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3027,"src":"2050:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2050:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2049:9:14"},"scope":3476,"src":"1967:290:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3066,"nodeType":"Block","src":"2428:198:14","statements":[{"assignments":[3039],"declarations":[{"constant":false,"id":3039,"mutability":"mutable","name":"computedHash","nameLocation":"2446:12:14","nodeType":"VariableDeclaration","scope":3066,"src":"2438:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2438:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3041,"initialValue":{"id":3040,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"2461:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2438:27:14"},{"body":{"id":3062,"nodeType":"Block","src":"2518:73:14","statements":[{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3053,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"2532:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3055,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"2557:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3056,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"2571:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3058,"indexExpression":{"id":3057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"2577:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2571:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3054,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"2547:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2532:48:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3061,"nodeType":"ExpressionStatement","src":"2532:48:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"2495:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3047,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"2499:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2505:6:14","memberName":"length","nodeType":"MemberAccess","src":"2499:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2495:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3063,"initializationExpression":{"assignments":[3043],"declarations":[{"constant":false,"id":3043,"mutability":"mutable","name":"i","nameLocation":"2488:1:14","nodeType":"VariableDeclaration","scope":3063,"src":"2480:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3045,"initialValue":{"hexValue":"30","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2492:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2480:13:14"},"loopExpression":{"expression":{"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2513:3:14","subExpression":{"id":3050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"2513:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3052,"nodeType":"ExpressionStatement","src":"2513:3:14"},"nodeType":"ForStatement","src":"2475:116:14"},{"expression":{"id":3064,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"2607:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3037,"id":3065,"nodeType":"Return","src":"2600:19:14"}]},"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"2263:58:14","text":" @dev Calldata version of {processProof}"},"id":3067,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2335:20:14","nodeType":"FunctionDefinition","parameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"proof","nameLocation":"2375:5:14","nodeType":"VariableDeclaration","scope":3067,"src":"2356:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2356:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3030,"nodeType":"ArrayTypeName","src":"2356:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3033,"mutability":"mutable","name":"leaf","nameLocation":"2390:4:14","nodeType":"VariableDeclaration","scope":3067,"src":"2382:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2382:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2355:40:14"},"returnParameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"2419:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2419:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2418:9:14"},"scope":3476,"src":"2326:300:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3092,"nodeType":"Block","src":"3131:76:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3085,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"3166:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3086,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"3173:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":3087,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"3185:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3084,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"3148:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3089,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"3196:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3148:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3083,"id":3091,"nodeType":"Return","src":"3141:59:14"}]},"documentation":{"id":3068,"nodeType":"StructuredDocumentation","src":"2632:312:14","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":3093,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"2958:16:14","nodeType":"FunctionDefinition","parameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3071,"mutability":"mutable","name":"proof","nameLocation":"3001:5:14","nodeType":"VariableDeclaration","scope":3093,"src":"2984:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2984:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3070,"nodeType":"ArrayTypeName","src":"2984:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"proofFlags","nameLocation":"3030:10:14","nodeType":"VariableDeclaration","scope":3093,"src":"3016:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3072,"name":"bool","nodeType":"ElementaryTypeName","src":"3016:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3073,"nodeType":"ArrayTypeName","src":"3016:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"root","nameLocation":"3058:4:14","nodeType":"VariableDeclaration","scope":3093,"src":"3050:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3050:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"leaves","nameLocation":"3089:6:14","nodeType":"VariableDeclaration","scope":3093,"src":"3072:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3072:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3078,"nodeType":"ArrayTypeName","src":"3072:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2974:127:14"},"returnParameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3093,"src":"3125:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3081,"name":"bool","nodeType":"ElementaryTypeName","src":"3125:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3124:6:14"},"scope":3476,"src":"2949:258:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3118,"nodeType":"Block","src":"3574:84:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3111,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"3617:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3112,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"3624:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":3113,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"3636:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3110,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"3591:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3115,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"3647:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3591:60:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3109,"id":3117,"nodeType":"Return","src":"3584:67:14"}]},"documentation":{"id":3094,"nodeType":"StructuredDocumentation","src":"3213:162:14","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":3119,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3389:24:14","nodeType":"FunctionDefinition","parameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"proof","nameLocation":"3442:5:14","nodeType":"VariableDeclaration","scope":3119,"src":"3423:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3096,"nodeType":"ArrayTypeName","src":"3423:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"proofFlags","nameLocation":"3473:10:14","nodeType":"VariableDeclaration","scope":3119,"src":"3457:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3098,"name":"bool","nodeType":"ElementaryTypeName","src":"3457:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3099,"nodeType":"ArrayTypeName","src":"3457:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"root","nameLocation":"3501:4:14","nodeType":"VariableDeclaration","scope":3119,"src":"3493:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3493:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"leaves","nameLocation":"3532:6:14","nodeType":"VariableDeclaration","scope":3119,"src":"3515:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3104,"nodeType":"ArrayTypeName","src":"3515:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3413:131:14"},"returnParameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3119,"src":"3568:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3107,"name":"bool","nodeType":"ElementaryTypeName","src":"3568:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3567:6:14"},"scope":3476,"src":"3380:278:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3278,"nodeType":"Block","src":"4574:2107:14","statements":[{"assignments":[3135],"declarations":[{"constant":false,"id":3135,"mutability":"mutable","name":"leavesLen","nameLocation":"4966:9:14","nodeType":"VariableDeclaration","scope":3278,"src":"4958:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"4958:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3138,"initialValue":{"expression":{"id":3136,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"4978:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4985:6:14","memberName":"length","nodeType":"MemberAccess","src":"4978:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4958:33:14"},{"assignments":[3140],"declarations":[{"constant":false,"id":3140,"mutability":"mutable","name":"proofLen","nameLocation":"5009:8:14","nodeType":"VariableDeclaration","scope":3278,"src":"5001:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"5001:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3143,"initialValue":{"expression":{"id":3141,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5020:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5026:6:14","memberName":"length","nodeType":"MemberAccess","src":"5020:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5001:31:14"},{"assignments":[3145],"declarations":[{"constant":false,"id":3145,"mutability":"mutable","name":"totalHashes","nameLocation":"5050:11:14","nodeType":"VariableDeclaration","scope":3278,"src":"5042:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5042:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3148,"initialValue":{"expression":{"id":3146,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"5064:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:6:14","memberName":"length","nodeType":"MemberAccess","src":"5064:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5042:39:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3149,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"5129:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3150,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"5141:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5129:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"5153:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5167:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5153:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5129:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3160,"nodeType":"IfStatement","src":"5125:107:14","trueBody":{"id":3159,"nodeType":"Block","src":"5170:62:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3156,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"5191:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3158,"nodeType":"RevertStatement","src":"5184:37:14"}]}},{"assignments":[3165],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"hashes","nameLocation":"5493:6:14","nodeType":"VariableDeclaration","scope":3278,"src":"5476:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5476:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3164,"nodeType":"ArrayTypeName","src":"5476:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3171,"initialValue":{"arguments":[{"id":3169,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"5516:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5502:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5506:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3167,"nodeType":"ArrayTypeName","src":"5506:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5502:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5476:52:14"},{"assignments":[3173],"declarations":[{"constant":false,"id":3173,"mutability":"mutable","name":"leafPos","nameLocation":"5546:7:14","nodeType":"VariableDeclaration","scope":3278,"src":"5538:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"5538:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3175,"initialValue":{"hexValue":"30","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5556:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5538:19:14"},{"assignments":[3177],"declarations":[{"constant":false,"id":3177,"mutability":"mutable","name":"hashPos","nameLocation":"5575:7:14","nodeType":"VariableDeclaration","scope":3278,"src":"5567:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"5567:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3179,"initialValue":{"hexValue":"30","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5567:19:14"},{"assignments":[3181],"declarations":[{"constant":false,"id":3181,"mutability":"mutable","name":"proofPos","nameLocation":"5604:8:14","nodeType":"VariableDeclaration","scope":3278,"src":"5596:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"5596:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3183,"initialValue":{"hexValue":"30","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5615:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5596:20:14"},{"body":{"id":3242,"nodeType":"Block","src":"6034:292:14","statements":[{"assignments":[3195],"declarations":[{"constant":false,"id":3195,"mutability":"mutable","name":"a","nameLocation":"6056:1:14","nodeType":"VariableDeclaration","scope":3242,"src":"6048:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6048:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3208,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3196,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"6060:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3197,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"6070:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6060:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3203,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"6102:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3206,"indexExpression":{"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6109:9:14","subExpression":{"id":3204,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"6109:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6102:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6060:59:14","trueExpression":{"baseExpression":{"id":3199,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"6082:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3202,"indexExpression":{"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6089:9:14","subExpression":{"id":3200,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"6089:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6082:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6048:71:14"},{"assignments":[3210],"declarations":[{"constant":false,"id":3210,"mutability":"mutable","name":"b","nameLocation":"6141:1:14","nodeType":"VariableDeclaration","scope":3242,"src":"6133:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6133:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3232,"initialValue":{"condition":{"baseExpression":{"id":3211,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"6145:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3213,"indexExpression":{"id":3212,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"6156:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6145:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3227,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"6257:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3230,"indexExpression":{"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6263:10:14","subExpression":{"id":3228,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"6263:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6257:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6145:129:14","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3214,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"6178:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3215,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"6188:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6178:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3221,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"6220:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3224,"indexExpression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6227:9:14","subExpression":{"id":3222,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"6227:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6220:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6178:59:14","trueExpression":{"baseExpression":{"id":3217,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"6200:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3220,"indexExpression":{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6207:9:14","subExpression":{"id":3218,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"6207:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6200:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6177:61:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6133:141:14"},{"expression":{"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3233,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"6288:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3235,"indexExpression":{"id":3234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"6295:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6288:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"6310:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"6313:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3236,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"6300:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6300:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6288:27:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3241,"nodeType":"ExpressionStatement","src":"6288:27:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"6012:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3189,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"6016:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6012:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3243,"initializationExpression":{"assignments":[3185],"declarations":[{"constant":false,"id":3185,"mutability":"mutable","name":"i","nameLocation":"6005:1:14","nodeType":"VariableDeclaration","scope":3243,"src":"5997:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"5997:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3187,"initialValue":{"hexValue":"30","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6009:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5997:13:14"},"loopExpression":{"expression":{"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6029:3:14","subExpression":{"id":3191,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"6029:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3193,"nodeType":"ExpressionStatement","src":"6029:3:14"},"nodeType":"ForStatement","src":"5992:334:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3244,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"6340:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6354:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6340:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"6573:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6585:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6573:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3275,"nodeType":"Block","src":"6635:40:14","statements":[{"expression":{"baseExpression":{"id":3271,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"6656:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3273,"indexExpression":{"hexValue":"30","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6662:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6656:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3133,"id":3274,"nodeType":"Return","src":"6649:15:14"}]},"id":3276,"nodeType":"IfStatement","src":"6569:106:14","trueBody":{"id":3270,"nodeType":"Block","src":"6588:41:14","statements":[{"expression":{"baseExpression":{"id":3266,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"6609:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3268,"indexExpression":{"hexValue":"30","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6616:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6609:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3133,"id":3269,"nodeType":"Return","src":"6602:16:14"}]}},"id":3277,"nodeType":"IfStatement","src":"6336:339:14","trueBody":{"id":3262,"nodeType":"Block","src":"6357:206:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3247,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"6375:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3248,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"6387:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6375:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3254,"nodeType":"IfStatement","src":"6371:96:14","trueBody":{"id":3253,"nodeType":"Block","src":"6397:70:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3250,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"6422:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6422:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3252,"nodeType":"RevertStatement","src":"6415:37:14"}]}},{"id":3261,"nodeType":"UncheckedBlock","src":"6480:73:14","statements":[{"expression":{"baseExpression":{"id":3255,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"6515:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3259,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3256,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"6522:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6536:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6522:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6515:23:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3133,"id":3260,"nodeType":"Return","src":"6508:30:14"}]}]}}]},"documentation":{"id":3120,"nodeType":"StructuredDocumentation","src":"3664:730:14","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer)."},"id":3279,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4408:17:14","nodeType":"FunctionDefinition","parameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"proof","nameLocation":"4452:5:14","nodeType":"VariableDeclaration","scope":3279,"src":"4435:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4435:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3122,"nodeType":"ArrayTypeName","src":"4435:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3126,"mutability":"mutable","name":"proofFlags","nameLocation":"4481:10:14","nodeType":"VariableDeclaration","scope":3279,"src":"4467:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3124,"name":"bool","nodeType":"ElementaryTypeName","src":"4467:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3125,"nodeType":"ArrayTypeName","src":"4467:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"leaves","nameLocation":"4518:6:14","nodeType":"VariableDeclaration","scope":3279,"src":"4501:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4501:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3128,"nodeType":"ArrayTypeName","src":"4501:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4425:105:14"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"merkleRoot","nameLocation":"4562:10:14","nodeType":"VariableDeclaration","scope":3279,"src":"4554:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4554:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4553:20:14"},"scope":3476,"src":"4399:2282:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3438,"nodeType":"Block","src":"7043:2107:14","statements":[{"assignments":[3295],"declarations":[{"constant":false,"id":3295,"mutability":"mutable","name":"leavesLen","nameLocation":"7435:9:14","nodeType":"VariableDeclaration","scope":3438,"src":"7427:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"7427:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3298,"initialValue":{"expression":{"id":3296,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"7447:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7454:6:14","memberName":"length","nodeType":"MemberAccess","src":"7447:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7427:33:14"},{"assignments":[3300],"declarations":[{"constant":false,"id":3300,"mutability":"mutable","name":"proofLen","nameLocation":"7478:8:14","nodeType":"VariableDeclaration","scope":3438,"src":"7470:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"7470:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3303,"initialValue":{"expression":{"id":3301,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"7489:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7495:6:14","memberName":"length","nodeType":"MemberAccess","src":"7489:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7470:31:14"},{"assignments":[3305],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"totalHashes","nameLocation":"7519:11:14","nodeType":"VariableDeclaration","scope":3438,"src":"7511:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"7511:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3308,"initialValue":{"expression":{"id":3306,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"7533:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7544:6:14","memberName":"length","nodeType":"MemberAccess","src":"7533:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7511:39:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3309,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"7598:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3310,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"7610:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7598:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3312,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"7622:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7636:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7622:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7598:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3320,"nodeType":"IfStatement","src":"7594:107:14","trueBody":{"id":3319,"nodeType":"Block","src":"7639:62:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3316,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"7660:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7660:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3318,"nodeType":"RevertStatement","src":"7653:37:14"}]}},{"assignments":[3325],"declarations":[{"constant":false,"id":3325,"mutability":"mutable","name":"hashes","nameLocation":"7962:6:14","nodeType":"VariableDeclaration","scope":3438,"src":"7945:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7945:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3324,"nodeType":"ArrayTypeName","src":"7945:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3331,"initialValue":{"arguments":[{"id":3329,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"7985:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7971:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7975:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3327,"nodeType":"ArrayTypeName","src":"7975:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7971:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7945:52:14"},{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"leafPos","nameLocation":"8015:7:14","nodeType":"VariableDeclaration","scope":3438,"src":"8007:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"8007:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3335,"initialValue":{"hexValue":"30","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8025:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8007:19:14"},{"assignments":[3337],"declarations":[{"constant":false,"id":3337,"mutability":"mutable","name":"hashPos","nameLocation":"8044:7:14","nodeType":"VariableDeclaration","scope":3438,"src":"8036:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3339,"initialValue":{"hexValue":"30","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8036:19:14"},{"assignments":[3341],"declarations":[{"constant":false,"id":3341,"mutability":"mutable","name":"proofPos","nameLocation":"8073:8:14","nodeType":"VariableDeclaration","scope":3438,"src":"8065:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3343,"initialValue":{"hexValue":"30","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8084:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8065:20:14"},{"body":{"id":3402,"nodeType":"Block","src":"8503:292:14","statements":[{"assignments":[3355],"declarations":[{"constant":false,"id":3355,"mutability":"mutable","name":"a","nameLocation":"8525:1:14","nodeType":"VariableDeclaration","scope":3402,"src":"8517:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8517:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3368,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3356,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8529:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3357,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8539:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8529:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3363,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"8571:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3366,"indexExpression":{"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:9:14","subExpression":{"id":3364,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"8578:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8571:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8529:59:14","trueExpression":{"baseExpression":{"id":3359,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"8551:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3362,"indexExpression":{"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8558:9:14","subExpression":{"id":3360,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8558:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8551:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8517:71:14"},{"assignments":[3370],"declarations":[{"constant":false,"id":3370,"mutability":"mutable","name":"b","nameLocation":"8610:1:14","nodeType":"VariableDeclaration","scope":3402,"src":"8602:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8602:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3392,"initialValue":{"condition":{"baseExpression":{"id":3371,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"8614:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":3373,"indexExpression":{"id":3372,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"8625:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8614:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3387,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"8726:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3390,"indexExpression":{"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8732:10:14","subExpression":{"id":3388,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"8732:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8726:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8614:129:14","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3374,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8647:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3375,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8657:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8647:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3381,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"8689:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3384,"indexExpression":{"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8696:9:14","subExpression":{"id":3382,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"8696:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8689:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8647:59:14","trueExpression":{"baseExpression":{"id":3377,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"8669:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3380,"indexExpression":{"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8676:9:14","subExpression":{"id":3378,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8676:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8669:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8646:61:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8602:141:14"},{"expression":{"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3393,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"8757:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3395,"indexExpression":{"id":3394,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"8764:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8757:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3397,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"8779:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3398,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"8782:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3396,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"8769:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8769:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8757:27:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3401,"nodeType":"ExpressionStatement","src":"8757:27:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"8481:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3349,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"8485:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8481:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3403,"initializationExpression":{"assignments":[3345],"declarations":[{"constant":false,"id":3345,"mutability":"mutable","name":"i","nameLocation":"8474:1:14","nodeType":"VariableDeclaration","scope":3403,"src":"8466:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3344,"name":"uint256","nodeType":"ElementaryTypeName","src":"8466:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3347,"initialValue":{"hexValue":"30","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8478:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8466:13:14"},"loopExpression":{"expression":{"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8498:3:14","subExpression":{"id":3351,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"8498:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3353,"nodeType":"ExpressionStatement","src":"8498:3:14"},"nodeType":"ForStatement","src":"8461:334:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3404,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"8809:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8823:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8809:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3423,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"9042:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9042:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3435,"nodeType":"Block","src":"9104:40:14","statements":[{"expression":{"baseExpression":{"id":3431,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"9125:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3433,"indexExpression":{"hexValue":"30","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9131:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9125:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3293,"id":3434,"nodeType":"Return","src":"9118:15:14"}]},"id":3436,"nodeType":"IfStatement","src":"9038:106:14","trueBody":{"id":3430,"nodeType":"Block","src":"9057:41:14","statements":[{"expression":{"baseExpression":{"id":3426,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"9078:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3428,"indexExpression":{"hexValue":"30","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9078:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3293,"id":3429,"nodeType":"Return","src":"9071:16:14"}]}},"id":3437,"nodeType":"IfStatement","src":"8805:339:14","trueBody":{"id":3422,"nodeType":"Block","src":"8826:206:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3407,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"8844:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3408,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"8856:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8844:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3414,"nodeType":"IfStatement","src":"8840:96:14","trueBody":{"id":3413,"nodeType":"Block","src":"8866:70:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3410,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"8891:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8891:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3412,"nodeType":"RevertStatement","src":"8884:37:14"}]}},{"id":3421,"nodeType":"UncheckedBlock","src":"8949:73:14","statements":[{"expression":{"baseExpression":{"id":3415,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"8984:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3419,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3416,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"8991:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9005:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8991:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8984:23:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3293,"id":3420,"nodeType":"Return","src":"8977:30:14"}]}]}}]},"documentation":{"id":3280,"nodeType":"StructuredDocumentation","src":"6687:164:14","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":3439,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6865:25:14","nodeType":"FunctionDefinition","parameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"proof","nameLocation":"6919:5:14","nodeType":"VariableDeclaration","scope":3439,"src":"6900:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6900:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3282,"nodeType":"ArrayTypeName","src":"6900:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3286,"mutability":"mutable","name":"proofFlags","nameLocation":"6950:10:14","nodeType":"VariableDeclaration","scope":3439,"src":"6934:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3284,"name":"bool","nodeType":"ElementaryTypeName","src":"6934:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3285,"nodeType":"ArrayTypeName","src":"6934:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"leaves","nameLocation":"6987:6:14","nodeType":"VariableDeclaration","scope":3439,"src":"6970:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6970:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3288,"nodeType":"ArrayTypeName","src":"6970:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6890:109:14"},"returnParameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"merkleRoot","nameLocation":"7031:10:14","nodeType":"VariableDeclaration","scope":3439,"src":"7023:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7023:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7022:20:14"},"scope":3476,"src":"6856:2294:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3462,"nodeType":"Block","src":"9301:75:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"9318:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3450,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"9322:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9318:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3457,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"9364:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"9367:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3456,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"9349:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9349:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9318:51:14","trueExpression":{"arguments":[{"id":3453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"9341:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3454,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"9344:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3452,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"9326:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9326:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3448,"id":3461,"nodeType":"Return","src":"9311:58:14"}]},"documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"9156:68:14","text":" @dev Sorts the pair (a, b) and hashes the result."},"id":3463,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"9238:9:14","nodeType":"FunctionDefinition","parameters":{"id":3445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"a","nameLocation":"9256:1:14","nodeType":"VariableDeclaration","scope":3463,"src":"9248:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9248:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3444,"mutability":"mutable","name":"b","nameLocation":"9267:1:14","nodeType":"VariableDeclaration","scope":3463,"src":"9259:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9259:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9247:22:14"},"returnParameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3463,"src":"9292:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9292:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9291:9:14"},"scope":3476,"src":"9229:147:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3474,"nodeType":"Block","src":"9579:178:14","statements":[{"AST":{"nodeType":"YulBlock","src":"9641:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9662:4:14","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9668:1:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9655:6:14"},"nodeType":"YulFunctionCall","src":"9655:15:14"},"nodeType":"YulExpressionStatement","src":"9655:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9690:4:14","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9696:1:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9683:6:14"},"nodeType":"YulFunctionCall","src":"9683:15:14"},"nodeType":"YulExpressionStatement","src":"9683:15:14"},{"nodeType":"YulAssignment","src":"9711:30:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9730:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9736:4:14","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9720:9:14"},"nodeType":"YulFunctionCall","src":"9720:21:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9711:5:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3466,"isOffset":false,"isSlot":false,"src":"9668:1:14","valueSize":1},{"declaration":3468,"isOffset":false,"isSlot":false,"src":"9696:1:14","valueSize":1},{"declaration":3471,"isOffset":false,"isSlot":false,"src":"9711:5:14","valueSize":1}],"id":3473,"nodeType":"InlineAssembly","src":"9632:119:14"}]},"documentation":{"id":3464,"nodeType":"StructuredDocumentation","src":"9382:109:14","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":3475,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9505:14:14","nodeType":"FunctionDefinition","parameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"a","nameLocation":"9528:1:14","nodeType":"VariableDeclaration","scope":3475,"src":"9520:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9520:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3468,"mutability":"mutable","name":"b","nameLocation":"9539:1:14","nodeType":"VariableDeclaration","scope":3475,"src":"9531:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9531:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9519:22:14"},"returnParameters":{"id":3472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"value","nameLocation":"9572:5:14","nodeType":"VariableDeclaration","scope":3475,"src":"9564:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9564:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9563:15:14"},"scope":3476,"src":"9496:261:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3477,"src":"803:8956:14","usedErrors":[2945],"usedEvents":[]}],"src":"118:9642:14"},"id":14},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3500],"IERC165":[3512]},"id":3501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3478,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3480,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3501,"sourceUnit":3513,"src":"140:38:15","symbolAliases":[{"foreign":{"id":3479,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"148:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3482,"name":"IERC165","nameLocations":["687:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3512,"src":"687:7:15"},"id":3483,"nodeType":"InheritanceSpecifier","src":"687:7:15"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3481,"nodeType":"StructuredDocumentation","src":"180:478:15","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3500,"linearizedBaseContracts":[3500,3512],"name":"ERC165","nameLocation":"677:6:15","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3511],"body":{"id":3498,"nodeType":"Block","src":"844:64:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3491,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"861:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3493,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"881:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3512_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3512_$","typeString":"type(contract IERC165)"}],"id":3492,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3512","typeString":"type(contract IERC165)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:15","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3490,"id":3497,"nodeType":"Return","src":"854:47:15"}]},"documentation":{"id":3484,"nodeType":"StructuredDocumentation","src":"701:56:15","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3499,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:15","nodeType":"FunctionDefinition","parameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:15","nodeType":"VariableDeclaration","scope":3499,"src":"789:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3485,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:15"},"returnParameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3499,"src":"838:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3488,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:15"},"scope":3500,"src":"762:146:15","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3501,"src":"659:251:15","usedErrors":[],"usedEvents":[]}],"src":"114:797:15"},"id":15},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3512]},"id":3513,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3502,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"141:279:16","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3512,"linearizedBaseContracts":[3512],"name":"IERC165","nameLocation":"431:7:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"445:340:16","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3511,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:16","nodeType":"FunctionDefinition","parameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:16","nodeType":"VariableDeclaration","scope":3511,"src":"817:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3505,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:16"},"returnParameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3511,"src":"860:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3508,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:16"},"scope":3512,"src":"790:76:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3513,"src":"421:447:16","usedErrors":[],"usedEvents":[]}],"src":"115:754:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4566]},"id":4567,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3514,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3515,"nodeType":"StructuredDocumentation","src":"129:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4566,"linearizedBaseContracts":[4566],"name":"Math","nameLocation":"211:4:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3516,"nodeType":"StructuredDocumentation","src":"222:50:17","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":3518,"name":"MathOverflowedMulDiv","nameLocation":"283:20:17","nodeType":"ErrorDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[],"src":"303:2:17"},"src":"277:29:17"},{"canonicalName":"Math.Rounding","id":3523,"members":[{"id":3519,"name":"Floor","nameLocation":"336:5:17","nodeType":"EnumValue","src":"336:5:17"},{"id":3520,"name":"Ceil","nameLocation":"379:4:17","nodeType":"EnumValue","src":"379:4:17"},{"id":3521,"name":"Trunc","nameLocation":"421:5:17","nodeType":"EnumValue","src":"421:5:17"},{"id":3522,"name":"Expand","nameLocation":"451:6:17","nodeType":"EnumValue","src":"451:6:17"}],"name":"Rounding","nameLocation":"317:8:17","nodeType":"EnumDefinition","src":"312:169:17"},{"body":{"id":3554,"nodeType":"Block","src":"661:140:17","statements":[{"id":3553,"nodeType":"UncheckedBlock","src":"671:124:17","statements":[{"assignments":[3536],"declarations":[{"constant":false,"id":3536,"mutability":"mutable","name":"c","nameLocation":"703:1:17","nodeType":"VariableDeclaration","scope":3553,"src":"695:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3540,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3537,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"707:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3538,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"711:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3541,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"730:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3542,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"734:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3548,"nodeType":"IfStatement","src":"726:28:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3534,"id":3547,"nodeType":"Return","src":"737:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3550,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"782:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3534,"id":3552,"nodeType":"Return","src":"768:16:17"}]}]},"documentation":{"id":3524,"nodeType":"StructuredDocumentation","src":"487:93:17","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:17","nodeType":"FunctionDefinition","parameters":{"id":3529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3526,"mutability":"mutable","name":"a","nameLocation":"609:1:17","nodeType":"VariableDeclaration","scope":3555,"src":"601:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3528,"mutability":"mutable","name":"b","nameLocation":"620:1:17","nodeType":"VariableDeclaration","scope":3555,"src":"612:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3527,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:17"},"returnParameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3555,"src":"646:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3530,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3555,"src":"652:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:17"},"scope":4566,"src":"585:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3582,"nodeType":"Block","src":"984:113:17","statements":[{"id":3581,"nodeType":"UncheckedBlock","src":"994:97:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3567,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"1022:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3568,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"1026:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3574,"nodeType":"IfStatement","src":"1018:28:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3566,"id":3573,"nodeType":"Return","src":"1029:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"1074:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"1078:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3566,"id":3580,"nodeType":"Return","src":"1060:20:17"}]}]},"documentation":{"id":3556,"nodeType":"StructuredDocumentation","src":"807:96:17","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":3583,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:17","nodeType":"FunctionDefinition","parameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"a","nameLocation":"932:1:17","nodeType":"VariableDeclaration","scope":3583,"src":"924:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3560,"mutability":"mutable","name":"b","nameLocation":"943:1:17","nodeType":"VariableDeclaration","scope":3583,"src":"935:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:17"},"returnParameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3583,"src":"969:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3562,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3583,"src":"975:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:17"},"scope":4566,"src":"908:189:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"1283:417:17","statements":[{"id":3623,"nodeType":"UncheckedBlock","src":"1293:401:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3595,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"1551:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3602,"nodeType":"IfStatement","src":"1547:28:17","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3594,"id":3601,"nodeType":"Return","src":"1559:16:17"}},{"assignments":[3604],"declarations":[{"constant":false,"id":3604,"mutability":"mutable","name":"c","nameLocation":"1597:1:17","nodeType":"VariableDeclaration","scope":3623,"src":"1589:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3608,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3605,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"1601:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3606,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"1605:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"1624:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3610,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"1628:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3612,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"1633:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3618,"nodeType":"IfStatement","src":"1620:33:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3594,"id":3617,"nodeType":"Return","src":"1636:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3620,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"1681:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3594,"id":3622,"nodeType":"Return","src":"1667:16:17"}]}]},"documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"1103:99:17","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:17","nodeType":"FunctionDefinition","parameters":{"id":3589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"a","nameLocation":"1231:1:17","nodeType":"VariableDeclaration","scope":3625,"src":"1223:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"b","nameLocation":"1242:1:17","nodeType":"VariableDeclaration","scope":3625,"src":"1234:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:17"},"returnParameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3625,"src":"1268:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3590,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3625,"src":"1274:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:17"},"scope":4566,"src":"1207:493:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3652,"nodeType":"Block","src":"1887:114:17","statements":[{"id":3651,"nodeType":"UncheckedBlock","src":"1897:98:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"1925:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3644,"nodeType":"IfStatement","src":"1921:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3636,"id":3643,"nodeType":"Return","src":"1933:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"1978:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3647,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"1982:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3636,"id":3650,"nodeType":"Return","src":"1964:20:17"}]}]},"documentation":{"id":3626,"nodeType":"StructuredDocumentation","src":"1706:100:17","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":3653,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:17","nodeType":"FunctionDefinition","parameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"a","nameLocation":"1835:1:17","nodeType":"VariableDeclaration","scope":3653,"src":"1827:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"b","nameLocation":"1846:1:17","nodeType":"VariableDeclaration","scope":3653,"src":"1838:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:17"},"returnParameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3653,"src":"1872:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3632,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3653,"src":"1878:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:17"},"scope":4566,"src":"1811:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3680,"nodeType":"Block","src":"2198:114:17","statements":[{"id":3679,"nodeType":"UncheckedBlock","src":"2208:98:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"2236:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3672,"nodeType":"IfStatement","src":"2232:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3664,"id":3671,"nodeType":"Return","src":"2244:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3674,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"2289:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3675,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"2293:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3664,"id":3678,"nodeType":"Return","src":"2275:20:17"}]}]},"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"2007:110:17","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":3681,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:17","nodeType":"FunctionDefinition","parameters":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"a","nameLocation":"2146:1:17","nodeType":"VariableDeclaration","scope":3681,"src":"2138:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3658,"mutability":"mutable","name":"b","nameLocation":"2157:1:17","nodeType":"VariableDeclaration","scope":3681,"src":"2149:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:17"},"returnParameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3681,"src":"2183:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3660,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3681,"src":"2189:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:17"},"scope":4566,"src":"2122:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3698,"nodeType":"Block","src":"2449:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3691,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"2466:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3692,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"2470:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3695,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"2478:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:17","trueExpression":{"id":3694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"2474:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3690,"id":3697,"nodeType":"Return","src":"2459:20:17"}]},"documentation":{"id":3682,"nodeType":"StructuredDocumentation","src":"2318:59:17","text":" @dev Returns the largest of two numbers."},"id":3699,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:17","nodeType":"FunctionDefinition","parameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"a","nameLocation":"2403:1:17","nodeType":"VariableDeclaration","scope":3699,"src":"2395:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3686,"mutability":"mutable","name":"b","nameLocation":"2414:1:17","nodeType":"VariableDeclaration","scope":3699,"src":"2406:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:17"},"returnParameters":{"id":3690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3699,"src":"2440:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3688,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:17"},"scope":4566,"src":"2382:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3716,"nodeType":"Block","src":"2624:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"2641:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3710,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"2645:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3713,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"2653:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:17","trueExpression":{"id":3712,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"2649:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3708,"id":3715,"nodeType":"Return","src":"2634:20:17"}]},"documentation":{"id":3700,"nodeType":"StructuredDocumentation","src":"2492:60:17","text":" @dev Returns the smallest of two numbers."},"id":3717,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:17","nodeType":"FunctionDefinition","parameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"a","nameLocation":"2578:1:17","nodeType":"VariableDeclaration","scope":3717,"src":"2570:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"b","nameLocation":"2589:1:17","nodeType":"VariableDeclaration","scope":3717,"src":"2581:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:17"},"returnParameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3717,"src":"2615:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:17"},"scope":4566,"src":"2557:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3739,"nodeType":"Block","src":"2845:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3727,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"2900:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3728,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"2904:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"2910:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3732,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"2914:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3726,"id":3738,"nodeType":"Return","src":"2892:28:17"}]},"documentation":{"id":3718,"nodeType":"StructuredDocumentation","src":"2667:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3740,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:17","nodeType":"FunctionDefinition","parameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"a","nameLocation":"2799:1:17","nodeType":"VariableDeclaration","scope":3740,"src":"2791:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3722,"mutability":"mutable","name":"b","nameLocation":"2810:1:17","nodeType":"VariableDeclaration","scope":3740,"src":"2802:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:17"},"returnParameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3740,"src":"2836:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:17"},"scope":4566,"src":"2774:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3773,"nodeType":"Block","src":"3219:260:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3750,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"3233:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3758,"nodeType":"IfStatement","src":"3229:127:17","trueBody":{"id":3757,"nodeType":"Block","src":"3241:115:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"3340:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3754,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"3344:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3749,"id":3756,"nodeType":"Return","src":"3333:12:17"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"3444:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"3458:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3766,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3767,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"3467:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:17","trueExpression":{"hexValue":"30","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3749,"id":3772,"nodeType":"Return","src":"3437:35:17"}]},"documentation":{"id":3741,"nodeType":"StructuredDocumentation","src":"2933:210:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3774,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:17","nodeType":"FunctionDefinition","parameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"a","nameLocation":"3173:1:17","nodeType":"VariableDeclaration","scope":3774,"src":"3165:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3745,"mutability":"mutable","name":"b","nameLocation":"3184:1:17","nodeType":"VariableDeclaration","scope":3774,"src":"3176:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:17"},"returnParameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3774,"src":"3210:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:17"},"scope":4566,"src":"3148:331:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3899,"nodeType":"Block","src":"3901:4018:17","statements":[{"id":3898,"nodeType":"UncheckedBlock","src":"3911:4002:17","statements":[{"assignments":[3787],"declarations":[{"constant":false,"id":3787,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:17","nodeType":"VariableDeclaration","scope":3898,"src":"4232:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3791,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3788,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"4248:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3789,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"4252:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:17"},{"assignments":[3793],"declarations":[{"constant":false,"id":3793,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:17","nodeType":"VariableDeclaration","scope":3898,"src":"4312:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3794,"nodeType":"VariableDeclarationStatement","src":"4312:13:17"},{"AST":{"nodeType":"YulBlock","src":"4392:122:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:17"},"nodeType":"YulFunctionCall","src":"4433:6:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:17"},"nodeType":"YulFunctionCall","src":"4420:20:17"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:17","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:17","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:17"},"nodeType":"YulFunctionCall","src":"4470:14:17"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:17"},"nodeType":"YulFunctionCall","src":"4486:13:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:17"},"nodeType":"YulFunctionCall","src":"4466:34:17"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3787,"isOffset":false,"isSlot":false,"src":"4478:5:17","valueSize":1},{"declaration":3787,"isOffset":false,"isSlot":false,"src":"4493:5:17","valueSize":1},{"declaration":3793,"isOffset":false,"isSlot":false,"src":"4457:5:17","valueSize":1},{"declaration":3777,"isOffset":false,"isSlot":false,"src":"4427:1:17","valueSize":1},{"declaration":3779,"isOffset":false,"isSlot":false,"src":"4430:1:17","valueSize":1}],"id":3795,"nodeType":"InlineAssembly","src":"4383:131:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3796,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"4595:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3804,"nodeType":"IfStatement","src":"4591:368:17","trueBody":{"id":3803,"nodeType":"Block","src":"4607:352:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"4925:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3800,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"4933:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3785,"id":3802,"nodeType":"Return","src":"4918:26:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3805,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"5065:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3806,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"5080:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3812,"nodeType":"IfStatement","src":"5061:88:17","trueBody":{"id":3811,"nodeType":"Block","src":"5087:62:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3808,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"5112:20:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3810,"nodeType":"RevertStatement","src":"5105:29:17"}]}},{"assignments":[3814],"declarations":[{"constant":false,"id":3814,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:17","nodeType":"VariableDeclaration","scope":3898,"src":"5404:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3815,"nodeType":"VariableDeclarationStatement","src":"5404:17:17"},{"AST":{"nodeType":"YulBlock","src":"5444:291:17","statements":[{"nodeType":"YulAssignment","src":"5513:38:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:17"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:17"},"nodeType":"YulFunctionCall","src":"5526:25:17"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:17"}]},{"nodeType":"YulAssignment","src":"5633:41:17","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:17"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:17"},"nodeType":"YulFunctionCall","src":"5653:20:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:17"},"nodeType":"YulFunctionCall","src":"5642:32:17"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:17"}]},{"nodeType":"YulAssignment","src":"5691:30:17","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:17"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:17"},"nodeType":"YulFunctionCall","src":"5700:21:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3781,"isOffset":false,"isSlot":false,"src":"5539:11:17","valueSize":1},{"declaration":3787,"isOffset":false,"isSlot":false,"src":"5667:5:17","valueSize":1},{"declaration":3787,"isOffset":false,"isSlot":false,"src":"5691:5:17","valueSize":1},{"declaration":3787,"isOffset":false,"isSlot":false,"src":"5704:5:17","valueSize":1},{"declaration":3793,"isOffset":false,"isSlot":false,"src":"5633:5:17","valueSize":1},{"declaration":3793,"isOffset":false,"isSlot":false,"src":"5646:5:17","valueSize":1},{"declaration":3814,"isOffset":false,"isSlot":false,"src":"5513:9:17","valueSize":1},{"declaration":3814,"isOffset":false,"isSlot":false,"src":"5656:9:17","valueSize":1},{"declaration":3814,"isOffset":false,"isSlot":false,"src":"5711:9:17","valueSize":1},{"declaration":3777,"isOffset":false,"isSlot":false,"src":"5533:1:17","valueSize":1},{"declaration":3779,"isOffset":false,"isSlot":false,"src":"5536:1:17","valueSize":1}],"id":3816,"nodeType":"InlineAssembly","src":"5435:300:17"},{"assignments":[3818],"declarations":[{"constant":false,"id":3818,"mutability":"mutable","name":"twos","nameLocation":"5947:4:17","nodeType":"VariableDeclaration","scope":3898,"src":"5939:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3825,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"5954:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3821,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"5973:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:17"},{"AST":{"nodeType":"YulBlock","src":"6008:362:17","statements":[{"nodeType":"YulAssignment","src":"6073:37:17","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:17"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:17"},"nodeType":"YulFunctionCall","src":"6088:22:17"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:17"}]},{"nodeType":"YulAssignment","src":"6177:25:17","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:17"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:17"},"nodeType":"YulFunctionCall","src":"6186:16:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:17"}]},{"nodeType":"YulAssignment","src":"6317:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:17","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:17"},"nodeType":"YulFunctionCall","src":"6333:12:17"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:17"},"nodeType":"YulFunctionCall","src":"6329:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:17"},"nodeType":"YulFunctionCall","src":"6325:31:17"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3781,"isOffset":false,"isSlot":false,"src":"6073:11:17","valueSize":1},{"declaration":3781,"isOffset":false,"isSlot":false,"src":"6092:11:17","valueSize":1},{"declaration":3787,"isOffset":false,"isSlot":false,"src":"6177:5:17","valueSize":1},{"declaration":3787,"isOffset":false,"isSlot":false,"src":"6190:5:17","valueSize":1},{"declaration":3818,"isOffset":false,"isSlot":false,"src":"6105:4:17","valueSize":1},{"declaration":3818,"isOffset":false,"isSlot":false,"src":"6197:4:17","valueSize":1},{"declaration":3818,"isOffset":false,"isSlot":false,"src":"6317:4:17","valueSize":1},{"declaration":3818,"isOffset":false,"isSlot":false,"src":"6340:4:17","valueSize":1},{"declaration":3818,"isOffset":false,"isSlot":false,"src":"6347:4:17","valueSize":1}],"id":3826,"nodeType":"InlineAssembly","src":"5999:371:17"},{"expression":{"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3827,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"6436:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3828,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"6445:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3829,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"6453:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3832,"nodeType":"ExpressionStatement","src":"6436:21:17"},{"assignments":[3834],"declarations":[{"constant":false,"id":3834,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:17","nodeType":"VariableDeclaration","scope":3898,"src":"6775:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3841,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3836,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"6798:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:17"},{"expression":{"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3842,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7031:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3844,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"7046:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3845,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7060:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3849,"nodeType":"ExpressionStatement","src":"7031:36:17"},{"expression":{"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3850,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7100:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3852,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"7115:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3853,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7129:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3857,"nodeType":"ExpressionStatement","src":"7100:36:17"},{"expression":{"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3858,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7170:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3860,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"7185:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3861,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7199:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3865,"nodeType":"ExpressionStatement","src":"7170:36:17"},{"expression":{"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3866,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7240:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3868,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"7255:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3869,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7269:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3873,"nodeType":"ExpressionStatement","src":"7240:36:17"},{"expression":{"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3874,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7310:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3876,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"7325:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3877,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3881,"nodeType":"ExpressionStatement","src":"7310:36:17"},{"expression":{"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3882,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7381:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3884,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"7396:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3885,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7410:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3889,"nodeType":"ExpressionStatement","src":"7381:36:17"},{"expression":{"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"7851:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3891,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"7860:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3892,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7868:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3895,"nodeType":"ExpressionStatement","src":"7851:24:17"},{"expression":{"id":3896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"7896:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3785,"id":3897,"nodeType":"Return","src":"7889:13:17"}]}]},"documentation":{"id":3775,"nodeType":"StructuredDocumentation","src":"3485:313:17","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3900,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:17","nodeType":"FunctionDefinition","parameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3777,"mutability":"mutable","name":"x","nameLocation":"3827:1:17","nodeType":"VariableDeclaration","scope":3900,"src":"3819:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3779,"mutability":"mutable","name":"y","nameLocation":"3838:1:17","nodeType":"VariableDeclaration","scope":3900,"src":"3830:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3781,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:17","nodeType":"VariableDeclaration","scope":3900,"src":"3841:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:17"},"returnParameters":{"id":3785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3784,"mutability":"mutable","name":"result","nameLocation":"3893:6:17","nodeType":"VariableDeclaration","scope":3900,"src":"3885:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:17"},"scope":4566,"src":"3803:4116:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3942,"nodeType":"Block","src":"8161:192:17","statements":[{"assignments":[3916],"declarations":[{"constant":false,"id":3916,"mutability":"mutable","name":"result","nameLocation":"8179:6:17","nodeType":"VariableDeclaration","scope":3942,"src":"8171:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3922,"initialValue":{"arguments":[{"id":3918,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"8195:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3919,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"8198:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3920,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"8201:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3917,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3900,3943],"referencedDeclaration":3900,"src":"8188:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3924,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"8244:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}],"id":3923,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"8227:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3523_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3927,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"8264:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3928,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"8267:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3929,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"8270:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3926,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3939,"nodeType":"IfStatement","src":"8223:101:17","trueBody":{"id":3938,"nodeType":"Block","src":"8288:36:17","statements":[{"expression":{"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"8302:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3937,"nodeType":"ExpressionStatement","src":"8302:11:17"}]}},{"expression":{"id":3940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"8340:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3914,"id":3941,"nodeType":"Return","src":"8333:13:17"}]},"documentation":{"id":3901,"nodeType":"StructuredDocumentation","src":"7925:121:17","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3943,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:17","nodeType":"FunctionDefinition","parameters":{"id":3911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3903,"mutability":"mutable","name":"x","nameLocation":"8075:1:17","nodeType":"VariableDeclaration","scope":3943,"src":"8067:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3905,"mutability":"mutable","name":"y","nameLocation":"8086:1:17","nodeType":"VariableDeclaration","scope":3943,"src":"8078:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3907,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:17","nodeType":"VariableDeclaration","scope":3943,"src":"8089:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3910,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:17","nodeType":"VariableDeclaration","scope":3943,"src":"8110:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"},"typeName":{"id":3909,"nodeType":"UserDefinedTypeName","pathNode":{"id":3908,"name":"Rounding","nameLocations":["8110:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3523,"src":"8110:8:17"},"referencedDeclaration":3523,"src":"8110:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:17"},"returnParameters":{"id":3914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3943,"src":"8152:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:17"},"scope":4566,"src":"8051:302:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4054,"nodeType":"Block","src":"8644:1585:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3951,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8658:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3957,"nodeType":"IfStatement","src":"8654:45:17","trueBody":{"id":3956,"nodeType":"Block","src":"8666:33:17","statements":[{"expression":{"hexValue":"30","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3950,"id":3955,"nodeType":"Return","src":"8680:8:17"}]}},{"assignments":[3959],"declarations":[{"constant":false,"id":3959,"mutability":"mutable","name":"result","nameLocation":"9386:6:17","nodeType":"VariableDeclaration","scope":4054,"src":"9378:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3968,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"9406:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3961,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4222,4257],"referencedDeclaration":4222,"src":"9401:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:17"},{"id":4053,"nodeType":"UncheckedBlock","src":"9815:408:17","statements":[{"expression":{"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"9839:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"9849:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3971,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"9858:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3972,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"9862:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3979,"nodeType":"ExpressionStatement","src":"9839:35:17"},{"expression":{"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"9888:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3981,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"9898:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"9907:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"9911:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3986,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3990,"nodeType":"ExpressionStatement","src":"9888:35:17"},{"expression":{"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3991,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"9937:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"9947:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"9956:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3994,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"9960:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4001,"nodeType":"ExpressionStatement","src":"9937:35:17"},{"expression":{"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"9986:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"9996:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"10005:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"10009:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4012,"nodeType":"ExpressionStatement","src":"9986:35:17"},{"expression":{"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"10035:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4014,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"10045:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4015,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"10054:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"10058:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4023,"nodeType":"ExpressionStatement","src":"10035:35:17"},{"expression":{"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"10084:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"10094:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"10103:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"10107:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4034,"nodeType":"ExpressionStatement","src":"10084:35:17"},{"expression":{"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4035,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"10133:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"10143:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4037,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"10152:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"10156:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4041,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4045,"nodeType":"ExpressionStatement","src":"10133:35:17"},{"expression":{"arguments":[{"id":4047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"10193:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4048,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"10201:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"10205:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4046,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"10189:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3950,"id":4052,"nodeType":"Return","src":"10182:30:17"}]}]},"documentation":{"id":3944,"nodeType":"StructuredDocumentation","src":"8359:223:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4055,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:17","nodeType":"FunctionDefinition","parameters":{"id":3947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"a","nameLocation":"8609:1:17","nodeType":"VariableDeclaration","scope":4055,"src":"8601:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:17"},"returnParameters":{"id":3950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4055,"src":"8635:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:17"},"scope":4566,"src":"8587:1642:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4089,"nodeType":"Block","src":"10405:164:17","statements":[{"id":4088,"nodeType":"UncheckedBlock","src":"10415:148:17","statements":[{"assignments":[4067],"declarations":[{"constant":false,"id":4067,"mutability":"mutable","name":"result","nameLocation":"10447:6:17","nodeType":"VariableDeclaration","scope":4088,"src":"10439:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4066,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4071,"initialValue":{"arguments":[{"id":4069,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"10461:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4068,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4055,4090],"referencedDeclaration":4055,"src":"10456:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"10484:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4074,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"10511:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}],"id":4073,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"10494:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3523_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"10524:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"10533:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4079,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"10542:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:17","trueExpression":{"hexValue":"31","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4065,"id":4087,"nodeType":"Return","src":"10477:75:17"}]}]},"documentation":{"id":4056,"nodeType":"StructuredDocumentation","src":"10235:89:17","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4090,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:17","nodeType":"FunctionDefinition","parameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"a","nameLocation":"10351:1:17","nodeType":"VariableDeclaration","scope":4090,"src":"10343:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4057,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:17","nodeType":"VariableDeclaration","scope":4090,"src":"10354:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"},"typeName":{"id":4060,"nodeType":"UserDefinedTypeName","pathNode":{"id":4059,"name":"Rounding","nameLocations":["10354:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3523,"src":"10354:8:17"},"referencedDeclaration":3523,"src":"10354:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:17"},"returnParameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4090,"src":"10396:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:17"},"scope":4566,"src":"10329:240:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4221,"nodeType":"Block","src":"10760:922:17","statements":[{"assignments":[4099],"declarations":[{"constant":false,"id":4099,"mutability":"mutable","name":"result","nameLocation":"10778:6:17","nodeType":"VariableDeclaration","scope":4221,"src":"10770:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4098,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4101,"initialValue":{"hexValue":"30","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:17"},{"id":4218,"nodeType":"UncheckedBlock","src":"10798:855:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"10826:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4116,"nodeType":"IfStatement","src":"10822:99:17","trueBody":{"id":4115,"nodeType":"Block","src":"10844:77:17","statements":[{"expression":{"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"10862:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4110,"nodeType":"ExpressionStatement","src":"10862:13:17"},{"expression":{"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4111,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10893:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4114,"nodeType":"ExpressionStatement","src":"10893:13:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"10938:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4131,"nodeType":"IfStatement","src":"10934:96:17","trueBody":{"id":4130,"nodeType":"Block","src":"10955:75:17","statements":[{"expression":{"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"10973:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4125,"nodeType":"ExpressionStatement","src":"10973:12:17"},{"expression":{"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4126,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"11003:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4129,"nodeType":"ExpressionStatement","src":"11003:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11047:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4146,"nodeType":"IfStatement","src":"11043:96:17","trueBody":{"id":4145,"nodeType":"Block","src":"11064:75:17","statements":[{"expression":{"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11082:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4140,"nodeType":"ExpressionStatement","src":"11082:12:17"},{"expression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"11112:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4144,"nodeType":"ExpressionStatement","src":"11112:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11156:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4161,"nodeType":"IfStatement","src":"11152:96:17","trueBody":{"id":4160,"nodeType":"Block","src":"11173:75:17","statements":[{"expression":{"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11191:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4155,"nodeType":"ExpressionStatement","src":"11191:12:17"},{"expression":{"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"11221:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4159,"nodeType":"ExpressionStatement","src":"11221:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11265:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4176,"nodeType":"IfStatement","src":"11261:93:17","trueBody":{"id":4175,"nodeType":"Block","src":"11281:73:17","statements":[{"expression":{"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11299:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4170,"nodeType":"ExpressionStatement","src":"11299:11:17"},{"expression":{"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4171,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"11328:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4174,"nodeType":"ExpressionStatement","src":"11328:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11371:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4191,"nodeType":"IfStatement","src":"11367:93:17","trueBody":{"id":4190,"nodeType":"Block","src":"11387:73:17","statements":[{"expression":{"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11405:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4185,"nodeType":"ExpressionStatement","src":"11405:11:17"},{"expression":{"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4186,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"11434:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4189,"nodeType":"ExpressionStatement","src":"11434:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11477:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4206,"nodeType":"IfStatement","src":"11473:93:17","trueBody":{"id":4205,"nodeType":"Block","src":"11493:73:17","statements":[{"expression":{"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11511:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4200,"nodeType":"ExpressionStatement","src":"11511:11:17"},{"expression":{"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"11540:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4204,"nodeType":"ExpressionStatement","src":"11540:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11583:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4217,"nodeType":"IfStatement","src":"11579:64:17","trueBody":{"id":4216,"nodeType":"Block","src":"11599:44:17","statements":[{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4212,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"11617:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4215,"nodeType":"ExpressionStatement","src":"11617:11:17"}]}}]},{"expression":{"id":4219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"11669:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4097,"id":4220,"nodeType":"Return","src":"11662:13:17"}]},"documentation":{"id":4091,"nodeType":"StructuredDocumentation","src":"10575:119:17","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4222,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:17","nodeType":"FunctionDefinition","parameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"value","nameLocation":"10721:5:17","nodeType":"VariableDeclaration","scope":4222,"src":"10713:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:17"},"returnParameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4222,"src":"10751:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4095,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:17"},"scope":4566,"src":"10699:983:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4256,"nodeType":"Block","src":"11915:168:17","statements":[{"id":4255,"nodeType":"UncheckedBlock","src":"11925:152:17","statements":[{"assignments":[4234],"declarations":[{"constant":false,"id":4234,"mutability":"mutable","name":"result","nameLocation":"11957:6:17","nodeType":"VariableDeclaration","scope":4255,"src":"11949:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4233,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4238,"initialValue":{"arguments":[{"id":4236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"11971:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4235,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4222,4257],"referencedDeclaration":4222,"src":"11966:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"11998:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4241,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"12025:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}],"id":4240,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"12008:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3523_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4244,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"12043:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"12052:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:17","trueExpression":{"hexValue":"31","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4232,"id":4254,"nodeType":"Return","src":"11991:75:17"}]}]},"documentation":{"id":4223,"nodeType":"StructuredDocumentation","src":"11688:142:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4257,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:17","nodeType":"FunctionDefinition","parameters":{"id":4229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"value","nameLocation":"11857:5:17","nodeType":"VariableDeclaration","scope":4257,"src":"11849:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4228,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:17","nodeType":"VariableDeclaration","scope":4257,"src":"11864:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"},"typeName":{"id":4227,"nodeType":"UserDefinedTypeName","pathNode":{"id":4226,"name":"Rounding","nameLocations":["11864:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3523,"src":"11864:8:17"},"referencedDeclaration":3523,"src":"11864:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:17"},"returnParameters":{"id":4232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4257,"src":"11906:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4230,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:17"},"scope":4566,"src":"11835:248:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4385,"nodeType":"Block","src":"12276:854:17","statements":[{"assignments":[4266],"declarations":[{"constant":false,"id":4266,"mutability":"mutable","name":"result","nameLocation":"12294:6:17","nodeType":"VariableDeclaration","scope":4385,"src":"12286:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4268,"initialValue":{"hexValue":"30","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:17"},{"id":4382,"nodeType":"UncheckedBlock","src":"12314:787:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"12342:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4285,"nodeType":"IfStatement","src":"12338:103:17","trueBody":{"id":4284,"nodeType":"Block","src":"12361:80:17","statements":[{"expression":{"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"12379:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4279,"nodeType":"ExpressionStatement","src":"12379:17:17"},{"expression":{"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4280,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"12414:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4283,"nodeType":"ExpressionStatement","src":"12414:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"12458:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4302,"nodeType":"IfStatement","src":"12454:103:17","trueBody":{"id":4301,"nodeType":"Block","src":"12477:80:17","statements":[{"expression":{"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"12495:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4296,"nodeType":"ExpressionStatement","src":"12495:17:17"},{"expression":{"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4297,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"12530:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4300,"nodeType":"ExpressionStatement","src":"12530:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"12574:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4319,"nodeType":"IfStatement","src":"12570:103:17","trueBody":{"id":4318,"nodeType":"Block","src":"12593:80:17","statements":[{"expression":{"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"12611:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4313,"nodeType":"ExpressionStatement","src":"12611:17:17"},{"expression":{"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"12646:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4317,"nodeType":"ExpressionStatement","src":"12646:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"12690:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4336,"nodeType":"IfStatement","src":"12686:100:17","trueBody":{"id":4335,"nodeType":"Block","src":"12708:78:17","statements":[{"expression":{"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"12726:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4330,"nodeType":"ExpressionStatement","src":"12726:16:17"},{"expression":{"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"12760:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4334,"nodeType":"ExpressionStatement","src":"12760:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"12803:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4353,"nodeType":"IfStatement","src":"12799:100:17","trueBody":{"id":4352,"nodeType":"Block","src":"12821:78:17","statements":[{"expression":{"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"12839:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4347,"nodeType":"ExpressionStatement","src":"12839:16:17"},{"expression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4348,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"12873:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4351,"nodeType":"ExpressionStatement","src":"12873:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"12916:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4370,"nodeType":"IfStatement","src":"12912:100:17","trueBody":{"id":4369,"nodeType":"Block","src":"12934:78:17","statements":[{"expression":{"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"12952:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4364,"nodeType":"ExpressionStatement","src":"12952:16:17"},{"expression":{"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"12986:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4368,"nodeType":"ExpressionStatement","src":"12986:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"13029:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4381,"nodeType":"IfStatement","src":"13025:66:17","trueBody":{"id":4380,"nodeType":"Block","src":"13047:44:17","statements":[{"expression":{"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4376,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"13065:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4379,"nodeType":"ExpressionStatement","src":"13065:11:17"}]}}]},{"expression":{"id":4383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"13117:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4264,"id":4384,"nodeType":"Return","src":"13110:13:17"}]},"documentation":{"id":4258,"nodeType":"StructuredDocumentation","src":"12089:120:17","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4386,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:17","nodeType":"FunctionDefinition","parameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4260,"mutability":"mutable","name":"value","nameLocation":"12237:5:17","nodeType":"VariableDeclaration","scope":4386,"src":"12229:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4259,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:17"},"returnParameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4386,"src":"12267:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:17"},"scope":4566,"src":"12214:916:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4420,"nodeType":"Block","src":"13365:170:17","statements":[{"id":4419,"nodeType":"UncheckedBlock","src":"13375:154:17","statements":[{"assignments":[4398],"declarations":[{"constant":false,"id":4398,"mutability":"mutable","name":"result","nameLocation":"13407:6:17","nodeType":"VariableDeclaration","scope":4419,"src":"13399:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4402,"initialValue":{"arguments":[{"id":4400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"13422:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4399,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4386,4421],"referencedDeclaration":4386,"src":"13416:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"13449:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4405,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"13476:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}],"id":4404,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"13459:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3523_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"13495:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"13504:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:17","trueExpression":{"hexValue":"31","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4396,"id":4418,"nodeType":"Return","src":"13442:76:17"}]}]},"documentation":{"id":4387,"nodeType":"StructuredDocumentation","src":"13136:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4421,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:17","nodeType":"FunctionDefinition","parameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"value","nameLocation":"13307:5:17","nodeType":"VariableDeclaration","scope":4421,"src":"13299:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4388,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4392,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:17","nodeType":"VariableDeclaration","scope":4421,"src":"13314:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"},"typeName":{"id":4391,"nodeType":"UserDefinedTypeName","pathNode":{"id":4390,"name":"Rounding","nameLocations":["13314:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3523,"src":"13314:8:17"},"referencedDeclaration":3523,"src":"13314:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:17"},"returnParameters":{"id":4396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4421,"src":"13356:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4394,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:17"},"scope":4566,"src":"13284:251:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4507,"nodeType":"Block","src":"13855:600:17","statements":[{"assignments":[4430],"declarations":[{"constant":false,"id":4430,"mutability":"mutable","name":"result","nameLocation":"13873:6:17","nodeType":"VariableDeclaration","scope":4507,"src":"13865:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4432,"initialValue":{"hexValue":"30","id":4431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:17"},{"id":4504,"nodeType":"UncheckedBlock","src":"13893:533:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"13921:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4447,"nodeType":"IfStatement","src":"13917:98:17","trueBody":{"id":4446,"nodeType":"Block","src":"13939:76:17","statements":[{"expression":{"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"13957:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4441,"nodeType":"ExpressionStatement","src":"13957:13:17"},{"expression":{"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4442,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"13988:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4445,"nodeType":"ExpressionStatement","src":"13988:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"14032:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4462,"nodeType":"IfStatement","src":"14028:95:17","trueBody":{"id":4461,"nodeType":"Block","src":"14049:74:17","statements":[{"expression":{"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"14067:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4456,"nodeType":"ExpressionStatement","src":"14067:12:17"},{"expression":{"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"14097:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4460,"nodeType":"ExpressionStatement","src":"14097:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"14140:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4477,"nodeType":"IfStatement","src":"14136:95:17","trueBody":{"id":4476,"nodeType":"Block","src":"14157:74:17","statements":[{"expression":{"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"14175:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4471,"nodeType":"ExpressionStatement","src":"14175:12:17"},{"expression":{"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"14205:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4475,"nodeType":"ExpressionStatement","src":"14205:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"14248:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4492,"nodeType":"IfStatement","src":"14244:95:17","trueBody":{"id":4491,"nodeType":"Block","src":"14265:74:17","statements":[{"expression":{"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"14283:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4486,"nodeType":"ExpressionStatement","src":"14283:12:17"},{"expression":{"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"14313:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4490,"nodeType":"ExpressionStatement","src":"14313:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"14356:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4503,"nodeType":"IfStatement","src":"14352:64:17","trueBody":{"id":4502,"nodeType":"Block","src":"14372:44:17","statements":[{"expression":{"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"14390:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4501,"nodeType":"ExpressionStatement","src":"14390:11:17"}]}}]},{"expression":{"id":4505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"14442:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4428,"id":4506,"nodeType":"Return","src":"14435:13:17"}]},"documentation":{"id":4422,"nodeType":"StructuredDocumentation","src":"13541:246:17","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4508,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:17","nodeType":"FunctionDefinition","parameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"value","nameLocation":"13816:5:17","nodeType":"VariableDeclaration","scope":4508,"src":"13808:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:17"},"returnParameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4508,"src":"13846:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:17"},"scope":4566,"src":"13792:663:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4545,"nodeType":"Block","src":"14692:177:17","statements":[{"id":4544,"nodeType":"UncheckedBlock","src":"14702:161:17","statements":[{"assignments":[4520],"declarations":[{"constant":false,"id":4520,"mutability":"mutable","name":"result","nameLocation":"14734:6:17","nodeType":"VariableDeclaration","scope":4544,"src":"14726:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4519,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4524,"initialValue":{"arguments":[{"id":4522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"14750:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4521,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4508,4546],"referencedDeclaration":4508,"src":"14743:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"14777:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4527,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"14804:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}],"id":4526,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"14787:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3523_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4530,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"14823:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4533,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"14838:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:17","trueExpression":{"hexValue":"31","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4518,"id":4543,"nodeType":"Return","src":"14770:82:17"}]}]},"documentation":{"id":4509,"nodeType":"StructuredDocumentation","src":"14461:144:17","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4546,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:17","nodeType":"FunctionDefinition","parameters":{"id":4515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4511,"mutability":"mutable","name":"value","nameLocation":"14634:5:17","nodeType":"VariableDeclaration","scope":4546,"src":"14626:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4510,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4514,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:17","nodeType":"VariableDeclaration","scope":4546,"src":"14641:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"},"typeName":{"id":4513,"nodeType":"UserDefinedTypeName","pathNode":{"id":4512,"name":"Rounding","nameLocations":["14641:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3523,"src":"14641:8:17"},"referencedDeclaration":3523,"src":"14641:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:17"},"returnParameters":{"id":4518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4546,"src":"14683:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4516,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:17"},"scope":4566,"src":"14610:259:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4564,"nodeType":"Block","src":"15067:48:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4557,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"15090:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}],"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4555,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:17","typeDescriptions":{}}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4554,"id":4563,"nodeType":"Return","src":"15077:31:17"}]},"documentation":{"id":4547,"nodeType":"StructuredDocumentation","src":"14875:113:17","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4565,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:17","nodeType":"FunctionDefinition","parameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:17","nodeType":"VariableDeclaration","scope":4565,"src":"15019:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"},"typeName":{"id":4549,"nodeType":"UserDefinedTypeName","pathNode":{"id":4548,"name":"Rounding","nameLocations":["15019:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3523,"src":"15019:8:17"},"referencedDeclaration":3523,"src":"15019:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3523","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:17"},"returnParameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4565,"src":"15061:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4552,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:17"},"scope":4566,"src":"14993:122:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4567,"src":"203:14914:17","usedErrors":[3518],"usedEvents":[]}],"src":"103:15015:17"},"id":17},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[4671]},"id":4672,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4568,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":4569,"nodeType":"StructuredDocumentation","src":"135:80:18","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4671,"linearizedBaseContracts":[4671],"name":"SignedMath","nameLocation":"224:10:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":4586,"nodeType":"Block","src":"376:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"393:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4580,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"397:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4583,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"405:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:18","trueExpression":{"id":4582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"401:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4578,"id":4585,"nodeType":"Return","src":"386:20:18"}]},"documentation":{"id":4570,"nodeType":"StructuredDocumentation","src":"241:66:18","text":" @dev Returns the largest of two signed numbers."},"id":4587,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:18","nodeType":"FunctionDefinition","parameters":{"id":4575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4572,"mutability":"mutable","name":"a","nameLocation":"332:1:18","nodeType":"VariableDeclaration","scope":4587,"src":"325:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4571,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4574,"mutability":"mutable","name":"b","nameLocation":"342:1:18","nodeType":"VariableDeclaration","scope":4587,"src":"335:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4573,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:18"},"returnParameters":{"id":4578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4587,"src":"368:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4576,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:18"},"scope":4671,"src":"312:101:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4604,"nodeType":"Block","src":"555:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4597,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"572:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4598,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"576:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4601,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"584:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:18","trueExpression":{"id":4600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"580:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4596,"id":4603,"nodeType":"Return","src":"565:20:18"}]},"documentation":{"id":4588,"nodeType":"StructuredDocumentation","src":"419:67:18","text":" @dev Returns the smallest of two signed numbers."},"id":4605,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:18","nodeType":"FunctionDefinition","parameters":{"id":4593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4590,"mutability":"mutable","name":"a","nameLocation":"511:1:18","nodeType":"VariableDeclaration","scope":4605,"src":"504:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4589,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4592,"mutability":"mutable","name":"b","nameLocation":"521:1:18","nodeType":"VariableDeclaration","scope":4605,"src":"514:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4591,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:18"},"returnParameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4605,"src":"547:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4594,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:18"},"scope":4671,"src":"491:101:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4648,"nodeType":"Block","src":"797:162:18","statements":[{"assignments":[4616],"declarations":[{"constant":false,"id":4616,"mutability":"mutable","name":"x","nameLocation":"866:1:18","nodeType":"VariableDeclaration","scope":4648,"src":"859:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4615,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4629,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4617,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"871:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4618,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"875:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"882:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"886:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:18"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4630,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"911:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4635,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"931:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4633,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:18","typeDescriptions":{}}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4631,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:18","typeDescriptions":{}}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"945:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"949:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4614,"id":4647,"nodeType":"Return","src":"904:48:18"}]},"documentation":{"id":4606,"nodeType":"StructuredDocumentation","src":"598:126:18","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":4649,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:18","nodeType":"FunctionDefinition","parameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4608,"mutability":"mutable","name":"a","nameLocation":"753:1:18","nodeType":"VariableDeclaration","scope":4649,"src":"746:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4607,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4610,"mutability":"mutable","name":"b","nameLocation":"763:1:18","nodeType":"VariableDeclaration","scope":4649,"src":"756:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4609,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:18"},"returnParameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4649,"src":"789:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4612,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:18"},"scope":4671,"src":"729:230:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4669,"nodeType":"Block","src":"1103:158:18","statements":[{"id":4668,"nodeType":"UncheckedBlock","src":"1113:142:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"1228:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:18","subExpression":{"id":4663,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"1242:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:18","trueExpression":{"id":4662,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"1237:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:18","typeDescriptions":{}}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4656,"id":4667,"nodeType":"Return","src":"1213:31:18"}]}]},"documentation":{"id":4650,"nodeType":"StructuredDocumentation","src":"965:78:18","text":" @dev Returns the absolute unsigned value of a signed value."},"id":4670,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:18","nodeType":"FunctionDefinition","parameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4652,"mutability":"mutable","name":"n","nameLocation":"1068:1:18","nodeType":"VariableDeclaration","scope":4670,"src":"1061:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4651,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:18"},"returnParameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4670,"src":"1094:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:18"},"scope":4671,"src":"1048:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4672,"src":"216:1047:18","usedErrors":[],"usedEvents":[]}],"src":"109:1155:18"},"id":18},"contracts/KIPNode.sol":{"ast":{"absolutePath":"contracts/KIPNode.sol","exportedSymbols":{"Address":[2654],"Context":[2684],"ERC165":[3500],"ERC721":[2238],"ExceedAllowance":[4690],"IERC165":[3512],"IERC20":[877],"IERC20Permit":[939],"IERC721":[2355],"IERC721Errors":[237],"IERC721Metadata":[2401],"IERC721Receiver":[2373],"InvalidConfig":[4702],"InvalidProof":[4692],"InvalidRequest":[4680],"InvalidURI":[4694],"KIPNode":[5400],"MerkleProof":[3476],"Ownable":[147],"PriceNotConfigured":[4688],"SafeERC20":[1229],"SaleEventNotExist":[4686],"SetAddressZero":[4696],"Strings":[2939]},"id":5401,"license":"None","nodeType":"SourceUnit","nodes":[{"id":4673,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4674,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5401,"sourceUnit":1230,"src":"59:65:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":4675,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5401,"sourceUnit":2239,"src":"125:57:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5401,"sourceUnit":878,"src":"183:56:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4677,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5401,"sourceUnit":148,"src":"240:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":4678,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5401,"sourceUnit":3477,"src":"293:68:19","symbolAliases":[],"unitAlias":""},{"errorSelector":"41abc801","id":4680,"name":"InvalidRequest","nameLocation":"369:14:19","nodeType":"ErrorDefinition","parameters":{"id":4679,"nodeType":"ParameterList","parameters":[],"src":"383:2:19"},"src":"363:23:19"},{"errorSelector":"cbaef561","id":4686,"name":"SaleEventNotExist","nameLocation":"393:17:19","nodeType":"ErrorDefinition","parameters":{"id":4685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"start","nameLocation":"419:5:19","nodeType":"VariableDeclaration","scope":4686,"src":"411:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"411:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4684,"mutability":"mutable","name":"end","nameLocation":"434:3:19","nodeType":"VariableDeclaration","scope":4686,"src":"426:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"410:28:19"},"src":"387:52:19"},{"errorSelector":"1140cf7f","id":4688,"name":"PriceNotConfigured","nameLocation":"446:18:19","nodeType":"ErrorDefinition","parameters":{"id":4687,"nodeType":"ParameterList","parameters":[],"src":"464:2:19"},"src":"440:27:19"},{"errorSelector":"dad4f329","id":4690,"name":"ExceedAllowance","nameLocation":"474:15:19","nodeType":"ErrorDefinition","parameters":{"id":4689,"nodeType":"ParameterList","parameters":[],"src":"489:2:19"},"src":"468:24:19"},{"errorSelector":"09bde339","id":4692,"name":"InvalidProof","nameLocation":"499:12:19","nodeType":"ErrorDefinition","parameters":{"id":4691,"nodeType":"ParameterList","parameters":[],"src":"511:2:19"},"src":"493:21:19"},{"errorSelector":"3ba01911","id":4694,"name":"InvalidURI","nameLocation":"521:10:19","nodeType":"ErrorDefinition","parameters":{"id":4693,"nodeType":"ParameterList","parameters":[],"src":"531:2:19"},"src":"515:19:19"},{"errorSelector":"99260742","id":4696,"name":"SetAddressZero","nameLocation":"541:14:19","nodeType":"ErrorDefinition","parameters":{"id":4695,"nodeType":"ParameterList","parameters":[],"src":"555:2:19"},"src":"535:23:19"},{"errorSelector":"d40d76ca","id":4702,"name":"InvalidConfig","nameLocation":"565:13:19","nodeType":"ErrorDefinition","parameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4698,"mutability":"mutable","name":"minTier","nameLocation":"587:7:19","nodeType":"VariableDeclaration","scope":4702,"src":"579:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"579:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4700,"mutability":"mutable","name":"maxTier","nameLocation":"604:7:19","nodeType":"VariableDeclaration","scope":4702,"src":"596:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"596:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"578:34:19"},"src":"559:54:19"},{"abstract":false,"baseContracts":[{"baseName":{"id":4703,"name":"ERC721","nameLocations":["635:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":2238,"src":"635:6:19"},"id":4704,"nodeType":"InheritanceSpecifier","src":"635:6:19"},{"baseName":{"id":4705,"name":"Ownable","nameLocations":["643:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"643:7:19"},"id":4706,"nodeType":"InheritanceSpecifier","src":"643:7:19"}],"canonicalName":"KIPNode","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5400,"linearizedBaseContracts":[5400,147,2238,237,2401,2355,3500,3512,2684],"name":"KIPNode","nameLocation":"624:7:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4710,"libraryName":{"id":4707,"name":"SafeERC20","nameLocations":["663:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":1229,"src":"663:9:19"},"nodeType":"UsingForDirective","src":"657:27:19","typeName":{"id":4709,"nodeType":"UserDefinedTypeName","pathNode":{"id":4708,"name":"IERC20","nameLocations":["677:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"677:6:19"},"referencedDeclaration":877,"src":"677:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}}},{"canonicalName":"KIPNode.PublicSale","id":4723,"members":[{"constant":false,"id":4712,"mutability":"mutable","name":"price","nameLocation":"726:5:19","nodeType":"VariableDeclaration","scope":4723,"src":"718:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4711,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4714,"mutability":"mutable","name":"maxPerTier","nameLocation":"748:10:19","nodeType":"VariableDeclaration","scope":4723,"src":"741:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4713,"name":"uint32","nodeType":"ElementaryTypeName","src":"741:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4716,"mutability":"mutable","name":"maxPerUser","nameLocation":"775:10:19","nodeType":"VariableDeclaration","scope":4723,"src":"768:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4715,"name":"uint32","nodeType":"ElementaryTypeName","src":"768:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4718,"mutability":"mutable","name":"totalMintedAmount","nameLocation":"802:17:19","nodeType":"VariableDeclaration","scope":4723,"src":"795:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4717,"name":"uint64","nodeType":"ElementaryTypeName","src":"795:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4720,"mutability":"mutable","name":"start","nameLocation":"836:5:19","nodeType":"VariableDeclaration","scope":4723,"src":"829:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4719,"name":"uint64","nodeType":"ElementaryTypeName","src":"829:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4722,"mutability":"mutable","name":"end","nameLocation":"858:3:19","nodeType":"VariableDeclaration","scope":4723,"src":"851:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4721,"name":"uint64","nodeType":"ElementaryTypeName","src":"851:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"PublicSale","nameLocation":"697:10:19","nodeType":"StructDefinition","scope":5400,"src":"690:178:19","visibility":"public"},{"canonicalName":"KIPNode.WhitelistSale","id":4734,"members":[{"constant":false,"id":4725,"mutability":"mutable","name":"merkleRoot","nameLocation":"913:10:19","nodeType":"VariableDeclaration","scope":4734,"src":"905:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"905:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4727,"mutability":"mutable","name":"maxPerTier","nameLocation":"940:10:19","nodeType":"VariableDeclaration","scope":4734,"src":"933:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4726,"name":"uint32","nodeType":"ElementaryTypeName","src":"933:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4729,"mutability":"mutable","name":"totalMintedAmount","nameLocation":"967:17:19","nodeType":"VariableDeclaration","scope":4734,"src":"960:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4728,"name":"uint64","nodeType":"ElementaryTypeName","src":"960:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4731,"mutability":"mutable","name":"start","nameLocation":"1001:5:19","nodeType":"VariableDeclaration","scope":4734,"src":"994:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4730,"name":"uint64","nodeType":"ElementaryTypeName","src":"994:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4733,"mutability":"mutable","name":"end","nameLocation":"1023:3:19","nodeType":"VariableDeclaration","scope":4734,"src":"1016:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4732,"name":"uint64","nodeType":"ElementaryTypeName","src":"1016:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"WhitelistSale","nameLocation":"881:13:19","nodeType":"StructDefinition","scope":5400,"src":"874:159:19","visibility":"public"},{"constant":false,"functionSelector":"3013ce29","id":4737,"mutability":"mutable","name":"paymentToken","nameLocation":"1113:12:19","nodeType":"VariableDeclaration","scope":5400,"src":"1099:26:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":4736,"nodeType":"UserDefinedTypeName","pathNode":{"id":4735,"name":"IERC20","nameLocations":["1099:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1099:6:19"},"referencedDeclaration":877,"src":"1099:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"id":4739,"mutability":"mutable","name":"_nextTokenId","nameLocation":"1172:12:19","nodeType":"VariableDeclaration","scope":5400,"src":"1156:28:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"378077a8","id":4742,"mutability":"mutable","name":"KIPFundAddress","nameLocation":"1242:14:19","nodeType":"VariableDeclaration","scope":5400,"src":"1227:74:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4740,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307836453362626231333333303130323938394163313130313633653443363439643062423838373737","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1259:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6E3bbb13330102989Ac110163e4C649d0bB88777"},"visibility":"public"},{"constant":true,"functionSelector":"af3a19c7","id":4745,"mutability":"constant","name":"MAX_TIER","nameLocation":"1382:8:19","nodeType":"VariableDeclaration","scope":5400,"src":"1358:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1358:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3338","id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1393:2:19","typeDescriptions":{"typeIdentifier":"t_rational_38_by_1","typeString":"int_const 38"},"value":"38"},"visibility":"public"},{"constant":false,"functionSelector":"f1ce5fe0","id":4750,"mutability":"mutable","name":"publicSaleConfigs","nameLocation":"1519:17:19","nodeType":"VariableDeclaration","scope":5400,"src":"1481:55:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PublicSale_$4723_storage_$","typeString":"mapping(uint256 => struct KIPNode.PublicSale)"},"typeName":{"id":4749,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1489:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1481:30:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PublicSale_$4723_storage_$","typeString":"mapping(uint256 => struct KIPNode.PublicSale)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4748,"nodeType":"UserDefinedTypeName","pathNode":{"id":4747,"name":"PublicSale","nameLocations":["1500:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":4723,"src":"1500:10:19"},"referencedDeclaration":4723,"src":"1500:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_storage_ptr","typeString":"struct KIPNode.PublicSale"}}},"visibility":"public"},{"constant":false,"functionSelector":"a4532fb9","id":4755,"mutability":"mutable","name":"whitelistSaleConfigs","nameLocation":"1583:20:19","nodeType":"VariableDeclaration","scope":5400,"src":"1542:61:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WhitelistSale_$4734_storage_$","typeString":"mapping(uint256 => struct KIPNode.WhitelistSale)"},"typeName":{"id":4754,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1550:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1542:33:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WhitelistSale_$4734_storage_$","typeString":"mapping(uint256 => struct KIPNode.WhitelistSale)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4753,"nodeType":"UserDefinedTypeName","pathNode":{"id":4752,"name":"WhitelistSale","nameLocations":["1561:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":4734,"src":"1561:13:19"},"referencedDeclaration":4734,"src":"1561:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_storage_ptr","typeString":"struct KIPNode.WhitelistSale"}}},"visibility":"public"},{"constant":false,"functionSelector":"1aca45a7","id":4761,"mutability":"mutable","name":"whitelistUserMinted","nameLocation":"1736:19:19","nodeType":"VariableDeclaration","scope":5400,"src":"1681:74:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":4760,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1689:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1681:47:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4759,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4757,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1700:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1719:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"33d9f1fa","id":4767,"mutability":"mutable","name":"publicUserMinted","nameLocation":"1816:16:19","nodeType":"VariableDeclaration","scope":5400,"src":"1761:71:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":4766,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1769:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1761:47:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4765,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4763,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1780:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"4cd412d5","id":4769,"mutability":"mutable","name":"transferEnabled","nameLocation":"1915:15:19","nodeType":"VariableDeclaration","scope":5400,"src":"1903:27:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4768,"name":"bool","nodeType":"ElementaryTypeName","src":"1903:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"6c0360eb","id":4771,"mutability":"mutable","name":"baseURI","nameLocation":"2002:7:19","nodeType":"VariableDeclaration","scope":5400,"src":"1988:21:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4770,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"anonymous":false,"eventSelector":"bb9ad13c0de1a777020713212854c8c286c0c260f459a4f53aa84a65e3bc0db2","id":4787,"name":"TokenMinted","nameLocation":"2022:11:19","nodeType":"EventDefinition","parameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4773,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2059:6:19","nodeType":"VariableDeclaration","scope":4787,"src":"2043:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4772,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4775,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2091:2:19","nodeType":"VariableDeclaration","scope":4787,"src":"2075:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4774,"name":"address","nodeType":"ElementaryTypeName","src":"2075:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4777,"indexed":false,"mutability":"mutable","name":"tier","nameLocation":"2111:4:19","nodeType":"VariableDeclaration","scope":4787,"src":"2103:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"2103:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4779,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2133:7:19","nodeType":"VariableDeclaration","scope":4787,"src":"2125:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4778,"name":"uint256","nodeType":"ElementaryTypeName","src":"2125:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4781,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2158:5:19","nodeType":"VariableDeclaration","scope":4787,"src":"2150:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"2150:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4783,"indexed":false,"mutability":"mutable","name":"whitelist","nameLocation":"2178:9:19","nodeType":"VariableDeclaration","scope":4787,"src":"2173:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4782,"name":"bool","nodeType":"ElementaryTypeName","src":"2173:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4785,"indexed":false,"mutability":"mutable","name":"code","nameLocation":"2204:4:19","nodeType":"VariableDeclaration","scope":4787,"src":"2197:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4784,"name":"string","nodeType":"ElementaryTypeName","src":"2197:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2033:181:19"},"src":"2016:199:19"},{"anonymous":false,"eventSelector":"5bd7001d995bb594c91e6abb25ddbeaf9c358906be6aa0fadb5109f567609931","id":4799,"name":"MintCountUpdated","nameLocation":"2227:16:19","nodeType":"EventDefinition","parameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4789,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2269:6:19","nodeType":"VariableDeclaration","scope":4799,"src":"2253:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4788,"name":"address","nodeType":"ElementaryTypeName","src":"2253:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4791,"indexed":false,"mutability":"mutable","name":"tier","nameLocation":"2293:4:19","nodeType":"VariableDeclaration","scope":4799,"src":"2285:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4790,"name":"uint256","nodeType":"ElementaryTypeName","src":"2285:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4793,"indexed":false,"mutability":"mutable","name":"whitelist","nameLocation":"2312:9:19","nodeType":"VariableDeclaration","scope":4799,"src":"2307:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4792,"name":"bool","nodeType":"ElementaryTypeName","src":"2307:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4795,"indexed":false,"mutability":"mutable","name":"userMintCount","nameLocation":"2339:13:19","nodeType":"VariableDeclaration","scope":4799,"src":"2331:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4794,"name":"uint256","nodeType":"ElementaryTypeName","src":"2331:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4797,"indexed":false,"mutability":"mutable","name":"tierMintCount","nameLocation":"2370:13:19","nodeType":"VariableDeclaration","scope":4799,"src":"2362:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4796,"name":"uint256","nodeType":"ElementaryTypeName","src":"2362:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2243:146:19"},"src":"2221:169:19"},{"body":{"id":4823,"nodeType":"Block","src":"2530:100:19","statements":[{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4813,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"2540:12:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4815,"name":"paymentToken_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"2562:13:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4814,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"2555:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$877_$","typeString":"type(contract IERC20)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2555:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"src":"2540:36:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":4818,"nodeType":"ExpressionStatement","src":"2540:36:19"},{"expression":{"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4819,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"2586:7:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"68747470733a2f2f6e6f64652d6e66742e6b69702e70726f2f","id":4820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2596:27:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_88b5242cf8fe86d236cc2aca5d0ca980b9f53fbc9e104cc851f109c862ca31b4","typeString":"literal_string \"https://node-nft.kip.pro/\""},"value":"https://node-nft.kip.pro/"},"src":"2586:37:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4822,"nodeType":"ExpressionStatement","src":"2586:37:19"}]},"id":4824,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4b4950204c6963656e7365","id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2482:13:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_243f0bdcec1123c07eaf841d186e3b29bc6c4505498fcf51f2470cc876d68600","typeString":"literal_string \"KIP License\""},"value":"KIP License"},{"hexValue":"4b49504e4f4445","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2497:9:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f1137e95bb436e6f86587d5f057a81346cdd5c94d53eaa616f55d4b4f42596c","typeString":"literal_string \"KIPNODE\""},"value":"KIPNODE"}],"id":4808,"kind":"baseConstructorSpecifier","modifierName":{"id":4805,"name":"ERC721","nameLocations":["2475:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":2238,"src":"2475:6:19"},"nodeType":"ModifierInvocation","src":"2475:32:19"},{"arguments":[{"id":4810,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"2516:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4811,"kind":"baseConstructorSpecifier","modifierName":{"id":4809,"name":"Ownable","nameLocations":["2508:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2508:7:19"},"nodeType":"ModifierInvocation","src":"2508:21:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4801,"mutability":"mutable","name":"initialOwner","nameLocation":"2425:12:19","nodeType":"VariableDeclaration","scope":4824,"src":"2417:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4800,"name":"address","nodeType":"ElementaryTypeName","src":"2417:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4803,"mutability":"mutable","name":"paymentToken_","nameLocation":"2455:13:19","nodeType":"VariableDeclaration","scope":4824,"src":"2447:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4802,"name":"address","nodeType":"ElementaryTypeName","src":"2447:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2407:67:19"},"returnParameters":{"id":4812,"nodeType":"ParameterList","parameters":[],"src":"2530:0:19"},"scope":5400,"src":"2396:234:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4998,"nodeType":"Block","src":"3125:1684:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4836,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"3179:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3187:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3179:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4839,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"3192:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4840,"name":"MAX_TIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"3199:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3192:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3179:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"3211:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3221:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3211:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3179:43:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"3226:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3240:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3232:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4848,"name":"address","nodeType":"ElementaryTypeName","src":"3232:7:19","typeDescriptions":{}}},"id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3232:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3226:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3179:63:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4857,"nodeType":"IfStatement","src":"3175:104:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4854,"name":"InvalidRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3263:14:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3263:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4856,"nodeType":"RevertStatement","src":"3256:23:19"}},{"assignments":[4860],"declarations":[{"constant":false,"id":4860,"mutability":"mutable","name":"config","nameLocation":"3375:6:19","nodeType":"VariableDeclaration","scope":4998,"src":"3357:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_memory_ptr","typeString":"struct KIPNode.PublicSale"},"typeName":{"id":4859,"nodeType":"UserDefinedTypeName","pathNode":{"id":4858,"name":"PublicSale","nameLocations":["3357:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":4723,"src":"3357:10:19"},"referencedDeclaration":4723,"src":"3357:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_storage_ptr","typeString":"struct KIPNode.PublicSale"}},"visibility":"internal"}],"id":4864,"initialValue":{"baseExpression":{"id":4861,"name":"publicSaleConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"3384:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PublicSale_$4723_storage_$","typeString":"mapping(uint256 => struct KIPNode.PublicSale storage ref)"}},"id":4863,"indexExpression":{"id":4862,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"3402:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3384:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_storage","typeString":"struct KIPNode.PublicSale storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3357:50:19"},{"assignments":[4866],"declarations":[{"constant":false,"id":4866,"mutability":"mutable","name":"sender","nameLocation":"3425:6:19","nodeType":"VariableDeclaration","scope":4998,"src":"3417:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4865,"name":"address","nodeType":"ElementaryTypeName","src":"3417:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4869,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4867,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3434:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3434:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3417:29:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4870,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3460:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3466:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"3460:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4872,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"3478:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_memory_ptr","typeString":"struct KIPNode.PublicSale memory"}},"id":4873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3485:5:19","memberName":"start","nodeType":"MemberAccess","referencedDeclaration":4720,"src":"3478:12:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3460:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4875,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3500:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"3494:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4877,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"3512:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_memory_ptr","typeString":"struct KIPNode.PublicSale memory"}},"id":4878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3519:3:19","memberName":"end","nodeType":"MemberAccess","referencedDeclaration":4722,"src":"3512:10:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3494:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3460:62:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4888,"nodeType":"IfStatement","src":"3456:130:19","trueBody":{"errorCall":{"arguments":[{"expression":{"id":4882,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"3561:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_memory_ptr","typeString":"struct KIPNode.PublicSale memory"}},"id":4883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3568:5:19","memberName":"start","nodeType":"MemberAccess","referencedDeclaration":4720,"src":"3561:12:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":4884,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"3575:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_memory_ptr","typeString":"struct KIPNode.PublicSale memory"}},"id":4885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3582:3:19","memberName":"end","nodeType":"MemberAccess","referencedDeclaration":4722,"src":"3575:10:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4881,"name":"SaleEventNotExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"3543:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4887,"nodeType":"RevertStatement","src":"3536:50:19"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4889,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"3600:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_memory_ptr","typeString":"struct KIPNode.PublicSale memory"}},"id":4890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3607:5:19","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":4712,"src":"3600:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3616:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3600:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4896,"nodeType":"IfStatement","src":"3596:50:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4893,"name":"PriceNotConfigured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"3626:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3626:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4895,"nodeType":"RevertStatement","src":"3619:27:19"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":4897,"name":"publicUserMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"3673:16:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":4899,"indexExpression":{"id":4898,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"3690:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3673:22:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4901,"indexExpression":{"id":4900,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"3696:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3673:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4902,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"3706:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3673:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4904,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"3715:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_memory_ptr","typeString":"struct KIPNode.PublicSale memory"}},"id":4905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3722:10:19","memberName":"maxPerUser","nodeType":"MemberAccess","referencedDeclaration":4716,"src":"3715:17:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3673:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4907,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"3748:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_memory_ptr","typeString":"struct KIPNode.PublicSale memory"}},"id":4908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3755:17:19","memberName":"totalMintedAmount","nodeType":"MemberAccess","referencedDeclaration":4718,"src":"3748:24:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4909,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"3775:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3748:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4911,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"3784:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_memory_ptr","typeString":"struct KIPNode.PublicSale memory"}},"id":4912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3791:10:19","memberName":"maxPerTier","nodeType":"MemberAccess","referencedDeclaration":4714,"src":"3784:17:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3748:53:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3673:128:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4918,"nodeType":"IfStatement","src":"3656:180:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4915,"name":"ExceedAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"3819:15:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3819:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4917,"nodeType":"RevertStatement","src":"3812:24:19"}},{"expression":{"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4919,"name":"publicSaleConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"3908:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PublicSale_$4723_storage_$","typeString":"mapping(uint256 => struct KIPNode.PublicSale storage ref)"}},"id":4921,"indexExpression":{"id":4920,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"3926:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3908:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_storage","typeString":"struct KIPNode.PublicSale storage ref"}},"id":4922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3932:17:19","memberName":"totalMintedAmount","nodeType":"MemberAccess","referencedDeclaration":4718,"src":"3908:41:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":4925,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"3960:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3953:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4923,"name":"uint64","nodeType":"ElementaryTypeName","src":"3953:6:19","typeDescriptions":{}}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3953:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3908:59:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4928,"nodeType":"ExpressionStatement","src":"3908:59:19"},{"expression":{"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4929,"name":"publicUserMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"4022:16:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":4932,"indexExpression":{"id":4930,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"4039:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4022:22:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4933,"indexExpression":{"id":4931,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"4045:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4022:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4934,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"4056:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4022:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4936,"nodeType":"ExpressionStatement","src":"4022:40:19"},{"assignments":[4938],"declarations":[{"constant":false,"id":4938,"mutability":"mutable","name":"totalPayment","nameLocation":"4101:12:19","nodeType":"VariableDeclaration","scope":4998,"src":"4093:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4937,"name":"uint256","nodeType":"ElementaryTypeName","src":"4093:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4943,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4939,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"4116:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_memory_ptr","typeString":"struct KIPNode.PublicSale memory"}},"id":4940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4123:5:19","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":4712,"src":"4116:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4941,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"4131:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4116:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4093:44:19"},{"expression":{"arguments":[{"id":4947,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"4177:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4948,"name":"KIPFundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"4185:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4949,"name":"totalPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"4201:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4944,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"4147:12:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:16:19","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1016,"src":"4147:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$877_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4147:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4951,"nodeType":"ExpressionStatement","src":"4147:67:19"},{"body":{"id":4981,"nodeType":"Block","src":"4310:295:19","statements":[{"expression":{"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4324:14:19","subExpression":{"id":4962,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"4324:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4964,"nodeType":"ExpressionStatement","src":"4324:14:19"},{"expression":{"arguments":[{"id":4966,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"4362:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4967,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"4366:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4965,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1860,1886],"referencedDeclaration":1860,"src":"4352:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4352:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4969,"nodeType":"ExpressionStatement","src":"4352:27:19"},{"eventCall":{"arguments":[{"id":4971,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"4427:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4972,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"4451:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4973,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"4471:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4974,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"4493:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4975,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"4523:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_memory_ptr","typeString":"struct KIPNode.PublicSale memory"}},"id":4976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4530:5:19","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":4712,"src":"4523:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4553:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":4978,"name":"code","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"4576:4:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":4970,"name":"TokenMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"4398:11:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256,bool,string memory)"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:196:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4980,"nodeType":"EmitStatement","src":"4393:201:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4956,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"4292:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4957,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"4297:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4292:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4982,"initializationExpression":{"assignments":[4953],"declarations":[{"constant":false,"id":4953,"mutability":"mutable","name":"i","nameLocation":"4285:1:19","nodeType":"VariableDeclaration","scope":4982,"src":"4277:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"4277:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4955,"initialValue":{"hexValue":"31","id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4289:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"4277:13:19"},"loopExpression":{"expression":{"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4305:3:19","subExpression":{"id":4959,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"4305:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4961,"nodeType":"ExpressionStatement","src":"4305:3:19"},"nodeType":"ForStatement","src":"4272:333:19"},{"eventCall":{"arguments":[{"id":4984,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"4650:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4985,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"4670:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4688:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"baseExpression":{"baseExpression":{"id":4987,"name":"publicUserMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"4707:16:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":4989,"indexExpression":{"id":4988,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"4724:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4707:22:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4991,"indexExpression":{"id":4990,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"4730:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4707:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":4992,"name":"publicSaleConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"4751:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PublicSale_$4723_storage_$","typeString":"mapping(uint256 => struct KIPNode.PublicSale storage ref)"}},"id":4994,"indexExpression":{"id":4993,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"4769:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4751:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_storage","typeString":"struct KIPNode.PublicSale storage ref"}},"id":4995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4775:17:19","memberName":"totalMintedAmount","nodeType":"MemberAccess","referencedDeclaration":4718,"src":"4751:41:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4983,"name":"MintCountUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"4620:16:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bool,uint256,uint256)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4620:182:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4997,"nodeType":"EmitStatement","src":"4615:187:19"}]},"documentation":{"id":4825,"nodeType":"StructuredDocumentation","src":"2636:353:19","text":"@notice Function for Minting Licenses in the Public Sale\n@dev\n- Requirements:\n- Caller can be ANY\n- Params:\n- tier      Tier number (1 ~ 38)\n- to        Address of the Receiver\n- amount    A number of Licenses is requested to mint\n- code      External message"},"functionSelector":"b8240540","id":4999,"implemented":true,"kind":"function","modifiers":[],"name":"publicMint","nameLocation":"3003:10:19","nodeType":"FunctionDefinition","parameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4827,"mutability":"mutable","name":"tier","nameLocation":"3031:4:19","nodeType":"VariableDeclaration","scope":4999,"src":"3023:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4826,"name":"uint256","nodeType":"ElementaryTypeName","src":"3023:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4829,"mutability":"mutable","name":"to","nameLocation":"3053:2:19","nodeType":"VariableDeclaration","scope":4999,"src":"3045:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4828,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4831,"mutability":"mutable","name":"amount","nameLocation":"3073:6:19","nodeType":"VariableDeclaration","scope":4999,"src":"3065:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4830,"name":"uint256","nodeType":"ElementaryTypeName","src":"3065:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4833,"mutability":"mutable","name":"code","nameLocation":"3105:4:19","nodeType":"VariableDeclaration","scope":4999,"src":"3089:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":4832,"name":"string","nodeType":"ElementaryTypeName","src":"3089:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3013:102:19"},"returnParameters":{"id":4835,"nodeType":"ParameterList","parameters":[],"src":"3125:0:19"},"scope":5400,"src":"2994:1815:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5162,"nodeType":"Block","src":"5499:1513:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5014,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"5553:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5561:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5553:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5017,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"5566:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5018,"name":"MAX_TIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"5573:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5566:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5553:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5021,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"5585:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5599:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5591:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5022,"name":"address","nodeType":"ElementaryTypeName","src":"5591:7:19","typeDescriptions":{}}},"id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5585:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5553:48:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"5605:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5615:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5605:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5553:63:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5035,"nodeType":"IfStatement","src":"5549:104:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5032,"name":"InvalidRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"5637:14:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5637:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5034,"nodeType":"RevertStatement","src":"5630:23:19"}},{"assignments":[5038],"declarations":[{"constant":false,"id":5038,"mutability":"mutable","name":"config","nameLocation":"5812:6:19","nodeType":"VariableDeclaration","scope":5162,"src":"5791:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_memory_ptr","typeString":"struct KIPNode.WhitelistSale"},"typeName":{"id":5037,"nodeType":"UserDefinedTypeName","pathNode":{"id":5036,"name":"WhitelistSale","nameLocations":["5791:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":4734,"src":"5791:13:19"},"referencedDeclaration":4734,"src":"5791:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_storage_ptr","typeString":"struct KIPNode.WhitelistSale"}},"visibility":"internal"}],"id":5042,"initialValue":{"baseExpression":{"id":5039,"name":"whitelistSaleConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"5821:20:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WhitelistSale_$4734_storage_$","typeString":"mapping(uint256 => struct KIPNode.WhitelistSale storage ref)"}},"id":5041,"indexExpression":{"id":5040,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"5842:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5821:26:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_storage","typeString":"struct KIPNode.WhitelistSale storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5791:56:19"},{"assignments":[5044],"declarations":[{"constant":false,"id":5044,"mutability":"mutable","name":"sender","nameLocation":"5865:6:19","nodeType":"VariableDeclaration","scope":5162,"src":"5857:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5043,"name":"address","nodeType":"ElementaryTypeName","src":"5857:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5047,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5045,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5874:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5874:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5857:29:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5048,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5900:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5906:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"5900:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5050,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"5918:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_memory_ptr","typeString":"struct KIPNode.WhitelistSale memory"}},"id":5051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5925:5:19","memberName":"start","nodeType":"MemberAccess","referencedDeclaration":4731,"src":"5918:12:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"5900:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5053,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5934:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5940:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"5934:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5055,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"5952:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_memory_ptr","typeString":"struct KIPNode.WhitelistSale memory"}},"id":5056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5959:3:19","memberName":"end","nodeType":"MemberAccess","referencedDeclaration":4733,"src":"5952:10:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"5934:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5900:62:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5066,"nodeType":"IfStatement","src":"5896:130:19","trueBody":{"errorCall":{"arguments":[{"expression":{"id":5060,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"6001:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_memory_ptr","typeString":"struct KIPNode.WhitelistSale memory"}},"id":5061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6008:5:19","memberName":"start","nodeType":"MemberAccess","referencedDeclaration":4731,"src":"6001:12:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":5062,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"6015:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_memory_ptr","typeString":"struct KIPNode.WhitelistSale memory"}},"id":5063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6022:3:19","memberName":"end","nodeType":"MemberAccess","referencedDeclaration":4733,"src":"6015:10:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":5059,"name":"SaleEventNotExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"5983:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5983:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5065,"nodeType":"RevertStatement","src":"5976:50:19"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":5067,"name":"whitelistUserMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"6053:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":5069,"indexExpression":{"id":5068,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"6073:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6053:25:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5071,"indexExpression":{"id":5070,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"6079:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6053:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5072,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"6089:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6053:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5074,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"6098:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6053:54:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5076,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"6123:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_memory_ptr","typeString":"struct KIPNode.WhitelistSale memory"}},"id":5077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6130:17:19","memberName":"totalMintedAmount","nodeType":"MemberAccess","referencedDeclaration":4729,"src":"6123:24:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5078,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"6150:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6123:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5080,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"6159:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_memory_ptr","typeString":"struct KIPNode.WhitelistSale memory"}},"id":5081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6166:10:19","memberName":"maxPerTier","nodeType":"MemberAccess","referencedDeclaration":4727,"src":"6159:17:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6123:53:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6053:123:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5087,"nodeType":"IfStatement","src":"6036:175:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5084,"name":"ExceedAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"6194:15:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6194:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5086,"nodeType":"RevertStatement","src":"6187:24:19"}},{"condition":{"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6225:53:19","subExpression":{"arguments":[{"id":5089,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"6241:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5090,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"6247:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5091,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"6255:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5092,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"6266:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":5088,"name":"_validateProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"6226:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$","typeString":"function (uint256,address,uint256,bytes32[] calldata) view returns (bool)"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5098,"nodeType":"IfStatement","src":"6221:92:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5095,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"6299:12:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6299:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5097,"nodeType":"RevertStatement","src":"6292:21:19"}},{"expression":{"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5099,"name":"whitelistUserMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"6438:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":5102,"indexExpression":{"id":5100,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"6458:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6438:25:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5103,"indexExpression":{"id":5101,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"6464:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6438:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5104,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"6475:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6438:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5106,"nodeType":"ExpressionStatement","src":"6438:43:19"},{"expression":{"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5107,"name":"whitelistSaleConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"6491:20:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WhitelistSale_$4734_storage_$","typeString":"mapping(uint256 => struct KIPNode.WhitelistSale storage ref)"}},"id":5109,"indexExpression":{"id":5108,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"6512:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6491:26:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_storage","typeString":"struct KIPNode.WhitelistSale storage ref"}},"id":5110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6518:17:19","memberName":"totalMintedAmount","nodeType":"MemberAccess","referencedDeclaration":4729,"src":"6491:44:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":5113,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"6546:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5111,"name":"uint64","nodeType":"ElementaryTypeName","src":"6539:6:19","typeDescriptions":{}}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6491:62:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":5116,"nodeType":"ExpressionStatement","src":"6491:62:19"},{"body":{"id":5145,"nodeType":"Block","src":"6648:155:19","statements":[{"expression":{"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6662:14:19","subExpression":{"id":5127,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"6662:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5129,"nodeType":"ExpressionStatement","src":"6662:14:19"},{"expression":{"arguments":[{"id":5131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"6700:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5132,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"6704:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5130,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1860,1886],"referencedDeclaration":1860,"src":"6690:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6690:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5134,"nodeType":"ExpressionStatement","src":"6690:27:19"},{"eventCall":{"arguments":[{"id":5136,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"6748:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5137,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"6756:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5138,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"6760:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5139,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"6766:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6780:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"74727565","id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6783:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"","id":5142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6789:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":5135,"name":"TokenMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"6736:11:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256,bool,string memory)"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5144,"nodeType":"EmitStatement","src":"6731:61:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"6630:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5122,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"6635:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6630:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5146,"initializationExpression":{"assignments":[5118],"declarations":[{"constant":false,"id":5118,"mutability":"mutable","name":"i","nameLocation":"6623:1:19","nodeType":"VariableDeclaration","scope":5146,"src":"6615:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5117,"name":"uint256","nodeType":"ElementaryTypeName","src":"6615:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5120,"initialValue":{"hexValue":"31","id":5119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6627:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"6615:13:19"},"loopExpression":{"expression":{"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6643:3:19","subExpression":{"id":5124,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"6643:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5126,"nodeType":"ExpressionStatement","src":"6643:3:19"},"nodeType":"ForStatement","src":"6610:193:19"},{"eventCall":{"arguments":[{"id":5148,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"6848:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5149,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"6868:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6886:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"baseExpression":{"baseExpression":{"id":5151,"name":"whitelistUserMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"6904:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":5153,"indexExpression":{"id":5152,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"6924:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6904:25:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5155,"indexExpression":{"id":5154,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"6930:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6904:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":5156,"name":"whitelistSaleConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"6951:20:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WhitelistSale_$4734_storage_$","typeString":"mapping(uint256 => struct KIPNode.WhitelistSale storage ref)"}},"id":5158,"indexExpression":{"id":5157,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"6972:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6951:26:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_storage","typeString":"struct KIPNode.WhitelistSale storage ref"}},"id":5159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6978:17:19","memberName":"totalMintedAmount","nodeType":"MemberAccess","referencedDeclaration":4729,"src":"6951:44:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":5147,"name":"MintCountUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"6818:16:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bool,uint256,uint256)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6818:187:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5161,"nodeType":"EmitStatement","src":"6813:192:19"}]},"documentation":{"id":5000,"nodeType":"StructuredDocumentation","src":"4815:508:19","text":"@notice Function for Minting Licenses in the Whitelist Sale\n@dev\n- Requirements:\n- Caller can be ANY\n- Params:\n- tier            Tier number (1 ~ 38)\n- to              Address of the Receiver\n- amount          A number of Licenses is requested to mint\n- maxAmount       A max number of Licenses can be purchased (set in the Merkle Tree)\n- merkleProof     An array of proof"},"functionSelector":"1d68e8ce","id":5163,"implemented":true,"kind":"function","modifiers":[],"name":"whitelistMint","nameLocation":"5337:13:19","nodeType":"FunctionDefinition","parameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5002,"mutability":"mutable","name":"tier","nameLocation":"5368:4:19","nodeType":"VariableDeclaration","scope":5163,"src":"5360:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5001,"name":"uint256","nodeType":"ElementaryTypeName","src":"5360:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5004,"mutability":"mutable","name":"to","nameLocation":"5390:2:19","nodeType":"VariableDeclaration","scope":5163,"src":"5382:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5003,"name":"address","nodeType":"ElementaryTypeName","src":"5382:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5006,"mutability":"mutable","name":"amount","nameLocation":"5410:6:19","nodeType":"VariableDeclaration","scope":5163,"src":"5402:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"5402:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5008,"mutability":"mutable","name":"maxAmount","nameLocation":"5434:9:19","nodeType":"VariableDeclaration","scope":5163,"src":"5426:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"5426:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5011,"mutability":"mutable","name":"merkleProof","nameLocation":"5472:11:19","nodeType":"VariableDeclaration","scope":5163,"src":"5453:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5453:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5010,"nodeType":"ArrayTypeName","src":"5453:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5350:139:19"},"returnParameters":{"id":5013,"nodeType":"ParameterList","parameters":[],"src":"5499:0:19"},"scope":5400,"src":"5328:1684:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5186,"nodeType":"Block","src":"7360:94:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5173,"name":"newURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"7380:6:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7374:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5171,"name":"bytes","nodeType":"ElementaryTypeName","src":"7374:5:19","typeDescriptions":{}}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7374:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7388:6:19","memberName":"length","nodeType":"MemberAccess","src":"7374:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7398:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7374:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5181,"nodeType":"IfStatement","src":"7370:50:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5178,"name":"InvalidURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"7408:10:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7408:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5180,"nodeType":"RevertStatement","src":"7401:19:19"}},{"expression":{"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5182,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"7431:7:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5183,"name":"newURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"7441:6:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"7431:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5185,"nodeType":"ExpressionStatement","src":"7431:16:19"}]},"documentation":{"id":5164,"nodeType":"StructuredDocumentation","src":"7018:274:19","text":"@notice Update the new value of `baseURI`\n@dev\n- Requirements:\n- Caller must be `owner`\n- New string value of `baseURI` should not be empty\n- Params:\n- newURI      A new value of `baseURI` (as string)"},"functionSelector":"55f804b3","id":5187,"implemented":true,"kind":"function","modifiers":[{"id":5169,"kind":"modifierInvocation","modifierName":{"id":5168,"name":"onlyOwner","nameLocations":["7350:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7350:9:19"},"nodeType":"ModifierInvocation","src":"7350:9:19"}],"name":"setBaseURI","nameLocation":"7306:10:19","nodeType":"FunctionDefinition","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"newURI","nameLocation":"7333:6:19","nodeType":"VariableDeclaration","scope":5187,"src":"7317:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5165,"name":"string","nodeType":"ElementaryTypeName","src":"7317:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7316:24:19"},"returnParameters":{"id":5170,"nodeType":"ParameterList","parameters":[],"src":"7360:0:19"},"scope":5400,"src":"7297:157:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5217,"nodeType":"Block","src":"8317:372:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5198,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"8574:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8582:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8574:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5201,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"8587:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5202,"name":"MAX_TIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"8594:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8587:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8574:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5210,"nodeType":"IfStatement","src":"8570:67:19","trueBody":{"errorCall":{"arguments":[{"hexValue":"31","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8625:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":5207,"name":"MAX_TIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"8628:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5205,"name":"InvalidConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"8611:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8611:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5209,"nodeType":"RevertStatement","src":"8604:33:19"}},{"expression":{"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5211,"name":"publicSaleConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"8648:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PublicSale_$4723_storage_$","typeString":"mapping(uint256 => struct KIPNode.PublicSale storage ref)"}},"id":5213,"indexExpression":{"id":5212,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"8666:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8648:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_storage","typeString":"struct KIPNode.PublicSale storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5214,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"8674:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_calldata_ptr","typeString":"struct KIPNode.PublicSale calldata"}},"src":"8648:34:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_storage","typeString":"struct KIPNode.PublicSale storage ref"}},"id":5216,"nodeType":"ExpressionStatement","src":"8648:34:19"}]},"documentation":{"id":5188,"nodeType":"StructuredDocumentation","src":"7460:737:19","text":"@notice Update the Public Sale configurations (per Tier)\n@dev\n- Requirements:\n- Caller must be `owner`\n- Params:\n- tier            Tier number (1 ~ 38)\n- settings:\n- start               The starting time of the Public Sale (timestamp)\n- end                 The ending time of the Public Sale (timestamp)\n- price               The payment amount per License\n- totalMintedAmount   The total Licenses that minted in the event (init value = 0)\n- maxPerUser          The max number of Licenses is allowed to purchased\n- maxPerTier          The max number of Licenses can be purchased in this tier"},"functionSelector":"acb889ee","id":5218,"implemented":true,"kind":"function","modifiers":[{"id":5196,"kind":"modifierInvocation","modifierName":{"id":5195,"name":"onlyOwner","nameLocations":["8307:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8307:9:19"},"nodeType":"ModifierInvocation","src":"8307:9:19"}],"name":"setPublicSaleConfigs","nameLocation":"8211:20:19","nodeType":"FunctionDefinition","parameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5190,"mutability":"mutable","name":"tier","nameLocation":"8249:4:19","nodeType":"VariableDeclaration","scope":5218,"src":"8241:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5189,"name":"uint256","nodeType":"ElementaryTypeName","src":"8241:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5193,"mutability":"mutable","name":"settings","nameLocation":"8283:8:19","nodeType":"VariableDeclaration","scope":5218,"src":"8263:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_calldata_ptr","typeString":"struct KIPNode.PublicSale"},"typeName":{"id":5192,"nodeType":"UserDefinedTypeName","pathNode":{"id":5191,"name":"PublicSale","nameLocations":["8263:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":4723,"src":"8263:10:19"},"referencedDeclaration":4723,"src":"8263:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_PublicSale_$4723_storage_ptr","typeString":"struct KIPNode.PublicSale"}},"visibility":"internal"}],"src":"8231:66:19"},"returnParameters":{"id":5197,"nodeType":"ParameterList","parameters":[],"src":"8317:0:19"},"scope":5400,"src":"8202:487:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5248,"nodeType":"Block","src":"9484:380:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5229,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"9746:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9754:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9746:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5232,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"9759:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5233,"name":"MAX_TIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"9766:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9759:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9746:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5241,"nodeType":"IfStatement","src":"9742:67:19","trueBody":{"errorCall":{"arguments":[{"hexValue":"31","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9797:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":5238,"name":"MAX_TIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"9800:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5236,"name":"InvalidConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"9783:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9783:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5240,"nodeType":"RevertStatement","src":"9776:33:19"}},{"expression":{"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5242,"name":"whitelistSaleConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"9820:20:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WhitelistSale_$4734_storage_$","typeString":"mapping(uint256 => struct KIPNode.WhitelistSale storage ref)"}},"id":5244,"indexExpression":{"id":5243,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"9841:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9820:26:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_storage","typeString":"struct KIPNode.WhitelistSale storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5245,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"9849:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_calldata_ptr","typeString":"struct KIPNode.WhitelistSale calldata"}},"src":"9820:37:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_storage","typeString":"struct KIPNode.WhitelistSale storage ref"}},"id":5247,"nodeType":"ExpressionStatement","src":"9820:37:19"}]},"documentation":{"id":5219,"nodeType":"StructuredDocumentation","src":"8695:663:19","text":"@notice Update the Whitelist Sale configurations (per Tier)\n@dev\n- Requirements:\n- Caller must be `owner`\n- Params:\n- tier            Tier number (1 ~ 38)\n- settings:\n- start               The starting time of the Whitelist Sale (timestamp)\n- end                 The ending time of the Whitelist Sale (timestamp)\n- totalMintedAmount   The total Licenses that minted in the event (init value = 0)\n- maxPerTier          The max number of Licenses can be purchased in this tier\n- merkleRoot          The computed hash of Merkle Tree"},"functionSelector":"fcf9e1f8","id":5249,"implemented":true,"kind":"function","modifiers":[{"id":5227,"kind":"modifierInvocation","modifierName":{"id":5226,"name":"onlyOwner","nameLocations":["9474:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9474:9:19"},"nodeType":"ModifierInvocation","src":"9474:9:19"}],"name":"setWhitelistSaleConfigs","nameLocation":"9372:23:19","nodeType":"FunctionDefinition","parameters":{"id":5225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5221,"mutability":"mutable","name":"tier","nameLocation":"9413:4:19","nodeType":"VariableDeclaration","scope":5249,"src":"9405:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5220,"name":"uint256","nodeType":"ElementaryTypeName","src":"9405:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5224,"mutability":"mutable","name":"settings","nameLocation":"9450:8:19","nodeType":"VariableDeclaration","scope":5249,"src":"9427:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_calldata_ptr","typeString":"struct KIPNode.WhitelistSale"},"typeName":{"id":5223,"nodeType":"UserDefinedTypeName","pathNode":{"id":5222,"name":"WhitelistSale","nameLocations":["9427:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":4734,"src":"9427:13:19"},"referencedDeclaration":4734,"src":"9427:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_storage_ptr","typeString":"struct KIPNode.WhitelistSale"}},"visibility":"internal"}],"src":"9395:69:19"},"returnParameters":{"id":5228,"nodeType":"ParameterList","parameters":[],"src":"9484:0:19"},"scope":5400,"src":"9363:501:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5261,"nodeType":"Block","src":"10164:43:19","statements":[{"expression":{"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5257,"name":"transferEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"10174:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5258,"name":"newState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"10192:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10174:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5260,"nodeType":"ExpressionStatement","src":"10174:26:19"}]},"documentation":{"id":5250,"nodeType":"StructuredDocumentation","src":"9870:227:19","text":"@notice Allow/Disable License Transfer\n@dev\n- Requirements:\n- Caller must be `owner`\n- Params:\n- newState            New state of `transferEnabled` (true or false)"},"functionSelector":"9fe9f623","id":5262,"implemented":true,"kind":"function","modifiers":[{"id":5255,"kind":"modifierInvocation","modifierName":{"id":5254,"name":"onlyOwner","nameLocations":["10154:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10154:9:19"},"nodeType":"ModifierInvocation","src":"10154:9:19"}],"name":"setTransferEnabled","nameLocation":"10111:18:19","nodeType":"FunctionDefinition","parameters":{"id":5253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5252,"mutability":"mutable","name":"newState","nameLocation":"10135:8:19","nodeType":"VariableDeclaration","scope":5262,"src":"10130:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5251,"name":"bool","nodeType":"ElementaryTypeName","src":"10130:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10129:15:19"},"returnParameters":{"id":5256,"nodeType":"ParameterList","parameters":[],"src":"10164:0:19"},"scope":5400,"src":"10102:105:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5284,"nodeType":"Block","src":"10572:108:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5270,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"10586:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10608:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10600:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5271,"name":"address","nodeType":"ElementaryTypeName","src":"10600:7:19","typeDescriptions":{}}},"id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10586:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5279,"nodeType":"IfStatement","src":"10582:53:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5276,"name":"SetAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"10619:14:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10619:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5278,"nodeType":"RevertStatement","src":"10612:23:19"}},{"expression":{"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5280,"name":"KIPFundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"10646:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5281,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"10663:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10646:27:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5283,"nodeType":"ExpressionStatement","src":"10646:27:19"}]},"documentation":{"id":5263,"nodeType":"StructuredDocumentation","src":"10213:288:19","text":"@notice Update the new address of KIP Protocol Treasury\n@dev\n- Requirements:\n- Caller must be `owner`\n- New updating address must be non-zero (not 0x00)\n- Params:\n- newAddress            New address of KIP Protocol Treasury"},"functionSelector":"1bb08048","id":5285,"implemented":true,"kind":"function","modifiers":[{"id":5268,"kind":"modifierInvocation","modifierName":{"id":5267,"name":"onlyOwner","nameLocations":["10562:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10562:9:19"},"nodeType":"ModifierInvocation","src":"10562:9:19"}],"name":"setKIPFundAddress","nameLocation":"10515:17:19","nodeType":"FunctionDefinition","parameters":{"id":5266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5265,"mutability":"mutable","name":"newAddress","nameLocation":"10541:10:19","nodeType":"VariableDeclaration","scope":5285,"src":"10533:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5264,"name":"address","nodeType":"ElementaryTypeName","src":"10533:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10532:20:19"},"returnParameters":{"id":5269,"nodeType":"ParameterList","parameters":[],"src":"10572:0:19"},"scope":5400,"src":"10506:174:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5309,"nodeType":"Block","src":"11023:104:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5293,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"11037:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11054:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11046:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5294,"name":"address","nodeType":"ElementaryTypeName","src":"11046:7:19","typeDescriptions":{}}},"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11046:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11037:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5302,"nodeType":"IfStatement","src":"11033:48:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5299,"name":"SetAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"11065:14:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5301,"nodeType":"RevertStatement","src":"11058:23:19"}},{"expression":{"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5303,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"11092:12:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5305,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"11114:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5304,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"11107:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$877_$","typeString":"type(contract IERC20)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11107:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"src":"11092:28:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":5308,"nodeType":"ExpressionStatement","src":"11092:28:19"}]},"documentation":{"id":5286,"nodeType":"StructuredDocumentation","src":"10686:273:19","text":"@notice Set new Payment Token\n@dev\n- Requirements:\n- Caller must be `owner`\n- New updating payment token must be non-zero (not 0x00)\n- Params:\n- token            New address of the payment acceptance (ERC-20)"},"functionSelector":"6a326ab1","id":5310,"implemented":true,"kind":"function","modifiers":[{"id":5291,"kind":"modifierInvocation","modifierName":{"id":5290,"name":"onlyOwner","nameLocations":["11013:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"11013:9:19"},"nodeType":"ModifierInvocation","src":"11013:9:19"}],"name":"setPaymentToken","nameLocation":"10973:15:19","nodeType":"FunctionDefinition","parameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"token","nameLocation":"10997:5:19","nodeType":"VariableDeclaration","scope":5310,"src":"10989:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5287,"name":"address","nodeType":"ElementaryTypeName","src":"10989:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10988:15:19"},"returnParameters":{"id":5292,"nodeType":"ParameterList","parameters":[],"src":"11023:0:19"},"scope":5400,"src":"10964:163:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5351,"nodeType":"Block","src":"11794:282:19","statements":[{"assignments":[5326],"declarations":[{"constant":false,"id":5326,"mutability":"mutable","name":"leaf","nameLocation":"11812:4:19","nodeType":"VariableDeclaration","scope":5351,"src":"11804:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11804:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5340,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":5334,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"11876:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5335,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"11880:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5332,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11865:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11869:6:19","memberName":"encode","nodeType":"MemberAccess","src":"11865:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11865:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5331,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11855:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11855:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11842:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5328,"name":"bytes","nodeType":"ElementaryTypeName","src":"11842:5:19","typeDescriptions":{}}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11848:6:19","memberName":"concat","nodeType":"MemberAccess","src":"11842:12:19","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11842:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5327,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11819:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11819:83:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11804:98:19"},{"expression":{"arguments":[{"id":5343,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"11967:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"expression":{"baseExpression":{"id":5344,"name":"whitelistSaleConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"11996:20:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WhitelistSale_$4734_storage_$","typeString":"mapping(uint256 => struct KIPNode.WhitelistSale storage ref)"}},"id":5346,"indexExpression":{"id":5345,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"12017:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11996:26:19","typeDescriptions":{"typeIdentifier":"t_struct$_WhitelistSale_$4734_storage","typeString":"struct KIPNode.WhitelistSale storage ref"}},"id":5347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12023:10:19","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":4725,"src":"11996:37:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5348,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"12051:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5341,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"11931:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$3476_$","typeString":"type(library MerkleProof)"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11943:6:19","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":2966,"src":"11931:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11931:138:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5324,"id":5350,"nodeType":"Return","src":"11912:157:19"}]},"documentation":{"id":5311,"nodeType":"StructuredDocumentation","src":"11133:489:19","text":"Validate Merkle Proof before calling whitelistMint function\n- Merkle Root (hash) already set (per tier) before the Sale event\n- Requirements:\n- Caller can be ANY\n- Params:\n- tier            Tier number (1 ~ 38)\n- to              Address of the Receiver\n- maxAmount       A max number of Licenses can be purchased (set in the Merkle Tree)\n- merkleProof     An array of connecting nodes in the Merkle Tree\n- Return: `true` or `false` "},"id":5352,"implemented":true,"kind":"function","modifiers":[],"name":"_validateProof","nameLocation":"11636:14:19","nodeType":"FunctionDefinition","parameters":{"id":5321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5313,"mutability":"mutable","name":"tier","nameLocation":"11668:4:19","nodeType":"VariableDeclaration","scope":5352,"src":"11660:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5312,"name":"uint256","nodeType":"ElementaryTypeName","src":"11660:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5315,"mutability":"mutable","name":"to","nameLocation":"11690:2:19","nodeType":"VariableDeclaration","scope":5352,"src":"11682:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5314,"name":"address","nodeType":"ElementaryTypeName","src":"11682:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5317,"mutability":"mutable","name":"maxAmount","nameLocation":"11710:9:19","nodeType":"VariableDeclaration","scope":5352,"src":"11702:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5316,"name":"uint256","nodeType":"ElementaryTypeName","src":"11702:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5320,"mutability":"mutable","name":"merkleProof","nameLocation":"11748:11:19","nodeType":"VariableDeclaration","scope":5352,"src":"11729:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11729:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5319,"nodeType":"ArrayTypeName","src":"11729:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"11650:115:19"},"returnParameters":{"id":5324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5352,"src":"11788:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5322,"name":"bool","nodeType":"ElementaryTypeName","src":"11788:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11787:6:19"},"scope":5400,"src":"11627:449:19","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[1795],"body":{"id":5389,"nodeType":"Block","src":"12434:226:19","statements":[{"assignments":[5367],"declarations":[{"constant":false,"id":5367,"mutability":"mutable","name":"previousOwner","nameLocation":"12452:13:19","nodeType":"VariableDeclaration","scope":5389,"src":"12444:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5366,"name":"address","nodeType":"ElementaryTypeName","src":"12444:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5374,"initialValue":{"arguments":[{"id":5370,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"12482:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5371,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"12486:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5372,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"12495:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5368,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"12468:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_KIPNode_$5400_$","typeString":"type(contract super KIPNode)"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12474:7:19","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1795,"src":"12468:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12468:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12444:56:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5376,"name":"transferEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"12531:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5377,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"12550:13:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12575:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12567:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5378,"name":"address","nodeType":"ElementaryTypeName","src":"12567:7:19","typeDescriptions":{}}},"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12567:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12550:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12531:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206e6f7420656e61626c6564","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12591:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023","typeString":"literal_string \"Transfer not enabled\""},"value":"Transfer not enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023","typeString":"literal_string \"Transfer not enabled\""}],"id":5375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12510:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12510:113:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5386,"nodeType":"ExpressionStatement","src":"12510:113:19"},{"expression":{"id":5387,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"12640:13:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5365,"id":5388,"nodeType":"Return","src":"12633:20:19"}]},"documentation":{"id":5353,"nodeType":"StructuredDocumentation","src":"12082:213:19","text":"Override the logic of ERC-721 implementation\n- During the locking state, `transferEnabled = false`, License NFTs are un-transferrable\n- Minting License is acceptable while burning is not allowed"},"id":5390,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"12309:7:19","nodeType":"FunctionDefinition","overrides":{"id":5362,"nodeType":"OverrideSpecifier","overrides":[{"id":5361,"name":"ERC721","nameLocations":["12408:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":2238,"src":"12408:6:19"}],"src":"12399:16:19"},"parameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"to","nameLocation":"12334:2:19","nodeType":"VariableDeclaration","scope":5390,"src":"12326:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5354,"name":"address","nodeType":"ElementaryTypeName","src":"12326:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5357,"mutability":"mutable","name":"tokenId","nameLocation":"12354:7:19","nodeType":"VariableDeclaration","scope":5390,"src":"12346:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5356,"name":"uint256","nodeType":"ElementaryTypeName","src":"12346:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5359,"mutability":"mutable","name":"auth","nameLocation":"12379:4:19","nodeType":"VariableDeclaration","scope":5390,"src":"12371:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5358,"name":"address","nodeType":"ElementaryTypeName","src":"12371:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12316:73:19"},"returnParameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5390,"src":"12425:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5363,"name":"address","nodeType":"ElementaryTypeName","src":"12425:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12424:9:19"},"scope":5400,"src":"12300:360:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1434],"body":{"id":5398,"nodeType":"Block","src":"12733:31:19","statements":[{"expression":{"id":5396,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"12750:7:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":5395,"id":5397,"nodeType":"Return","src":"12743:14:19"}]},"id":5399,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"12675:8:19","nodeType":"FunctionDefinition","overrides":{"id":5392,"nodeType":"OverrideSpecifier","overrides":[],"src":"12700:8:19"},"parameters":{"id":5391,"nodeType":"ParameterList","parameters":[],"src":"12683:2:19"},"returnParameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5399,"src":"12718:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5393,"name":"string","nodeType":"ElementaryTypeName","src":"12718:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12717:15:19"},"scope":5400,"src":"12666:98:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5401,"src":"615:12151:19","usedErrors":[13,18,195,200,209,214,219,226,231,236,956,2409,2414,2417,4680,4686,4688,4690,4692,4694,4696,4702],"usedEvents":[24,2254,2263,2272,4787,4799]}],"src":"33:12734:19"},"id":19},"contracts/mock/Token20.sol":{"ast":{"absolutePath":"contracts/mock/Token20.sol","exportedSymbols":{"Context":[2684],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"Token20":[5431]},"id":5432,"license":"None","nodeType":"SourceUnit","nodes":[{"id":5402,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5432,"sourceUnit":800,"src":"58:55:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5404,"name":"ERC20","nameLocations":["135:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"135:5:20"},"id":5405,"nodeType":"InheritanceSpecifier","src":"135:5:20"}],"canonicalName":"Token20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5431,"linearizedBaseContracts":[5431,799,189,903,877,2684],"name":"Token20","nameLocation":"124:7:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":5416,"nodeType":"Block","src":"221:2:20","statements":[]},"id":5417,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5412,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"207:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5413,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"213:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":5414,"kind":"baseConstructorSpecifier","modifierName":{"id":5411,"name":"ERC20","nameLocations":["201:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"201:5:20"},"nodeType":"ModifierInvocation","src":"201:19:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5407,"mutability":"mutable","name":"name","nameLocation":"173:4:20","nodeType":"VariableDeclaration","scope":5417,"src":"159:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5406,"name":"string","nodeType":"ElementaryTypeName","src":"159:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5409,"mutability":"mutable","name":"symbol","nameLocation":"193:6:20","nodeType":"VariableDeclaration","scope":5417,"src":"179:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5408,"name":"string","nodeType":"ElementaryTypeName","src":"179:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"158:42:20"},"returnParameters":{"id":5415,"nodeType":"ParameterList","parameters":[],"src":"221:0:20"},"scope":5431,"src":"147:76:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5429,"nodeType":"Block","src":"282:36:20","statements":[{"expression":{"arguments":[{"id":5425,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"298:3:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5426,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"303:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5424,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"292:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"292:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5428,"nodeType":"ExpressionStatement","src":"292:19:20"}]},"functionSelector":"40c10f19","id":5430,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"238:4:20","nodeType":"FunctionDefinition","parameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"_to","nameLocation":"251:3:20","nodeType":"VariableDeclaration","scope":5430,"src":"243:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5418,"name":"address","nodeType":"ElementaryTypeName","src":"243:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5421,"mutability":"mutable","name":"_amount","nameLocation":"264:7:20","nodeType":"VariableDeclaration","scope":5430,"src":"256:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5420,"name":"uint256","nodeType":"ElementaryTypeName","src":"256:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"242:30:20"},"returnParameters":{"id":5423,"nodeType":"ParameterList","parameters":[],"src":"282:0:20"},"scope":5431,"src":"229:89:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5432,"src":"115:205:20","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"33:288:20"},"id":20}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc0c1c87e408c4e55dc6229db728f4ce7c7bcde319cf505b5daf94e2df764f5264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xC SHR DUP8 0xE4 ADDMOD 0xC4 0xE5 0x5D 0xC6 0x22 SWAP14 0xB7 0x28 DELEGATECALL 0xCE PUSH29 0x7BCDE319CF505B5DAF94E2DF764F5264736F6C63430008140033000000 ","sourceMap":"751:5018:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc0c1c87e408c4e55dc6229db728f4ce7c7bcde319cf505b5daf94e2df764f5264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xC SHR DUP8 0xE4 ADDMOD 0xC4 0xE5 0x5D 0xC6 0x22 SWAP14 0xB7 0x28 DELEGATECALL 0xCE PUSH29 0x7BCDE319CF505B5DAF94E2DF764F5264736F6C63430008140033000000 ","sourceMap":"751:5018:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200f8e88033856b8f1d46af85a0901d573696704cea68472c45fa217587770c1f164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF DUP15 DUP9 SUB CODESIZE JUMP 0xB8 CALL 0xD4 PUSH11 0xF85A0901D573696704CEA6 DUP5 PUSH19 0xC45FA217587770C1F164736F6C634300081400 CALLER ","sourceMap":"803:8956:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200f8e88033856b8f1d46af85a0901d573696704cea68472c45fa217587770c1f164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF DUP15 DUP9 SUB CODESIZE JUMP 0xB8 CALL 0xD4 PUSH11 0xF85A0901D573696704CEA6 DUP5 PUSH19 0xC45FA217587770C1F164736F6C634300081400 CALLER ","sourceMap":"803:8956:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"contracts/KIPNode.sol":{"KIPNode":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"address","name":"paymentToken_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"ExceedAllowance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"uint256","name":"minTier","type":"uint256"},{"internalType":"uint256","name":"maxTier","type":"uint256"}],"name":"InvalidConfig","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[],"name":"InvalidRequest","type":"error"},{"inputs":[],"name":"InvalidURI","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"PriceNotConfigured","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"name":"SaleEventNotExist","type":"error"},{"inputs":[],"name":"SetAddressZero","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"tier","type":"uint256"},{"indexed":false,"internalType":"bool","name":"whitelist","type":"bool"},{"indexed":false,"internalType":"uint256","name":"userMintCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tierMintCount","type":"uint256"}],"name":"MintCountUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tier","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"bool","name":"whitelist","type":"bool"},{"indexed":false,"internalType":"string","name":"code","type":"string"}],"name":"TokenMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"KIPFundAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TIER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paymentToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tier","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"code","type":"string"}],"name":"publicMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"publicSaleConfigs","outputs":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint32","name":"maxPerTier","type":"uint32"},{"internalType":"uint32","name":"maxPerUser","type":"uint32"},{"internalType":"uint64","name":"totalMintedAmount","type":"uint64"},{"internalType":"uint64","name":"start","type":"uint64"},{"internalType":"uint64","name":"end","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"publicUserMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAddress","type":"address"}],"name":"setKIPFundAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"setPaymentToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tier","type":"uint256"},{"components":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint32","name":"maxPerTier","type":"uint32"},{"internalType":"uint32","name":"maxPerUser","type":"uint32"},{"internalType":"uint64","name":"totalMintedAmount","type":"uint64"},{"internalType":"uint64","name":"start","type":"uint64"},{"internalType":"uint64","name":"end","type":"uint64"}],"internalType":"struct KIPNode.PublicSale","name":"settings","type":"tuple"}],"name":"setPublicSaleConfigs","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"newState","type":"bool"}],"name":"setTransferEnabled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tier","type":"uint256"},{"components":[{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint32","name":"maxPerTier","type":"uint32"},{"internalType":"uint64","name":"totalMintedAmount","type":"uint64"},{"internalType":"uint64","name":"start","type":"uint64"},{"internalType":"uint64","name":"end","type":"uint64"}],"internalType":"struct KIPNode.WhitelistSale","name":"settings","type":"tuple"}],"name":"setWhitelistSaleConfigs","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"transferEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tier","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"whitelistMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"whitelistSaleConfigs","outputs":[{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint32","name":"maxPerTier","type":"uint32"},{"internalType":"uint64","name":"totalMintedAmount","type":"uint64"},{"internalType":"uint64","name":"start","type":"uint64"},{"internalType":"uint64","name":"end","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"whitelistUserMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1299":{"entryPoint":null,"id":1299,"parameterSlots":2,"returnSlots":0},"@_4824":{"entryPoint":null,"id":4824,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":566,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":847,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":870,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1806,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1823,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1099,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":941,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1420,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":801,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":769,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1235,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1381,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1255,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1575,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1120,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1046,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1545,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1245,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1513,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":999,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":952,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1295,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":764,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1136,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1500,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1353,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1149,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1305,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":821,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1348,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6934:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:12:21"},"nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:21"},"nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:21"},"nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:21"},"nodeType":"YulFunctionCall","src":"624:43:21"},"nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nodeType":"YulBlock","src":"759:80:21","statements":[{"nodeType":"YulAssignment","src":"769:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:21"},"nodeType":"YulFunctionCall","src":"778:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:21"},"nodeType":"YulFunctionCall","src":"800:33:21"},"nodeType":"YulExpressionStatement","src":"800:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:21","type":""}],"src":"696:143:21"},{"body":{"nodeType":"YulBlock","src":"939:413:21","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:21"},"nodeType":"YulFunctionCall","src":"987:79:21"},"nodeType":"YulExpressionStatement","src":"987:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:21"},"nodeType":"YulFunctionCall","src":"956:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:21"},"nodeType":"YulFunctionCall","src":"952:32:21"},"nodeType":"YulIf","src":"949:119:21"},{"nodeType":"YulBlock","src":"1078:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:21"},"nodeType":"YulFunctionCall","src":"1164:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:21"},"nodeType":"YulFunctionCall","src":"1132:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:21"}]}]},{"nodeType":"YulBlock","src":"1216:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:21"},"nodeType":"YulFunctionCall","src":"1303:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:21"},"nodeType":"YulFunctionCall","src":"1271:64:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:21","type":""}],"src":"845:507:21"},{"body":{"nodeType":"YulBlock","src":"1417:40:21","statements":[{"nodeType":"YulAssignment","src":"1428:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1444:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1438:5:21"},"nodeType":"YulFunctionCall","src":"1438:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1428:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1410:6:21","type":""}],"src":"1358:99:21"},{"body":{"nodeType":"YulBlock","src":"1491:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1508:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1511:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1501:6:21"},"nodeType":"YulFunctionCall","src":"1501:88:21"},"nodeType":"YulExpressionStatement","src":"1501:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1605:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1608:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1598:6:21"},"nodeType":"YulFunctionCall","src":"1598:15:21"},"nodeType":"YulExpressionStatement","src":"1598:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1629:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1632:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1622:6:21"},"nodeType":"YulFunctionCall","src":"1622:15:21"},"nodeType":"YulExpressionStatement","src":"1622:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1463:180:21"},{"body":{"nodeType":"YulBlock","src":"1677:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1694:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1697:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1687:6:21"},"nodeType":"YulFunctionCall","src":"1687:88:21"},"nodeType":"YulExpressionStatement","src":"1687:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1794:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1784:6:21"},"nodeType":"YulFunctionCall","src":"1784:15:21"},"nodeType":"YulExpressionStatement","src":"1784:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1815:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1818:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1808:6:21"},"nodeType":"YulFunctionCall","src":"1808:15:21"},"nodeType":"YulExpressionStatement","src":"1808:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1649:180:21"},{"body":{"nodeType":"YulBlock","src":"1886:269:21","statements":[{"nodeType":"YulAssignment","src":"1896:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1910:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1916:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1906:3:21"},"nodeType":"YulFunctionCall","src":"1906:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1896:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1927:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1957:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1963:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1953:3:21"},"nodeType":"YulFunctionCall","src":"1953:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1931:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2004:51:21","statements":[{"nodeType":"YulAssignment","src":"2018:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2032:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2040:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2028:3:21"},"nodeType":"YulFunctionCall","src":"2028:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2018:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1984:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1977:6:21"},"nodeType":"YulFunctionCall","src":"1977:26:21"},"nodeType":"YulIf","src":"1974:81:21"},{"body":{"nodeType":"YulBlock","src":"2107:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2121:16:21"},"nodeType":"YulFunctionCall","src":"2121:18:21"},"nodeType":"YulExpressionStatement","src":"2121:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2071:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2094:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2102:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2091:2:21"},"nodeType":"YulFunctionCall","src":"2091:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2068:2:21"},"nodeType":"YulFunctionCall","src":"2068:38:21"},"nodeType":"YulIf","src":"2065:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1870:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1879:6:21","type":""}],"src":"1835:320:21"},{"body":{"nodeType":"YulBlock","src":"2215:87:21","statements":[{"nodeType":"YulAssignment","src":"2225:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2233:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2225:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2253:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2256:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2246:6:21"},"nodeType":"YulFunctionCall","src":"2246:14:21"},"nodeType":"YulExpressionStatement","src":"2246:14:21"},{"nodeType":"YulAssignment","src":"2269:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2287:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2290:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2277:9:21"},"nodeType":"YulFunctionCall","src":"2277:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2269:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2202:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2210:4:21","type":""}],"src":"2161:141:21"},{"body":{"nodeType":"YulBlock","src":"2352:49:21","statements":[{"nodeType":"YulAssignment","src":"2362:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2387:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2376:3:21"},"nodeType":"YulFunctionCall","src":"2376:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"2392:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2372:3:21"},"nodeType":"YulFunctionCall","src":"2372:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2362:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2335:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2345:6:21","type":""}],"src":"2308:93:21"},{"body":{"nodeType":"YulBlock","src":"2460:54:21","statements":[{"nodeType":"YulAssignment","src":"2470:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2495:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"2501:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2491:3:21"},"nodeType":"YulFunctionCall","src":"2491:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2470:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2435:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"2441:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2451:8:21","type":""}],"src":"2407:107:21"},{"body":{"nodeType":"YulBlock","src":"2596:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2606:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2627:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2623:3:21"},"nodeType":"YulFunctionCall","src":"2623:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2610:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2650:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2681:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2692:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2662:18:21"},"nodeType":"YulFunctionCall","src":"2662:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2654:4:21","type":""}]},{"nodeType":"YulAssignment","src":"2768:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2799:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2810:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2780:18:21"},"nodeType":"YulFunctionCall","src":"2780:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2768:8:21"}]},{"nodeType":"YulAssignment","src":"2828:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2841:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2852:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2848:3:21"},"nodeType":"YulFunctionCall","src":"2848:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2837:3:21"},"nodeType":"YulFunctionCall","src":"2837:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2828:5:21"}]},{"nodeType":"YulAssignment","src":"2867:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2880:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2891:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"2901:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2887:3:21"},"nodeType":"YulFunctionCall","src":"2887:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2877:2:21"},"nodeType":"YulFunctionCall","src":"2877:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2867:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2557:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2564:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2576:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2589:6:21","type":""}],"src":"2520:393:21"},{"body":{"nodeType":"YulBlock","src":"2964:32:21","statements":[{"nodeType":"YulAssignment","src":"2974:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2985:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2974:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2946:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2956:7:21","type":""}],"src":"2919:77:21"},{"body":{"nodeType":"YulBlock","src":"3034:28:21","statements":[{"nodeType":"YulAssignment","src":"3044:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"3051:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3044:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3020:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3030:3:21","type":""}],"src":"3002:60:21"},{"body":{"nodeType":"YulBlock","src":"3128:82:21","statements":[{"nodeType":"YulAssignment","src":"3138:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3196:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3178:17:21"},"nodeType":"YulFunctionCall","src":"3178:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3169:8:21"},"nodeType":"YulFunctionCall","src":"3169:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3151:17:21"},"nodeType":"YulFunctionCall","src":"3151:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3138:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3108:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3118:9:21","type":""}],"src":"3068:142:21"},{"body":{"nodeType":"YulBlock","src":"3263:28:21","statements":[{"nodeType":"YulAssignment","src":"3273:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"3280:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3273:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3249:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3259:3:21","type":""}],"src":"3216:75:21"},{"body":{"nodeType":"YulBlock","src":"3373:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3383:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3438:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3407:30:21"},"nodeType":"YulFunctionCall","src":"3407:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3387:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3462:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3502:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3496:5:21"},"nodeType":"YulFunctionCall","src":"3496:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3509:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3541:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3517:23:21"},"nodeType":"YulFunctionCall","src":"3517:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3468:27:21"},"nodeType":"YulFunctionCall","src":"3468:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3455:6:21"},"nodeType":"YulFunctionCall","src":"3455:105:21"},"nodeType":"YulExpressionStatement","src":"3455:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3350:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3356:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3364:7:21","type":""}],"src":"3297:269:21"},{"body":{"nodeType":"YulBlock","src":"3621:24:21","statements":[{"nodeType":"YulAssignment","src":"3631:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3638:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3631:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3617:3:21","type":""}],"src":"3572:73:21"},{"body":{"nodeType":"YulBlock","src":"3704:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3714:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3728:30:21"},"nodeType":"YulFunctionCall","src":"3728:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3718:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3813:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3819:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3827:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3769:43:21"},"nodeType":"YulFunctionCall","src":"3769:65:21"},"nodeType":"YulExpressionStatement","src":"3769:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3690:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3696:6:21","type":""}],"src":"3651:189:21"},{"body":{"nodeType":"YulBlock","src":"3896:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"3963:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4007:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4014:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3977:29:21"},"nodeType":"YulFunctionCall","src":"3977:39:21"},"nodeType":"YulExpressionStatement","src":"3977:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3916:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"3923:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3913:2:21"},"nodeType":"YulFunctionCall","src":"3913:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3928:26:21","statements":[{"nodeType":"YulAssignment","src":"3930:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3943:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3950:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:21"},"nodeType":"YulFunctionCall","src":"3939:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3930:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"3910:2:21","statements":[]},"src":"3906:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3884:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3891:3:21","type":""}],"src":"3846:186:21"},{"body":{"nodeType":"YulBlock","src":"4117:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"4143:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4157:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4205:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4173:31:21"},"nodeType":"YulFunctionCall","src":"4173:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4161:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4224:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4247:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4275:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4257:17:21"},"nodeType":"YulFunctionCall","src":"4257:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4243:3:21"},"nodeType":"YulFunctionCall","src":"4243:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4228:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4444:27:21","statements":[{"nodeType":"YulAssignment","src":"4446:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4461:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4446:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4428:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"4440:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4425:2:21"},"nodeType":"YulFunctionCall","src":"4425:18:21"},"nodeType":"YulIf","src":"4422:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4513:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4530:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4558:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4540:17:21"},"nodeType":"YulFunctionCall","src":"4540:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4526:3:21"},"nodeType":"YulFunctionCall","src":"4526:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4484:28:21"},"nodeType":"YulFunctionCall","src":"4484:80:21"},"nodeType":"YulExpressionStatement","src":"4484:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4134:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4139:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4131:2:21"},"nodeType":"YulFunctionCall","src":"4131:11:21"},"nodeType":"YulIf","src":"4128:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4093:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"4100:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4105:10:21","type":""}],"src":"4038:543:21"},{"body":{"nodeType":"YulBlock","src":"4650:54:21","statements":[{"nodeType":"YulAssignment","src":"4660:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4685:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"4691:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4681:3:21"},"nodeType":"YulFunctionCall","src":"4681:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4660:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4625:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"4631:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4641:8:21","type":""}],"src":"4587:117:21"},{"body":{"nodeType":"YulBlock","src":"4761:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4771:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4820:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4823:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4816:3:21"},"nodeType":"YulFunctionCall","src":"4816:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4835:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4831:3:21"},"nodeType":"YulFunctionCall","src":"4831:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4787:28:21"},"nodeType":"YulFunctionCall","src":"4787:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4783:3:21"},"nodeType":"YulFunctionCall","src":"4783:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4775:4:21","type":""}]},{"nodeType":"YulAssignment","src":"4848:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4862:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"4868:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4858:3:21"},"nodeType":"YulFunctionCall","src":"4858:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4848:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4738:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4744:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4754:6:21","type":""}],"src":"4710:169:21"},{"body":{"nodeType":"YulBlock","src":"4965:214:21","statements":[{"nodeType":"YulAssignment","src":"5098:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5125:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"5131:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5106:18:21"},"nodeType":"YulFunctionCall","src":"5106:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5098:4:21"}]},{"nodeType":"YulAssignment","src":"5144:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5155:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5165:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5168:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5161:3:21"},"nodeType":"YulFunctionCall","src":"5161:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5152:2:21"},"nodeType":"YulFunctionCall","src":"5152:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5144:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4946:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"4952:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4960:4:21","type":""}],"src":"4884:295:21"},{"body":{"nodeType":"YulBlock","src":"5276:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5287:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5334:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5301:32:21"},"nodeType":"YulFunctionCall","src":"5301:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5291:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5423:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5425:16:21"},"nodeType":"YulFunctionCall","src":"5425:18:21"},"nodeType":"YulExpressionStatement","src":"5425:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5395:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5403:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5392:2:21"},"nodeType":"YulFunctionCall","src":"5392:30:21"},"nodeType":"YulIf","src":"5389:56:21"},{"nodeType":"YulVariableDeclaration","src":"5455:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5501:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5495:5:21"},"nodeType":"YulFunctionCall","src":"5495:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5469:25:21"},"nodeType":"YulFunctionCall","src":"5469:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5459:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5600:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5606:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"5614:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5554:45:21"},"nodeType":"YulFunctionCall","src":"5554:67:21"},"nodeType":"YulExpressionStatement","src":"5554:67:21"},{"nodeType":"YulVariableDeclaration","src":"5631:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5648:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5635:9:21","type":""}]},{"nodeType":"YulAssignment","src":"5659:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5672:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5659:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5723:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5737:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5756:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5768:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5764:3:21"},"nodeType":"YulFunctionCall","src":"5764:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5752:3:21"},"nodeType":"YulFunctionCall","src":"5752:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5741:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5788:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5834:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5802:31:21"},"nodeType":"YulFunctionCall","src":"5802:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5792:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5852:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5861:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5856:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5920:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5945:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5963:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5968:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5959:3:21"},"nodeType":"YulFunctionCall","src":"5959:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5953:5:21"},"nodeType":"YulFunctionCall","src":"5953:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5938:6:21"},"nodeType":"YulFunctionCall","src":"5938:42:21"},"nodeType":"YulExpressionStatement","src":"5938:42:21"},{"nodeType":"YulAssignment","src":"5997:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6011:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6019:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6007:3:21"},"nodeType":"YulFunctionCall","src":"6007:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5997:6:21"}]},{"nodeType":"YulAssignment","src":"6038:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6055:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6066:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6051:3:21"},"nodeType":"YulFunctionCall","src":"6051:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6038:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5886:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5889:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5883:2:21"},"nodeType":"YulFunctionCall","src":"5883:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5898:21:21","statements":[{"nodeType":"YulAssignment","src":"5900:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5909:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5912:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5905:3:21"},"nodeType":"YulFunctionCall","src":"5905:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5900:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"5879:3:21","statements":[]},"src":"5875:208:21"},{"body":{"nodeType":"YulBlock","src":"6119:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6137:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6164:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6169:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6160:3:21"},"nodeType":"YulFunctionCall","src":"6160:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6154:5:21"},"nodeType":"YulFunctionCall","src":"6154:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6141:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6204:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6231:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6246:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6254:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6242:3:21"},"nodeType":"YulFunctionCall","src":"6242:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6212:18:21"},"nodeType":"YulFunctionCall","src":"6212:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6197:6:21"},"nodeType":"YulFunctionCall","src":"6197:64:21"},"nodeType":"YulExpressionStatement","src":"6197:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6102:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"6111:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6099:2:21"},"nodeType":"YulFunctionCall","src":"6099:19:21"},"nodeType":"YulIf","src":"6096:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6295:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6309:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6317:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6305:3:21"},"nodeType":"YulFunctionCall","src":"6305:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"6321:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6301:3:21"},"nodeType":"YulFunctionCall","src":"6301:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6288:6:21"},"nodeType":"YulFunctionCall","src":"6288:36:21"},"nodeType":"YulExpressionStatement","src":"6288:36:21"}]},"nodeType":"YulCase","src":"5716:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5721:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6351:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6365:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6378:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6369:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6402:67:21","statements":[{"nodeType":"YulAssignment","src":"6420:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6439:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6444:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6435:3:21"},"nodeType":"YulFunctionCall","src":"6435:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6429:5:21"},"nodeType":"YulFunctionCall","src":"6429:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6420:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6395:6:21"},"nodeType":"YulIf","src":"6392:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6489:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6548:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"6555:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6495:52:21"},"nodeType":"YulFunctionCall","src":"6495:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6482:6:21"},"nodeType":"YulFunctionCall","src":"6482:81:21"},"nodeType":"YulExpressionStatement","src":"6482:81:21"}]},"nodeType":"YulCase","src":"6343:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5696:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5704:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5693:2:21"},"nodeType":"YulFunctionCall","src":"5693:14:21"},"nodeType":"YulSwitch","src":"5686:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5265:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"5271:3:21","type":""}],"src":"5184:1395:21"},{"body":{"nodeType":"YulBlock","src":"6650:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6667:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6690:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6672:17:21"},"nodeType":"YulFunctionCall","src":"6672:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6660:6:21"},"nodeType":"YulFunctionCall","src":"6660:37:21"},"nodeType":"YulExpressionStatement","src":"6660:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6638:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6645:3:21","type":""}],"src":"6585:118:21"},{"body":{"nodeType":"YulBlock","src":"6807:124:21","statements":[{"nodeType":"YulAssignment","src":"6817:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6829:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6840:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6825:3:21"},"nodeType":"YulFunctionCall","src":"6825:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6817:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6897:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6910:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6921:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6906:3:21"},"nodeType":"YulFunctionCall","src":"6906:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6853:43:21"},"nodeType":"YulFunctionCall","src":"6853:71:21"},"nodeType":"YulExpressionStatement","src":"6853:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6779:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6791:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6802:4:21","type":""}],"src":"6709:222:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052736e3bbb13330102989ac110163e4c649d0bb88777600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b50604051620053613803806200536183398181016040528101906200008c919062000366565b816040518060400160405280600b81526020017f4b4950204c6963656e73650000000000000000000000000000000000000000008152506040518060400160405280600781526020017f4b49504e4f44450000000000000000000000000000000000000000000000000081525081600090816200010a919062000627565b5080600190816200011c919062000627565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001945760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200018b91906200071f565b60405180910390fd5b620001a5816200023660201b60201c565b5080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280601981526020017f68747470733a2f2f6e6f64652d6e66742e6b69702e70726f2f00000000000000815250600f90816200022d919062000627565b5050506200073c565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200032e8262000301565b9050919050565b620003408162000321565b81146200034c57600080fd5b50565b600081519050620003608162000335565b92915050565b6000806040838503121562000380576200037f620002fc565b5b600062000390858286016200034f565b9250506020620003a3858286016200034f565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200042f57607f821691505b602082108103620004455762000444620003e7565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000470565b620004bb868362000470565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200050862000502620004fc84620004d3565b620004dd565b620004d3565b9050919050565b6000819050919050565b6200052483620004e7565b6200053c62000533826200050f565b8484546200047d565b825550505050565b600090565b6200055362000544565b6200056081848462000519565b505050565b5b8181101562000588576200057c60008262000549565b60018101905062000566565b5050565b601f821115620005d757620005a1816200044b565b620005ac8462000460565b81016020851015620005bc578190505b620005d4620005cb8562000460565b83018262000565565b50505b505050565b600082821c905092915050565b6000620005fc60001984600802620005dc565b1980831691505092915050565b6000620006178383620005e9565b9150826002028217905092915050565b6200063282620003ad565b67ffffffffffffffff8111156200064e576200064d620003b8565b5b6200065a825462000416565b620006678282856200058c565b600060209050601f8311600181146200069f57600084156200068a578287015190505b62000696858262000609565b86555062000706565b601f198416620006af866200044b565b60005b82811015620006d957848901518255600182019150602085019450602081019050620006b2565b86831015620006f95784890151620006f5601f891682620005e9565b8355505b6001600288020188555050505b505050505050565b620007198162000321565b82525050565b60006020820190506200073660008301846200070e565b92915050565b614c15806200074c6000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80636c0360eb1161011a578063acb889ee116100ad578063c87b56dd1161007c578063c87b56dd1461059e578063e985e9c5146105ce578063f1ce5fe0146105fe578063f2fde38b14610633578063fcf9e1f81461064f576101fb565b8063acb889ee1461052c578063af3a19c714610548578063b824054014610566578063b88d4fde14610582576101fb565b806395d89b41116100e957806395d89b41146104a25780639fe9f623146104c0578063a22cb465146104dc578063a4532fb9146104f8576101fb565b80636c0360eb1461042c57806370a082311461044a578063715018a61461047a5780638da5cb5b14610484576101fb565b80633013ce29116101925780634cd412d5116101615780634cd412d5146103a657806355f804b3146103c45780636352211e146103e05780636a326ab114610410576101fb565b80633013ce291461031e57806333d9f1fa1461033c578063378077a81461036c57806342842e0e1461038a576101fb565b80631aca45a7116101ce5780631aca45a71461029a5780631bb08048146102ca5780631d68e8ce146102e657806323b872dd14610302576101fb565b806301ffc9a71461020057806306fdde0314610230578063081812fc1461024e578063095ea7b31461027e575b600080fd5b61021a600480360381019061021591906131a3565b61066b565b60405161022791906131eb565b60405180910390f35b61023861074d565b6040516102459190613296565b60405180910390f35b610268600480360381019061026391906132ee565b6107df565b604051610275919061335c565b60405180910390f35b610298600480360381019061029391906133a3565b6107fb565b005b6102b460048036038101906102af91906133e3565b610811565b6040516102c19190613432565b60405180910390f35b6102e460048036038101906102df919061344d565b610836565b005b61030060048036038101906102fb91906134df565b6108e8565b005b61031c60048036038101906103179190613579565b610e32565b005b610326610f34565b604051610333919061362b565b60405180910390f35b610356600480360381019061035191906133e3565b610f5a565b6040516103639190613432565b60405180910390f35b610374610f7f565b604051610381919061335c565b60405180910390f35b6103a4600480360381019061039f9190613579565b610fa5565b005b6103ae610fc5565b6040516103bb91906131eb565b60405180910390f35b6103de60048036038101906103d9919061369c565b610fd8565b005b6103fa60048036038101906103f591906132ee565b611033565b604051610407919061335c565b60405180910390f35b61042a6004803603810190610425919061344d565b611045565b005b6104346110f7565b6040516104419190613296565b60405180910390f35b610464600480360381019061045f919061344d565b611185565b6040516104719190613432565b60405180910390f35b61048261123f565b005b61048c611253565b604051610499919061335c565b60405180910390f35b6104aa61127d565b6040516104b79190613296565b60405180910390f35b6104da60048036038101906104d59190613715565b61130f565b005b6104f660048036038101906104f19190613742565b611334565b005b610512600480360381019061050d91906132ee565b61134a565b6040516105239594939291906137dd565b60405180910390f35b61054660048036038101906105419190613854565b6113cc565b005b610550611450565b60405161055d9190613432565b60405180910390f35b610580600480360381019061057b9190613894565b611455565b005b61059c60048036038101906105979190613a4c565b611a56565b005b6105b860048036038101906105b391906132ee565b611a73565b6040516105c59190613296565b60405180910390f35b6105e860048036038101906105e39190613acf565b611adc565b6040516105f591906131eb565b60405180910390f35b610618600480360381019061061391906132ee565b611b70565b60405161062a96959493929190613b0f565b60405180910390f35b61064d6004803603810190610648919061344d565b611c08565b005b61066960048036038101906106649190613b8f565b611c8e565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061073657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610746575061074582611d12565b5b9050919050565b60606000805461075c90613bfe565b80601f016020809104026020016040519081016040528092919081815260200182805461078890613bfe565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b60006107ea82611d7c565b506107f482611e04565b9050919050565b61080d8282610808611e41565b611e49565b5050565b600c602052816000526040600020602052806000526040600020600091509150505481565b61083e611e5b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a4576040517f9926074200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008614806108f75750602686115b8061092e5750600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b806109395750600084145b15610970576040517f41abc80100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60008881526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160049054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160018201600c9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505090506000610a62611e41565b9050816060015167ffffffffffffffff16421080610a8d5750816080015167ffffffffffffffff1642115b15610ad957816060015182608001516040517fcbaef561000000000000000000000000000000000000000000000000000000008152600401610ad0929190613c60565b60405180910390fd5b8486600c60008b815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b369190613cb8565b1180610b645750816020015163ffffffff1686836040015167ffffffffffffffff16610b629190613cb8565b115b15610b9b576040517fdad4f32900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ba88882878787611ee2565b610bde576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85600c60008a815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c3e9190613cb8565b9250508190555085600b60008a815260200190815260200160002060010160048282829054906101000a900467ffffffffffffffff16610c7e9190613cec565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600190505b868111610d585760086000815480929190610cc590613d28565b9190505550610cd688600854611fa4565b8773ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fbb9ad13c0de1a777020713212854c8c286c0c260f459a4f53aa84a65e3bc0db28b60085460006001604051610d3d9493929190613dd1565b60405180910390a38080610d5090613d28565b915050610cab565b508073ffffffffffffffffffffffffffffffffffffffff167f5bd7001d995bb594c91e6abb25ddbeaf9c358906be6aa0fadb5109f567609931896001600c60008d815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b60008e815260200190815260200160002060010160049054906101000a900467ffffffffffffffff16604051610e209493929190613e29565b60405180910390a25050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea45760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610e9b919061335c565b60405180910390fd5b6000610eb88383610eb3611e41565b611fc2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f2e578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610f2593929190613e6e565b60405180910390fd5b50505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d602052816000526040600020602052806000526040600020600091509150505481565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610fc083838360405180602001604052806000815250611a56565b505050565b600e60009054906101000a900460ff1681565b610fe0611e5b565b6000828290500361101d576040517f3ba0191100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181600f918261102e929190614052565b505050565b600061103e82611d7c565b9050919050565b61104d611e5b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110b3576040517f9926074200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600f805461110490613bfe565b80601f016020809104026020016040519081016040528092919081815260200182805461113090613bfe565b801561117d5780601f106111525761010080835404028352916020019161117d565b820191906000526020600020905b81548152906001019060200180831161116057829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111f85760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016111ef919061335c565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611247611e5b565b6112516000612063565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461128c90613bfe565b80601f01602080910402602001604051908101604052809291908181526020018280546112b890613bfe565b80156113055780601f106112da57610100808354040283529160200191611305565b820191906000526020600020905b8154815290600101906020018083116112e857829003601f168201915b5050505050905090565b611317611e5b565b80600e60006101000a81548160ff02191690831515021790555050565b61134661133f611e41565b8383612129565b5050565b600b6020528060005260406000206000915090508060000154908060010160009054906101000a900463ffffffff16908060010160049054906101000a900467ffffffffffffffff169080600101600c9054906101000a900467ffffffffffffffff16908060010160149054906101000a900467ffffffffffffffff16905085565b6113d4611e5b565b60008214806113e35750602682115b1561142957600160266040517fd40d76ca00000000000000000000000000000000000000000000000000000000815260040161142092919061415d565b60405180910390fd5b80600a60008481526020019081526020016000208181611449919061456b565b9050505050565b602681565b60008514806114645750602685115b8061146f5750600083145b806114a65750600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b156114dd576040517f41abc80100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600a60008781526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160189054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905060006115f5611e41565b9050816080015167ffffffffffffffff1642108061162057508160a0015167ffffffffffffffff1642115b1561166c5781608001518260a001516040517fcbaef561000000000000000000000000000000000000000000000000000000008152600401611663929190613c60565b60405180910390fd5b60008260000151036116aa576040517f1140cf7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816040015163ffffffff1685600d60008a815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117119190613cb8565b118061173f5750816020015163ffffffff1685836060015167ffffffffffffffff1661173d9190613cb8565b115b15611776576040517fdad4f32900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600a600089815260200190815260200160002060010160088282829054906101000a900467ffffffffffffffff166117af9190613cec565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555084600d600089815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118359190613cb8565b92505081905550600085836000015161184e9190614579565b90506118c182600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612298909392919063ffffffff16565b6000600190505b86811161197c57600860008154809291906118e290613d28565b91905055506118f388600854611fa4565b8773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fbb9ad13c0de1a777020713212854c8c286c0c260f459a4f53aa84a65e3bc0db28b600854886000015160008c8c604051611961969594939291906145e8565b60405180910390a3808061197490613d28565b9150506118c8565b508173ffffffffffffffffffffffffffffffffffffffff167f5bd7001d995bb594c91e6abb25ddbeaf9c358906be6aa0fadb5109f567609931896000600d60008d815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a60008e815260200190815260200160002060010160089054906101000a900467ffffffffffffffff16604051611a449493929190613e29565b60405180910390a25050505050505050565b611a61848484610e32565b611a6d8484848461231a565b50505050565b6060611a7e82611d7c565b506000611a896124d1565b90506000815111611aa95760405180602001604052806000815250611ad4565b80611ab384612563565b604051602001611ac4929190614680565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600a6020528060005260406000206000915090508060000154908060010160009054906101000a900463ffffffff16908060010160049054906101000a900463ffffffff16908060010160089054906101000a900467ffffffffffffffff16908060010160109054906101000a900467ffffffffffffffff16908060010160189054906101000a900467ffffffffffffffff16905086565b611c10611e5b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611c825760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611c79919061335c565b60405180910390fd5b611c8b81612063565b50565b611c96611e5b565b6000821480611ca55750602682115b15611ceb57600160266040517fd40d76ca000000000000000000000000000000000000000000000000000000008152600401611ce292919061415d565b60405180910390fd5b80600b60008481526020019081526020016000208181611d0b91906148f3565b9050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080611d8883612631565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611dfb57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611df29190613432565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b611e56838383600161266e565b505050565b611e63611e41565b73ffffffffffffffffffffffffffffffffffffffff16611e81611253565b73ffffffffffffffffffffffffffffffffffffffff1614611ee057611ea4611e41565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611ed7919061335c565b60405180910390fd5b565b6000808585604051602001611ef8929190614901565b60405160208183030381529060405280519060200120604051602001611f1e919061494b565b604051602081830303815290604052805190602001209050611f98848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050600b60008a81526020019081526020016000206000015483612833565b91505095945050505050565b611fbe82826040518060200160405280600081525061284a565b5050565b600080611fd0858585612866565b9050600e60009054906101000a900460ff16806120195750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b612058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204f906149b2565b60405180910390fd5b809150509392505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361219a57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401612191919061335c565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161228b91906131eb565b60405180910390a3505050565b612314848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016122cd939291906149d2565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612a80565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156124cb578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261235e611e41565b8685856040518563ffffffff1660e01b81526004016123809493929190614a5e565b6020604051808303816000875af19250505080156123bc57506040513d601f19601f820116820180604052508101906123b99190614abf565b60015b612440573d80600081146123ec576040519150601f19603f3d011682016040523d82523d6000602084013e6123f1565b606091505b50600081510361243857836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161242f919061335c565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146124c957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016124c0919061335c565b60405180910390fd5b505b50505050565b6060600f80546124e090613bfe565b80601f016020809104026020016040519081016040528092919081815260200182805461250c90613bfe565b80156125595780601f1061252e57610100808354040283529160200191612559565b820191906000526020600020905b81548152906001019060200180831161253c57829003601f168201915b5050505050905090565b60606000600161257284612b17565b01905060008167ffffffffffffffff81111561259157612590613921565b5b6040519080825280601f01601f1916602001820160405280156125c35781602001600182028036833780820191505090505b509050600082602001820190505b600115612626578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161261a57612619614aec565b5b049450600085036125d1575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806126a75750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156127db5760006126b784611d7c565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561272257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561273557506127338184611adc565b155b1561277757826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161276e919061335c565b60405180910390fd5b81156127d957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000826128408584612c6a565b1490509392505050565b6128548383612cc0565b612861600084848461231a565b505050565b60008061287284612631565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146128b4576128b3818486612db9565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612945576128f660008560008061266e565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146129c8576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000612aab828473ffffffffffffffffffffffffffffffffffffffff16612e7d90919063ffffffff16565b90506000815114158015612ad0575080806020019051810190612ace9190614b30565b155b15612b1257826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401612b09919061335c565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612b75577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381612b6b57612b6a614aec565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612bb2576d04ee2d6d415b85acef81000000008381612ba857612ba7614aec565b5b0492506020810190505b662386f26fc100008310612be157662386f26fc100008381612bd757612bd6614aec565b5b0492506010810190505b6305f5e1008310612c0a576305f5e1008381612c0057612bff614aec565b5b0492506008810190505b6127108310612c2f576127108381612c2557612c24614aec565b5b0492506004810190505b60648310612c525760648381612c4857612c47614aec565b5b0492506002810190505b600a8310612c61576001810190505b80915050919050565b60008082905060005b8451811015612cb557612ca082868381518110612c9357612c92614b5d565b5b6020026020010151612e93565b91508080612cad90613d28565b915050612c73565b508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612d325760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401612d29919061335c565b60405180910390fd5b6000612d4083836000611fc2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612db45760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401612dab919061335c565b60405180910390fd5b505050565b612dc4838383612ebe565b612e7857600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612e3957806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401612e309190613432565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401612e6f929190614901565b60405180910390fd5b505050565b6060612e8b83836000612f7f565b905092915050565b6000818310612eab57612ea6828461304c565b612eb6565b612eb5838361304c565b5b905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015612f7657508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612f375750612f368484611adc565b5b80612f7557508273ffffffffffffffffffffffffffffffffffffffff16612f5d83611e04565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b606081471015612fc657306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401612fbd919061335c565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051612fef9190614bc8565b60006040518083038185875af1925050503d806000811461302c576040519150601f19603f3d011682016040523d82523d6000602084013e613031565b606091505b5091509150613041868383613063565b925050509392505050565b600082600052816020526040600020905092915050565b60608261307857613073826130f2565b6130ea565b600082511480156130a0575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156130e257836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016130d9919061335c565b60405180910390fd5b8190506130eb565b5b9392505050565b6000815111156131055780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6131808161314b565b811461318b57600080fd5b50565b60008135905061319d81613177565b92915050565b6000602082840312156131b9576131b8613141565b5b60006131c78482850161318e565b91505092915050565b60008115159050919050565b6131e5816131d0565b82525050565b600060208201905061320060008301846131dc565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613240578082015181840152602081019050613225565b60008484015250505050565b6000601f19601f8301169050919050565b600061326882613206565b6132728185613211565b9350613282818560208601613222565b61328b8161324c565b840191505092915050565b600060208201905081810360008301526132b0818461325d565b905092915050565b6000819050919050565b6132cb816132b8565b81146132d657600080fd5b50565b6000813590506132e8816132c2565b92915050565b60006020828403121561330457613303613141565b5b6000613312848285016132d9565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006133468261331b565b9050919050565b6133568161333b565b82525050565b6000602082019050613371600083018461334d565b92915050565b6133808161333b565b811461338b57600080fd5b50565b60008135905061339d81613377565b92915050565b600080604083850312156133ba576133b9613141565b5b60006133c88582860161338e565b92505060206133d9858286016132d9565b9150509250929050565b600080604083850312156133fa576133f9613141565b5b6000613408858286016132d9565b92505060206134198582860161338e565b9150509250929050565b61342c816132b8565b82525050565b60006020820190506134476000830184613423565b92915050565b60006020828403121561346357613462613141565b5b60006134718482850161338e565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261349f5761349e61347a565b5b8235905067ffffffffffffffff8111156134bc576134bb61347f565b5b6020830191508360208202830111156134d8576134d7613484565b5b9250929050565b60008060008060008060a087890312156134fc576134fb613141565b5b600061350a89828a016132d9565b965050602061351b89828a0161338e565b955050604061352c89828a016132d9565b945050606061353d89828a016132d9565b935050608087013567ffffffffffffffff81111561355e5761355d613146565b5b61356a89828a01613489565b92509250509295509295509295565b60008060006060848603121561359257613591613141565b5b60006135a08682870161338e565b93505060206135b18682870161338e565b92505060406135c2868287016132d9565b9150509250925092565b6000819050919050565b60006135f16135ec6135e78461331b565b6135cc565b61331b565b9050919050565b6000613603826135d6565b9050919050565b6000613615826135f8565b9050919050565b6136258161360a565b82525050565b6000602082019050613640600083018461361c565b92915050565b60008083601f84011261365c5761365b61347a565b5b8235905067ffffffffffffffff8111156136795761367861347f565b5b60208301915083600182028301111561369557613694613484565b5b9250929050565b600080602083850312156136b3576136b2613141565b5b600083013567ffffffffffffffff8111156136d1576136d0613146565b5b6136dd85828601613646565b92509250509250929050565b6136f2816131d0565b81146136fd57600080fd5b50565b60008135905061370f816136e9565b92915050565b60006020828403121561372b5761372a613141565b5b600061373984828501613700565b91505092915050565b6000806040838503121561375957613758613141565b5b60006137678582860161338e565b925050602061377885828601613700565b9150509250929050565b6000819050919050565b61379581613782565b82525050565b600063ffffffff82169050919050565b6137b48161379b565b82525050565b600067ffffffffffffffff82169050919050565b6137d7816137ba565b82525050565b600060a0820190506137f2600083018861378c565b6137ff60208301876137ab565b61380c60408301866137ce565b61381960608301856137ce565b61382660808301846137ce565b9695505050505050565b600080fd5b600060c0828403121561384b5761384a613830565b5b81905092915050565b60008060e0838503121561386b5761386a613141565b5b6000613879858286016132d9565b925050602061388a85828601613835565b9150509250929050565b6000806000806000608086880312156138b0576138af613141565b5b60006138be888289016132d9565b95505060206138cf8882890161338e565b94505060406138e0888289016132d9565b935050606086013567ffffffffffffffff81111561390157613900613146565b5b61390d88828901613646565b92509250509295509295909350565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6139598261324c565b810181811067ffffffffffffffff8211171561397857613977613921565b5b80604052505050565b600061398b613137565b90506139978282613950565b919050565b600067ffffffffffffffff8211156139b7576139b6613921565b5b6139c08261324c565b9050602081019050919050565b82818337600083830152505050565b60006139ef6139ea8461399c565b613981565b905082815260208101848484011115613a0b57613a0a61391c565b5b613a168482856139cd565b509392505050565b600082601f830112613a3357613a3261347a565b5b8135613a438482602086016139dc565b91505092915050565b60008060008060808587031215613a6657613a65613141565b5b6000613a748782880161338e565b9450506020613a858782880161338e565b9350506040613a96878288016132d9565b925050606085013567ffffffffffffffff811115613ab757613ab6613146565b5b613ac387828801613a1e565b91505092959194509250565b60008060408385031215613ae657613ae5613141565b5b6000613af48582860161338e565b9250506020613b058582860161338e565b9150509250929050565b600060c082019050613b246000830189613423565b613b3160208301886137ab565b613b3e60408301876137ab565b613b4b60608301866137ce565b613b5860808301856137ce565b613b6560a08301846137ce565b979650505050505050565b600060a08284031215613b8657613b85613830565b5b81905092915050565b60008060c08385031215613ba657613ba5613141565b5b6000613bb4858286016132d9565b9250506020613bc585828601613b70565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613c1657607f821691505b602082108103613c2957613c28613bcf565b5b50919050565b6000613c4a613c45613c40846137ba565b6135cc565b6132b8565b9050919050565b613c5a81613c2f565b82525050565b6000604082019050613c756000830185613c51565b613c826020830184613c51565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613cc3826132b8565b9150613cce836132b8565b9250828201905080821115613ce657613ce5613c89565b5b92915050565b6000613cf7826137ba565b9150613d02836137ba565b9250828201905067ffffffffffffffff811115613d2257613d21613c89565b5b92915050565b6000613d33826132b8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613d6557613d64613c89565b5b600182019050919050565b6000819050919050565b6000613d95613d90613d8b84613d70565b6135cc565b6132b8565b9050919050565b613da581613d7a565b82525050565b50565b6000613dbb600083613211565b9150613dc682613dab565b600082019050919050565b600060a082019050613de66000830187613423565b613df36020830186613423565b613e006040830185613d9c565b613e0d60608301846131dc565b8181036080830152613e1e81613dae565b905095945050505050565b6000608082019050613e3e6000830187613423565b613e4b60208301866131dc565b613e586040830185613423565b613e656060830184613c51565b95945050505050565b6000606082019050613e83600083018661334d565b613e906020830185613423565b613e9d604083018461334d565b949350505050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613f127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613ed5565b613f1c8683613ed5565b95508019841693508086168417925050509392505050565b6000613f4f613f4a613f45846132b8565b6135cc565b6132b8565b9050919050565b6000819050919050565b613f6983613f34565b613f7d613f7582613f56565b848454613ee2565b825550505050565b600090565b613f92613f85565b613f9d818484613f60565b505050565b5b81811015613fc157613fb6600082613f8a565b600181019050613fa3565b5050565b601f82111561400657613fd781613eb0565b613fe084613ec5565b81016020851015613fef578190505b614003613ffb85613ec5565b830182613fa2565b50505b505050565b600082821c905092915050565b60006140296000198460080261400b565b1980831691505092915050565b60006140428383614018565b9150826002028217905092915050565b61405c8383613ea5565b67ffffffffffffffff81111561407557614074613921565b5b61407f8254613bfe565b61408a828285613fc5565b6000601f8311600181146140b957600084156140a7578287013590505b6140b18582614036565b865550614119565b601f1984166140c786613eb0565b60005b828110156140ef578489013582556001820191506020850194506020810190506140ca565b8683101561410c5784890135614108601f891682614018565b8355505b6001600288020188555050505b50505050505050565b6000819050919050565b600061414761414261413d84614122565b6135cc565b6132b8565b9050919050565b6141578161412c565b82525050565b6000604082019050614172600083018561414e565b61417f6020830184613423565b9392505050565b60008135614193816132c2565b80915050919050565b60008160001b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141d58461419c565b9350801983169250808416831791505092915050565b6141f482613f34565b61420761420082613f56565b83546141a9565b8255505050565b6142178161379b565b811461422257600080fd5b50565b600081356142328161420e565b80915050919050565b600063ffffffff61424b8461419c565b9350801983169250808416831791505092915050565b600061427c6142776142728461379b565b6135cc565b61379b565b9050919050565b6000819050919050565b61429682614261565b6142a96142a282614283565b835461423b565b8255505050565b60008160201b9050919050565b600067ffffffff000000006142d1846142b0565b9350801983169250808416831791505092915050565b6142f082614261565b6143036142fc82614283565b83546142bd565b8255505050565b614313816137ba565b811461431e57600080fd5b50565b6000813561432e8161430a565b80915050919050565b60008160401b9050919050565b60006fffffffffffffffff000000000000000061436084614337565b9350801983169250808416831791505092915050565b600061439161438c614387846137ba565b6135cc565b6137ba565b9050919050565b6000819050919050565b6143ab82614376565b6143be6143b782614398565b8354614344565b8255505050565b60008160801b9050919050565b600077ffffffffffffffff000000000000000000000000000000006143f6846143c5565b9350801983169250808416831791505092915050565b61441582614376565b61442861442182614398565b83546143d2565b8255505050565b60008160c01b9050919050565b60007fffffffffffffffff0000000000000000000000000000000000000000000000006144688461442f565b9350801983169250808416831791505092915050565b61448782614376565b61449a61449382614398565b835461443c565b8255505050565b6000810160008301806144b381614186565b90506144bf81846141eb565b5050506001810160208301806144d481614225565b90506144e0818461428d565b5050506001810160408301806144f581614225565b905061450181846142e7565b50505060018101606083018061451681614321565b905061452281846143a2565b50505060018101608083018061453781614321565b9050614543818461440c565b5050506001810160a083018061455881614321565b9050614564818461447e565b5050505050565b61457582826144a1565b5050565b6000614584826132b8565b915061458f836132b8565b925082820261459d816132b8565b915082820484148315176145b4576145b3613c89565b5b5092915050565b60006145c78385613211565b93506145d48385846139cd565b6145dd8361324c565b840190509392505050565b600060a0820190506145fd6000830189613423565b61460a6020830188613423565b6146176040830187613423565b61462460608301866131dc565b81810360808301526146378184866145bb565b9050979650505050505050565b600081905092915050565b600061465a82613206565b6146648185614644565b9350614674818560208601613222565b80840191505092915050565b600061468c828561464f565b9150614698828461464f565b91508190509392505050565b6146ad81613782565b81146146b857600080fd5b50565b600081356146c8816146a4565b80915050919050565b60006146dc82613782565b9050919050565b60008160001c9050919050565b60006146fb826146e3565b9050919050565b61470b826146d1565b61471e614717826146f0565b83546141a9565b8255505050565b60006bffffffffffffffff0000000061473d846142b0565b9350801983169250808416831791505092915050565b61475c82614376565b61476f61476882614398565b8354614725565b8255505050565b60008160601b9050919050565b600073ffffffffffffffff0000000000000000000000006147a384614776565b9350801983169250808416831791505092915050565b6147c282614376565b6147d56147ce82614398565b8354614783565b8255505050565b60008160a01b9050919050565b60007bffffffffffffffff0000000000000000000000000000000000000000614811846147dc565b9350801983169250808416831791505092915050565b61483082614376565b61484361483c82614398565b83546147e9565b8255505050565b60008101600083018061485c816146bb565b90506148688184614702565b50505060018101602083018061487d81614225565b9050614889818461428d565b50505060018101604083018061489e81614321565b90506148aa8184614753565b5050506001810160608301806148bf81614321565b90506148cb81846147b9565b5050506001810160808301806148e081614321565b90506148ec8184614827565b5050505050565b6148fd828261484a565b5050565b6000604082019050614916600083018561334d565b6149236020830184613423565b9392505050565b6000819050919050565b61494561494082613782565b61492a565b82525050565b60006149578284614934565b60208201915081905092915050565b7f5472616e73666572206e6f7420656e61626c6564000000000000000000000000600082015250565b600061499c601483613211565b91506149a782614966565b602082019050919050565b600060208201905081810360008301526149cb8161498f565b9050919050565b60006060820190506149e7600083018661334d565b6149f4602083018561334d565b614a016040830184613423565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000614a3082614a09565b614a3a8185614a14565b9350614a4a818560208601613222565b614a538161324c565b840191505092915050565b6000608082019050614a73600083018761334d565b614a80602083018661334d565b614a8d6040830185613423565b8181036060830152614a9f8184614a25565b905095945050505050565b600081519050614ab981613177565b92915050565b600060208284031215614ad557614ad4613141565b5b6000614ae384828501614aaa565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050614b2a816136e9565b92915050565b600060208284031215614b4657614b45613141565b5b6000614b5484828501614b1b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b6000614ba282614a09565b614bac8185614b8c565b9350614bbc818560208601613222565b80840191505092915050565b6000614bd48284614b97565b91508190509291505056fea2646970667358221220a203e6ca8aa3037e5f73d18ab47301e47bde30851559e09c3f1b867078f0b0c164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x6E3BBB13330102989AC110163E4C649D0BB88777 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5361 CODESIZE SUB DUP1 PUSH3 0x5361 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x8C SWAP2 SWAP1 PUSH3 0x366 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B4950204C6963656E7365000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B49504E4F444500000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x10A SWAP2 SWAP1 PUSH3 0x627 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x11C SWAP2 SWAP1 PUSH3 0x627 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x194 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x18B SWAP2 SWAP1 PUSH3 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1A5 DUP2 PUSH3 0x236 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x68747470733A2F2F6E6F64652D6E66742E6B69702E70726F2F00000000000000 DUP2 MSTORE POP PUSH1 0xF SWAP1 DUP2 PUSH3 0x22D SWAP2 SWAP1 PUSH3 0x627 JUMP JUMPDEST POP POP POP PUSH3 0x73C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x32E DUP3 PUSH3 0x301 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x340 DUP2 PUSH3 0x321 JUMP JUMPDEST DUP2 EQ PUSH3 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x360 DUP2 PUSH3 0x335 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x380 JUMPI PUSH3 0x37F PUSH3 0x2FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x390 DUP6 DUP3 DUP7 ADD PUSH3 0x34F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x3A3 DUP6 DUP3 DUP7 ADD PUSH3 0x34F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x42F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x445 JUMPI PUSH3 0x444 PUSH3 0x3E7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x4AF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x470 JUMP JUMPDEST PUSH3 0x4BB DUP7 DUP4 PUSH3 0x470 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x508 PUSH3 0x502 PUSH3 0x4FC DUP5 PUSH3 0x4D3 JUMP JUMPDEST PUSH3 0x4DD JUMP JUMPDEST PUSH3 0x4D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x524 DUP4 PUSH3 0x4E7 JUMP JUMPDEST PUSH3 0x53C PUSH3 0x533 DUP3 PUSH3 0x50F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x47D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x553 PUSH3 0x544 JUMP JUMPDEST PUSH3 0x560 DUP2 DUP5 DUP5 PUSH3 0x519 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x588 JUMPI PUSH3 0x57C PUSH1 0x0 DUP3 PUSH3 0x549 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x566 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x5D7 JUMPI PUSH3 0x5A1 DUP2 PUSH3 0x44B JUMP JUMPDEST PUSH3 0x5AC DUP5 PUSH3 0x460 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x5BC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x5D4 PUSH3 0x5CB DUP6 PUSH3 0x460 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x565 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5FC PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x5DC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x617 DUP4 DUP4 PUSH3 0x5E9 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x632 DUP3 PUSH3 0x3AD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x64E JUMPI PUSH3 0x64D PUSH3 0x3B8 JUMP JUMPDEST JUMPDEST PUSH3 0x65A DUP3 SLOAD PUSH3 0x416 JUMP JUMPDEST PUSH3 0x667 DUP3 DUP3 DUP6 PUSH3 0x58C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x69F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x68A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x696 DUP6 DUP3 PUSH3 0x609 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x706 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x6AF DUP7 PUSH3 0x44B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x6D9 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6B2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x6F9 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x6F5 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x5E9 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x719 DUP2 PUSH3 0x321 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x736 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x70E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4C15 DUP1 PUSH3 0x74C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C0360EB GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xACB889EE GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0xF1CE5FE0 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x633 JUMPI DUP1 PUSH4 0xFCF9E1F8 EQ PUSH2 0x64F JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xACB889EE EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xAF3A19C7 EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xB8240540 EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x582 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x9FE9F623 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA4532FB9 EQ PUSH2 0x4F8 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x484 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x3013CE29 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x4CD412D5 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x4CD412D5 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x6A326AB1 EQ PUSH2 0x410 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x33D9F1FA EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x378077A8 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x38A JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x1ACA45A7 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x1ACA45A7 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x1BB08048 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x1D68E8CE EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x302 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x27E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x31A3 JUMP JUMPDEST PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x31EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x33E3 JUMP JUMPDEST PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x344D JUMP JUMPDEST PUSH2 0x836 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x34DF JUMP JUMPDEST PUSH2 0x8E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST PUSH2 0xE32 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x362B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x33E3 JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x31EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x344D JUMP JUMPDEST PUSH2 0x1045 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x434 PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x464 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x344D JUMP JUMPDEST PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x482 PUSH2 0x123F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48C PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AA PUSH2 0x127D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x3715 JUMP JUMPDEST PUSH2 0x130F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x3742 JUMP JUMPDEST PUSH2 0x1334 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x512 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x523 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x546 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x3854 JUMP JUMPDEST PUSH2 0x13CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x550 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x3894 JUMP JUMPDEST PUSH2 0x1455 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x3A4C JUMP JUMPDEST PUSH2 0x1A56 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x3ACF JUMP JUMPDEST PUSH2 0x1ADC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x31EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x618 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62A SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x344D JUMP JUMPDEST PUSH2 0x1C08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST PUSH2 0x1C8E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x736 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x746 JUMPI POP PUSH2 0x745 DUP3 PUSH2 0x1D12 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x1D7C JUMP JUMPDEST POP PUSH2 0x7F4 DUP3 PUSH2 0x1E04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80D DUP3 DUP3 PUSH2 0x808 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x1E49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x83E PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9926074200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 EQ DUP1 PUSH2 0x8F7 JUMPI POP PUSH1 0x26 DUP7 GT JUMPDEST DUP1 PUSH2 0x92E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x939 JUMPI POP PUSH1 0x0 DUP5 EQ JUMPDEST ISZERO PUSH2 0x970 JUMPI PUSH1 0x40 MLOAD PUSH32 0x41ABC80100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xA62 PUSH2 0x1E41 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x60 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0xA8D JUMPI POP DUP2 PUSH1 0x80 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0xAD9 JUMPI DUP2 PUSH1 0x60 ADD MLOAD DUP3 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0xCBAEF56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD0 SWAP3 SWAP2 SWAP1 PUSH2 0x3C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP7 PUSH1 0xC PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST GT DUP1 PUSH2 0xB64 JUMPI POP DUP2 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP7 DUP4 PUSH1 0x40 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xB9B JUMPI PUSH1 0x40 MLOAD PUSH32 0xDAD4F32900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA8 DUP9 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x9BDE33900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0xC PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC3E SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0xB PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xC7E SWAP2 SWAP1 PUSH2 0x3CEC JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP7 DUP2 GT PUSH2 0xD58 JUMPI PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCC5 SWAP1 PUSH2 0x3D28 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xCD6 DUP9 PUSH1 0x8 SLOAD PUSH2 0x1FA4 JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB9AD13C0DE1A777020713212854C8C286C0C260F459A4F53AA84A65E3BC0DB2 DUP12 PUSH1 0x8 SLOAD PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD3D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH2 0xD50 SWAP1 PUSH2 0x3D28 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCAB JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5BD7001D995BB594C91E6ABB25DDBEAF9C358906BE6AA0FADB5109F567609931 DUP10 PUSH1 0x1 PUSH1 0xC PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xB PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xE20 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEB8 DUP4 DUP4 PUSH2 0xEB3 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x1FC2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF2E JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF25 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xFC0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xFE0 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP SUB PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BA0191100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0xF SWAP2 DUP3 PUSH2 0x102E SWAP3 SWAP2 SWAP1 PUSH2 0x4052 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103E DUP3 PUSH2 0x1D7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x104D PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9926074200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x1104 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1130 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x117D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1152 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x117D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1160 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1247 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x1251 PUSH1 0x0 PUSH2 0x2063 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x128C SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12B8 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1305 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1305 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1317 PUSH2 0x1E5B JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1346 PUSH2 0x133F PUSH2 0x1E41 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2129 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0x13D4 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 PUSH2 0x13E3 JUMPI POP PUSH1 0x26 DUP3 GT JUMPDEST ISZERO PUSH2 0x1429 JUMPI PUSH1 0x1 PUSH1 0x26 PUSH1 0x40 MLOAD PUSH32 0xD40D76CA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1420 SWAP3 SWAP2 SWAP1 PUSH2 0x415D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 DUP2 PUSH2 0x1449 SWAP2 SWAP1 PUSH2 0x456B JUMP JUMPDEST SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x26 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP6 EQ DUP1 PUSH2 0x1464 JUMPI POP PUSH1 0x26 DUP6 GT JUMPDEST DUP1 PUSH2 0x146F JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST DUP1 PUSH2 0x14A6 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x14DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x41ABC80100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x15F5 PUSH2 0x1E41 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x80 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x1620 JUMPI POP DUP2 PUSH1 0xA0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x166C JUMPI DUP2 PUSH1 0x80 ADD MLOAD DUP3 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0xCBAEF56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1663 SWAP3 SWAP2 SWAP1 PUSH2 0x3C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD SUB PUSH2 0x16AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x1140CF7F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP6 PUSH1 0xD PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1711 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST GT DUP1 PUSH2 0x173F JUMPI POP DUP2 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP6 DUP4 PUSH1 0x60 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x173D SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x1776 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDAD4F32900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0xA PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x17AF SWAP2 SWAP1 PUSH2 0x3CEC JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1835 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP6 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x184E SWAP2 SWAP1 PUSH2 0x4579 JUMP JUMPDEST SWAP1 POP PUSH2 0x18C1 DUP3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2298 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP7 DUP2 GT PUSH2 0x197C JUMPI PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x18E2 SWAP1 PUSH2 0x3D28 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x18F3 DUP9 PUSH1 0x8 SLOAD PUSH2 0x1FA4 JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB9AD13C0DE1A777020713212854C8C286C0C260F459A4F53AA84A65E3BC0DB2 DUP12 PUSH1 0x8 SLOAD DUP9 PUSH1 0x0 ADD MLOAD PUSH1 0x0 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x1961 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x45E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH2 0x1974 SWAP1 PUSH2 0x3D28 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18C8 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5BD7001D995BB594C91E6ABB25DDBEAF9C358906BE6AA0FADB5109F567609931 DUP10 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1A44 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A61 DUP5 DUP5 DUP5 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x1A6D DUP5 DUP5 DUP5 DUP5 PUSH2 0x231A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A7E DUP3 PUSH2 0x1D7C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1A89 PUSH2 0x24D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1AA9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1AD4 JUMP JUMPDEST DUP1 PUSH2 0x1AB3 DUP5 PUSH2 0x2563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AC4 SWAP3 SWAP2 SWAP1 PUSH2 0x4680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x1C10 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C82 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C79 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C8B DUP2 PUSH2 0x2063 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C96 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 PUSH2 0x1CA5 JUMPI POP PUSH1 0x26 DUP3 GT JUMPDEST ISZERO PUSH2 0x1CEB JUMPI PUSH1 0x1 PUSH1 0x26 PUSH1 0x40 MLOAD PUSH32 0xD40D76CA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE2 SWAP3 SWAP2 SWAP1 PUSH2 0x415D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 DUP2 PUSH2 0x1D0B SWAP2 SWAP1 PUSH2 0x48F3 JUMP JUMPDEST SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D88 DUP4 PUSH2 0x2631 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DFB JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF2 SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E56 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x266E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1E63 PUSH2 0x1E41 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E81 PUSH2 0x1253 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EE0 JUMPI PUSH2 0x1EA4 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED7 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EF8 SWAP3 SWAP2 SWAP1 PUSH2 0x4901 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F1E SWAP2 SWAP1 PUSH2 0x494B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1F98 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0xB PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 PUSH2 0x2833 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1FBE DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x284A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1FD0 DUP6 DUP6 DUP6 PUSH2 0x2866 JUMP JUMPDEST SWAP1 POP PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2019 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x204F SWAP1 PUSH2 0x49B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x219A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2191 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x228B SWAP2 SWAP1 PUSH2 0x31EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2314 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x22CD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2A80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x24CB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x235E PUSH2 0x1E41 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2380 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A5E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x23BC JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B9 SWAP2 SWAP1 PUSH2 0x4ABF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2440 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23EC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23F1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2438 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x242F SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x24C9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C0 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF DUP1 SLOAD PUSH2 0x24E0 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x250C SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2559 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x252E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2559 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x253C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2572 DUP5 PUSH2 0x2B17 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2591 JUMPI PUSH2 0x2590 PUSH2 0x3921 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x25C3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2626 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x261A JUMPI PUSH2 0x2619 PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x25D1 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x26A7 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x27DB JUMPI PUSH1 0x0 PUSH2 0x26B7 DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2722 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2735 JUMPI POP PUSH2 0x2733 DUP2 DUP5 PUSH2 0x1ADC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2777 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276E SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x27D9 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2840 DUP6 DUP5 PUSH2 0x2C6A JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2854 DUP4 DUP4 PUSH2 0x2CC0 JUMP JUMPDEST PUSH2 0x2861 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x231A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2872 DUP5 PUSH2 0x2631 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28B4 JUMPI PUSH2 0x28B3 DUP2 DUP5 DUP7 PUSH2 0x2DB9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2945 JUMPI PUSH2 0x28F6 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x266E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29C8 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AAB DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E7D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x2AD0 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2ACE SWAP2 SWAP1 PUSH2 0x4B30 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2B12 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B09 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2B75 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2B6B JUMPI PUSH2 0x2B6A PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2BB2 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2BA8 JUMPI PUSH2 0x2BA7 PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2BE1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2BD7 JUMPI PUSH2 0x2BD6 PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2C0A JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2C00 JUMPI PUSH2 0x2BFF PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2C2F JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2C25 JUMPI PUSH2 0x2C24 PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2C52 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x2C48 JUMPI PUSH2 0x2C47 PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2C61 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2CB5 JUMPI PUSH2 0x2CA0 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2C93 JUMPI PUSH2 0x2C92 PUSH2 0x4B5D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E93 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x2CAD SWAP1 PUSH2 0x3D28 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2C73 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D32 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D29 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D40 DUP4 DUP4 PUSH1 0x0 PUSH2 0x1FC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DB4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DAB SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2DC4 DUP4 DUP4 DUP4 PUSH2 0x2EBE JUMP JUMPDEST PUSH2 0x2E78 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2E39 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E30 SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E6F SWAP3 SWAP2 SWAP1 PUSH2 0x4901 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E8B DUP4 DUP4 PUSH1 0x0 PUSH2 0x2F7F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2EAB JUMPI PUSH2 0x2EA6 DUP3 DUP5 PUSH2 0x304C JUMP JUMPDEST PUSH2 0x2EB6 JUMP JUMPDEST PUSH2 0x2EB5 DUP4 DUP4 PUSH2 0x304C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2F76 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2F37 JUMPI POP PUSH2 0x2F36 DUP5 DUP5 PUSH2 0x1ADC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2F75 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F5D DUP4 PUSH2 0x1E04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x2FC6 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FBD SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x2FEF SWAP2 SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x302C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3031 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3041 DUP7 DUP4 DUP4 PUSH2 0x3063 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x3078 JUMPI PUSH2 0x3073 DUP3 PUSH2 0x30F2 JUMP JUMPDEST PUSH2 0x30EA JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x30A0 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x30E2 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D9 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x30EB JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x3105 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3180 DUP2 PUSH2 0x314B JUMP JUMPDEST DUP2 EQ PUSH2 0x318B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x319D DUP2 PUSH2 0x3177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31B9 JUMPI PUSH2 0x31B8 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31C7 DUP5 DUP3 DUP6 ADD PUSH2 0x318E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31E5 DUP2 PUSH2 0x31D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3200 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3240 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3225 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3268 DUP3 PUSH2 0x3206 JUMP JUMPDEST PUSH2 0x3272 DUP2 DUP6 PUSH2 0x3211 JUMP JUMPDEST SWAP4 POP PUSH2 0x3282 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3222 JUMP JUMPDEST PUSH2 0x328B DUP2 PUSH2 0x324C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32B0 DUP2 DUP5 PUSH2 0x325D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32CB DUP2 PUSH2 0x32B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x32D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32E8 DUP2 PUSH2 0x32C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3304 JUMPI PUSH2 0x3303 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3312 DUP5 DUP3 DUP6 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3346 DUP3 PUSH2 0x331B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3356 DUP2 PUSH2 0x333B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3371 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x334D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3380 DUP2 PUSH2 0x333B JUMP JUMPDEST DUP2 EQ PUSH2 0x338B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x339D DUP2 PUSH2 0x3377 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33BA JUMPI PUSH2 0x33B9 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33C8 DUP6 DUP3 DUP7 ADD PUSH2 0x338E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x33D9 DUP6 DUP3 DUP7 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33FA JUMPI PUSH2 0x33F9 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3408 DUP6 DUP3 DUP7 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3419 DUP6 DUP3 DUP7 ADD PUSH2 0x338E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x342C DUP2 PUSH2 0x32B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3447 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3423 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3463 JUMPI PUSH2 0x3462 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3471 DUP5 DUP3 DUP6 ADD PUSH2 0x338E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x349F JUMPI PUSH2 0x349E PUSH2 0x347A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34BC JUMPI PUSH2 0x34BB PUSH2 0x347F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x34D8 JUMPI PUSH2 0x34D7 PUSH2 0x3484 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x34FC JUMPI PUSH2 0x34FB PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x350A DUP10 DUP3 DUP11 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x351B DUP10 DUP3 DUP11 ADD PUSH2 0x338E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x352C DUP10 DUP3 DUP11 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x353D DUP10 DUP3 DUP11 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x355E JUMPI PUSH2 0x355D PUSH2 0x3146 JUMP JUMPDEST JUMPDEST PUSH2 0x356A DUP10 DUP3 DUP11 ADD PUSH2 0x3489 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3592 JUMPI PUSH2 0x3591 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35A0 DUP7 DUP3 DUP8 ADD PUSH2 0x338E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x35B1 DUP7 DUP3 DUP8 ADD PUSH2 0x338E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x35C2 DUP7 DUP3 DUP8 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F1 PUSH2 0x35EC PUSH2 0x35E7 DUP5 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x331B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3603 DUP3 PUSH2 0x35D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3615 DUP3 PUSH2 0x35F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3625 DUP2 PUSH2 0x360A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3640 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x361C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x365C JUMPI PUSH2 0x365B PUSH2 0x347A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3679 JUMPI PUSH2 0x3678 PUSH2 0x347F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3695 JUMPI PUSH2 0x3694 PUSH2 0x3484 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36B3 JUMPI PUSH2 0x36B2 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36D1 JUMPI PUSH2 0x36D0 PUSH2 0x3146 JUMP JUMPDEST JUMPDEST PUSH2 0x36DD DUP6 DUP3 DUP7 ADD PUSH2 0x3646 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F2 DUP2 PUSH2 0x31D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x36FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x370F DUP2 PUSH2 0x36E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x372B JUMPI PUSH2 0x372A PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3739 DUP5 DUP3 DUP6 ADD PUSH2 0x3700 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3759 JUMPI PUSH2 0x3758 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3767 DUP6 DUP3 DUP7 ADD PUSH2 0x338E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3778 DUP6 DUP3 DUP7 ADD PUSH2 0x3700 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3795 DUP2 PUSH2 0x3782 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37B4 DUP2 PUSH2 0x379B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37D7 DUP2 PUSH2 0x37BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x37F2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x378C JUMP JUMPDEST PUSH2 0x37FF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x37AB JUMP JUMPDEST PUSH2 0x380C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x37CE JUMP JUMPDEST PUSH2 0x3819 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x37CE JUMP JUMPDEST PUSH2 0x3826 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x37CE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x384B JUMPI PUSH2 0x384A PUSH2 0x3830 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x386B JUMPI PUSH2 0x386A PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3879 DUP6 DUP3 DUP7 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x388A DUP6 DUP3 DUP7 ADD PUSH2 0x3835 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x38B0 JUMPI PUSH2 0x38AF PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38BE DUP9 DUP3 DUP10 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x38CF DUP9 DUP3 DUP10 ADD PUSH2 0x338E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x38E0 DUP9 DUP3 DUP10 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3901 JUMPI PUSH2 0x3900 PUSH2 0x3146 JUMP JUMPDEST JUMPDEST PUSH2 0x390D DUP9 DUP3 DUP10 ADD PUSH2 0x3646 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3959 DUP3 PUSH2 0x324C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3978 JUMPI PUSH2 0x3977 PUSH2 0x3921 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x398B PUSH2 0x3137 JUMP JUMPDEST SWAP1 POP PUSH2 0x3997 DUP3 DUP3 PUSH2 0x3950 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x39B7 JUMPI PUSH2 0x39B6 PUSH2 0x3921 JUMP JUMPDEST JUMPDEST PUSH2 0x39C0 DUP3 PUSH2 0x324C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39EF PUSH2 0x39EA DUP5 PUSH2 0x399C JUMP JUMPDEST PUSH2 0x3981 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3A0B JUMPI PUSH2 0x3A0A PUSH2 0x391C JUMP JUMPDEST JUMPDEST PUSH2 0x3A16 DUP5 DUP3 DUP6 PUSH2 0x39CD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A33 JUMPI PUSH2 0x3A32 PUSH2 0x347A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A43 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x39DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3A66 JUMPI PUSH2 0x3A65 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A74 DUP8 DUP3 DUP9 ADD PUSH2 0x338E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3A85 DUP8 DUP3 DUP9 ADD PUSH2 0x338E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3A96 DUP8 DUP3 DUP9 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB7 JUMPI PUSH2 0x3AB6 PUSH2 0x3146 JUMP JUMPDEST JUMPDEST PUSH2 0x3AC3 DUP8 DUP3 DUP9 ADD PUSH2 0x3A1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AE6 JUMPI PUSH2 0x3AE5 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AF4 DUP6 DUP3 DUP7 ADD PUSH2 0x338E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B05 DUP6 DUP3 DUP7 ADD PUSH2 0x338E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3B24 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x3B31 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x37AB JUMP JUMPDEST PUSH2 0x3B3E PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x37AB JUMP JUMPDEST PUSH2 0x3B4B PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x37CE JUMP JUMPDEST PUSH2 0x3B58 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x37CE JUMP JUMPDEST PUSH2 0x3B65 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x37CE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B86 JUMPI PUSH2 0x3B85 PUSH2 0x3830 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BA6 JUMPI PUSH2 0x3BA5 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BB4 DUP6 DUP3 DUP7 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3BC5 DUP6 DUP3 DUP7 ADD PUSH2 0x3B70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3C16 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3C29 JUMPI PUSH2 0x3C28 PUSH2 0x3BCF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C4A PUSH2 0x3C45 PUSH2 0x3C40 DUP5 PUSH2 0x37BA JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x32B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C5A DUP2 PUSH2 0x3C2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C75 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C51 JUMP JUMPDEST PUSH2 0x3C82 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3CC3 DUP3 PUSH2 0x32B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CCE DUP4 PUSH2 0x32B8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3CE6 JUMPI PUSH2 0x3CE5 PUSH2 0x3C89 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CF7 DUP3 PUSH2 0x37BA JUMP JUMPDEST SWAP2 POP PUSH2 0x3D02 DUP4 PUSH2 0x37BA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D22 JUMPI PUSH2 0x3D21 PUSH2 0x3C89 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D33 DUP3 PUSH2 0x32B8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3D65 JUMPI PUSH2 0x3D64 PUSH2 0x3C89 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D95 PUSH2 0x3D90 PUSH2 0x3D8B DUP5 PUSH2 0x3D70 JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x32B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DA5 DUP2 PUSH2 0x3D7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DBB PUSH1 0x0 DUP4 PUSH2 0x3211 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DC6 DUP3 PUSH2 0x3DAB JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3DE6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x3DF3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x3E00 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3D9C JUMP JUMPDEST PUSH2 0x3E0D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x31DC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3E1E DUP2 PUSH2 0x3DAE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3E3E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x3E4B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x31DC JUMP JUMPDEST PUSH2 0x3E58 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x3E65 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3C51 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3E83 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x3E90 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x3E9D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x334D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3F12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3ED5 JUMP JUMPDEST PUSH2 0x3F1C DUP7 DUP4 PUSH2 0x3ED5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F4F PUSH2 0x3F4A PUSH2 0x3F45 DUP5 PUSH2 0x32B8 JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x32B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F69 DUP4 PUSH2 0x3F34 JUMP JUMPDEST PUSH2 0x3F7D PUSH2 0x3F75 DUP3 PUSH2 0x3F56 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3EE2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3F92 PUSH2 0x3F85 JUMP JUMPDEST PUSH2 0x3F9D DUP2 DUP5 DUP5 PUSH2 0x3F60 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3FC1 JUMPI PUSH2 0x3FB6 PUSH1 0x0 DUP3 PUSH2 0x3F8A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3FA3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4006 JUMPI PUSH2 0x3FD7 DUP2 PUSH2 0x3EB0 JUMP JUMPDEST PUSH2 0x3FE0 DUP5 PUSH2 0x3EC5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3FEF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4003 PUSH2 0x3FFB DUP6 PUSH2 0x3EC5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3FA2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4029 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x400B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4042 DUP4 DUP4 PUSH2 0x4018 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x405C DUP4 DUP4 PUSH2 0x3EA5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4075 JUMPI PUSH2 0x4074 PUSH2 0x3921 JUMP JUMPDEST JUMPDEST PUSH2 0x407F DUP3 SLOAD PUSH2 0x3BFE JUMP JUMPDEST PUSH2 0x408A DUP3 DUP3 DUP6 PUSH2 0x3FC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x40B9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x40A7 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x40B1 DUP6 DUP3 PUSH2 0x4036 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4119 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x40C7 DUP7 PUSH2 0x3EB0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x40EF JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x40CA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x410C JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x4108 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4018 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4147 PUSH2 0x4142 PUSH2 0x413D DUP5 PUSH2 0x4122 JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x32B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4157 DUP2 PUSH2 0x412C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4172 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x414E JUMP JUMPDEST PUSH2 0x417F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3423 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD PUSH2 0x4193 DUP2 PUSH2 0x32C2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x41D5 DUP5 PUSH2 0x419C JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x41F4 DUP3 PUSH2 0x3F34 JUMP JUMPDEST PUSH2 0x4207 PUSH2 0x4200 DUP3 PUSH2 0x3F56 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x41A9 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x4217 DUP2 PUSH2 0x379B JUMP JUMPDEST DUP2 EQ PUSH2 0x4222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD PUSH2 0x4232 DUP2 PUSH2 0x420E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x424B DUP5 PUSH2 0x419C JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x427C PUSH2 0x4277 PUSH2 0x4272 DUP5 PUSH2 0x379B JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x379B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4296 DUP3 PUSH2 0x4261 JUMP JUMPDEST PUSH2 0x42A9 PUSH2 0x42A2 DUP3 PUSH2 0x4283 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x423B JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFF00000000 PUSH2 0x42D1 DUP5 PUSH2 0x42B0 JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42F0 DUP3 PUSH2 0x4261 JUMP JUMPDEST PUSH2 0x4303 PUSH2 0x42FC DUP3 PUSH2 0x4283 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x42BD JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x4313 DUP2 PUSH2 0x37BA JUMP JUMPDEST DUP2 EQ PUSH2 0x431E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD PUSH2 0x432E DUP2 PUSH2 0x430A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 PUSH2 0x4360 DUP5 PUSH2 0x4337 JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4391 PUSH2 0x438C PUSH2 0x4387 DUP5 PUSH2 0x37BA JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x37BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43AB DUP3 PUSH2 0x4376 JUMP JUMPDEST PUSH2 0x43BE PUSH2 0x43B7 DUP3 PUSH2 0x4398 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x4344 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x80 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFF00000000000000000000000000000000 PUSH2 0x43F6 DUP5 PUSH2 0x43C5 JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4415 DUP3 PUSH2 0x4376 JUMP JUMPDEST PUSH2 0x4428 PUSH2 0x4421 DUP3 PUSH2 0x4398 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x43D2 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xC0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 PUSH2 0x4468 DUP5 PUSH2 0x442F JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4487 DUP3 PUSH2 0x4376 JUMP JUMPDEST PUSH2 0x449A PUSH2 0x4493 DUP3 PUSH2 0x4398 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x443C JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ADD PUSH1 0x0 DUP4 ADD DUP1 PUSH2 0x44B3 DUP2 PUSH2 0x4186 JUMP JUMPDEST SWAP1 POP PUSH2 0x44BF DUP2 DUP5 PUSH2 0x41EB JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x20 DUP4 ADD DUP1 PUSH2 0x44D4 DUP2 PUSH2 0x4225 JUMP JUMPDEST SWAP1 POP PUSH2 0x44E0 DUP2 DUP5 PUSH2 0x428D JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x40 DUP4 ADD DUP1 PUSH2 0x44F5 DUP2 PUSH2 0x4225 JUMP JUMPDEST SWAP1 POP PUSH2 0x4501 DUP2 DUP5 PUSH2 0x42E7 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x60 DUP4 ADD DUP1 PUSH2 0x4516 DUP2 PUSH2 0x4321 JUMP JUMPDEST SWAP1 POP PUSH2 0x4522 DUP2 DUP5 PUSH2 0x43A2 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x80 DUP4 ADD DUP1 PUSH2 0x4537 DUP2 PUSH2 0x4321 JUMP JUMPDEST SWAP1 POP PUSH2 0x4543 DUP2 DUP5 PUSH2 0x440C JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0xA0 DUP4 ADD DUP1 PUSH2 0x4558 DUP2 PUSH2 0x4321 JUMP JUMPDEST SWAP1 POP PUSH2 0x4564 DUP2 DUP5 PUSH2 0x447E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4575 DUP3 DUP3 PUSH2 0x44A1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4584 DUP3 PUSH2 0x32B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x458F DUP4 PUSH2 0x32B8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x459D DUP2 PUSH2 0x32B8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x45B4 JUMPI PUSH2 0x45B3 PUSH2 0x3C89 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45C7 DUP4 DUP6 PUSH2 0x3211 JUMP JUMPDEST SWAP4 POP PUSH2 0x45D4 DUP4 DUP6 DUP5 PUSH2 0x39CD JUMP JUMPDEST PUSH2 0x45DD DUP4 PUSH2 0x324C JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x45FD PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x460A PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x4617 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x4624 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x31DC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x4637 DUP2 DUP5 DUP7 PUSH2 0x45BB JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x465A DUP3 PUSH2 0x3206 JUMP JUMPDEST PUSH2 0x4664 DUP2 DUP6 PUSH2 0x4644 JUMP JUMPDEST SWAP4 POP PUSH2 0x4674 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3222 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468C DUP3 DUP6 PUSH2 0x464F JUMP JUMPDEST SWAP2 POP PUSH2 0x4698 DUP3 DUP5 PUSH2 0x464F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x46AD DUP2 PUSH2 0x3782 JUMP JUMPDEST DUP2 EQ PUSH2 0x46B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD PUSH2 0x46C8 DUP2 PUSH2 0x46A4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46DC DUP3 PUSH2 0x3782 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46FB DUP3 PUSH2 0x46E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x470B DUP3 PUSH2 0x46D1 JUMP JUMPDEST PUSH2 0x471E PUSH2 0x4717 DUP3 PUSH2 0x46F0 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x41A9 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFF00000000 PUSH2 0x473D DUP5 PUSH2 0x42B0 JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x475C DUP3 PUSH2 0x4376 JUMP JUMPDEST PUSH2 0x476F PUSH2 0x4768 DUP3 PUSH2 0x4398 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x4725 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFF000000000000000000000000 PUSH2 0x47A3 DUP5 PUSH2 0x4776 JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47C2 DUP3 PUSH2 0x4376 JUMP JUMPDEST PUSH2 0x47D5 PUSH2 0x47CE DUP3 PUSH2 0x4398 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x4783 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH2 0x4811 DUP5 PUSH2 0x47DC JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4830 DUP3 PUSH2 0x4376 JUMP JUMPDEST PUSH2 0x4843 PUSH2 0x483C DUP3 PUSH2 0x4398 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x47E9 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ADD PUSH1 0x0 DUP4 ADD DUP1 PUSH2 0x485C DUP2 PUSH2 0x46BB JUMP JUMPDEST SWAP1 POP PUSH2 0x4868 DUP2 DUP5 PUSH2 0x4702 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x20 DUP4 ADD DUP1 PUSH2 0x487D DUP2 PUSH2 0x4225 JUMP JUMPDEST SWAP1 POP PUSH2 0x4889 DUP2 DUP5 PUSH2 0x428D JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x40 DUP4 ADD DUP1 PUSH2 0x489E DUP2 PUSH2 0x4321 JUMP JUMPDEST SWAP1 POP PUSH2 0x48AA DUP2 DUP5 PUSH2 0x4753 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x60 DUP4 ADD DUP1 PUSH2 0x48BF DUP2 PUSH2 0x4321 JUMP JUMPDEST SWAP1 POP PUSH2 0x48CB DUP2 DUP5 PUSH2 0x47B9 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x80 DUP4 ADD DUP1 PUSH2 0x48E0 DUP2 PUSH2 0x4321 JUMP JUMPDEST SWAP1 POP PUSH2 0x48EC DUP2 DUP5 PUSH2 0x4827 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x48FD DUP3 DUP3 PUSH2 0x484A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4916 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x4923 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3423 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4945 PUSH2 0x4940 DUP3 PUSH2 0x3782 JUMP JUMPDEST PUSH2 0x492A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4957 DUP3 DUP5 PUSH2 0x4934 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206E6F7420656E61626C6564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499C PUSH1 0x14 DUP4 PUSH2 0x3211 JUMP JUMPDEST SWAP2 POP PUSH2 0x49A7 DUP3 PUSH2 0x4966 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49CB DUP2 PUSH2 0x498F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x49E7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x49F4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x4A01 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3423 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A30 DUP3 PUSH2 0x4A09 JUMP JUMPDEST PUSH2 0x4A3A DUP2 DUP6 PUSH2 0x4A14 JUMP JUMPDEST SWAP4 POP PUSH2 0x4A4A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3222 JUMP JUMPDEST PUSH2 0x4A53 DUP2 PUSH2 0x324C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4A73 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x4A80 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x4A8D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3423 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4A9F DUP2 DUP5 PUSH2 0x4A25 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4AB9 DUP2 PUSH2 0x3177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD5 JUMPI PUSH2 0x4AD4 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4AE3 DUP5 DUP3 DUP6 ADD PUSH2 0x4AAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4B2A DUP2 PUSH2 0x36E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B46 JUMPI PUSH2 0x4B45 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B54 DUP5 DUP3 DUP6 ADD PUSH2 0x4B1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA2 DUP3 PUSH2 0x4A09 JUMP JUMPDEST PUSH2 0x4BAC DUP2 DUP6 PUSH2 0x4B8C JUMP JUMPDEST SWAP4 POP PUSH2 0x4BBC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3222 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD4 DUP3 DUP5 PUSH2 0x4B97 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 SUB 0xE6 0xCA DUP11 LOG3 SUB PUSH31 0x5F73D18AB47301E47BDE30851559E09C3F1B867078F0B0C164736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"615:12151:19:-:0;;;1259:42;1227:74;;;;;;;;;;;;;;;;;;;;2396:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2516:12;1381:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2562:13:19::2;2540:12;;:36;;;;;;;;;;;;;;;;;;2586:37;;;;;;;;;;;;;;;;::::0;:7:::2;:37;;;;;;:::i;:::-;;2396:234:::0;;615:12151;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:21:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;615:12151:19:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@KIPFundAddress_4742":{"entryPoint":3967,"id":4742,"parameterSlots":0,"returnSlots":0},"@MAX_TIER_4745":{"entryPoint":5200,"id":4745,"parameterSlots":0,"returnSlots":0},"@_approve_2041":{"entryPoint":7753,"id":2041,"parameterSlots":3,"returnSlots":0},"@_approve_2107":{"entryPoint":9838,"id":2107,"parameterSlots":4,"returnSlots":0},"@_baseURI_5399":{"entryPoint":9425,"id":5399,"parameterSlots":0,"returnSlots":1},"@_callOptionalReturn_1179":{"entryPoint":10880,"id":1179,"parameterSlots":2,"returnSlots":0},"@_checkAuthorized_1689":{"entryPoint":11705,"id":1689,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_2237":{"entryPoint":8986,"id":2237,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":7771,"id":84,"parameterSlots":0,"returnSlots":0},"@_efficientHash_3475":{"entryPoint":12364,"id":3475,"parameterSlots":2,"returnSlots":1},"@_getApproved_1616":{"entryPoint":7684,"id":1616,"parameterSlots":1,"returnSlots":1},"@_hashPair_3463":{"entryPoint":11923,"id":3463,"parameterSlots":2,"returnSlots":1},"@_isAuthorized_1652":{"entryPoint":11966,"id":1652,"parameterSlots":3,"returnSlots":1},"@_mint_1845":{"entryPoint":11456,"id":1845,"parameterSlots":2,"returnSlots":0},"@_msgSender_2666":{"entryPoint":7745,"id":2666,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1603":{"entryPoint":9777,"id":1603,"parameterSlots":1,"returnSlots":1},"@_requireOwned_2173":{"entryPoint":7548,"id":2173,"parameterSlots":1,"returnSlots":1},"@_revert_2653":{"entryPoint":12530,"id":2653,"parameterSlots":1,"returnSlots":0},"@_safeMint_1860":{"entryPoint":8100,"id":1860,"parameterSlots":2,"returnSlots":0},"@_safeMint_1886":{"entryPoint":10314,"id":1886,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_2144":{"entryPoint":8489,"id":2144,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":8291,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_1795":{"entryPoint":10342,"id":1795,"parameterSlots":3,"returnSlots":1},"@_update_5390":{"entryPoint":8130,"id":5390,"parameterSlots":3,"returnSlots":1},"@_validateProof_5352":{"entryPoint":7906,"id":5352,"parameterSlots":5,"returnSlots":1},"@approve_1450":{"entryPoint":2043,"id":1450,"parameterSlots":2,"returnSlots":0},"@balanceOf_1358":{"entryPoint":4485,"id":1358,"parameterSlots":1,"returnSlots":1},"@baseURI_4771":{"entryPoint":4343,"id":4771,"parameterSlots":0,"returnSlots":0},"@functionCallWithValue_2521":{"entryPoint":12159,"id":2521,"parameterSlots":3,"returnSlots":1},"@functionCall_2475":{"entryPoint":11901,"id":2475,"parameterSlots":2,"returnSlots":1},"@getApproved_1467":{"entryPoint":2015,"id":1467,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1500":{"entryPoint":6876,"id":1500,"parameterSlots":2,"returnSlots":1},"@log10_4386":{"entryPoint":11031,"id":4386,"parameterSlots":1,"returnSlots":1},"@name_1380":{"entryPoint":1869,"id":1380,"parameterSlots":0,"returnSlots":1},"@ownerOf_1371":{"entryPoint":4147,"id":1371,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":4691,"id":67,"parameterSlots":0,"returnSlots":1},"@paymentToken_4737":{"entryPoint":3892,"id":4737,"parameterSlots":0,"returnSlots":0},"@processProof_3027":{"entryPoint":11370,"id":3027,"parameterSlots":2,"returnSlots":1},"@publicMint_4999":{"entryPoint":5205,"id":4999,"parameterSlots":5,"returnSlots":0},"@publicSaleConfigs_4750":{"entryPoint":7024,"id":4750,"parameterSlots":0,"returnSlots":0},"@publicUserMinted_4767":{"entryPoint":3930,"id":4767,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":4671,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1016":{"entryPoint":8856,"id":1016,"parameterSlots":4,"returnSlots":0},"@safeTransferFrom_1564":{"entryPoint":4005,"id":1564,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1590":{"entryPoint":6742,"id":1590,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1483":{"entryPoint":4916,"id":1483,"parameterSlots":2,"returnSlots":0},"@setBaseURI_5187":{"entryPoint":4056,"id":5187,"parameterSlots":2,"returnSlots":0},"@setKIPFundAddress_5285":{"entryPoint":2102,"id":5285,"parameterSlots":1,"returnSlots":0},"@setPaymentToken_5310":{"entryPoint":4165,"id":5310,"parameterSlots":1,"returnSlots":0},"@setPublicSaleConfigs_5218":{"entryPoint":5068,"id":5218,"parameterSlots":2,"returnSlots":0},"@setTransferEnabled_5262":{"entryPoint":4879,"id":5262,"parameterSlots":1,"returnSlots":0},"@setWhitelistSaleConfigs_5249":{"entryPoint":7310,"id":5249,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1330":{"entryPoint":1643,"id":1330,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3499":{"entryPoint":7442,"id":3499,"parameterSlots":1,"returnSlots":1},"@symbol_1389":{"entryPoint":4733,"id":1389,"parameterSlots":0,"returnSlots":1},"@toString_2752":{"entryPoint":9571,"id":2752,"parameterSlots":1,"returnSlots":1},"@tokenURI_1425":{"entryPoint":6771,"id":1425,"parameterSlots":1,"returnSlots":1},"@transferEnabled_4769":{"entryPoint":4037,"id":4769,"parameterSlots":0,"returnSlots":0},"@transferFrom_1546":{"entryPoint":3634,"id":1546,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":7176,"id":126,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_2613":{"entryPoint":12387,"id":2613,"parameterSlots":3,"returnSlots":1},"@verify_2966":{"entryPoint":10291,"id":2966,"parameterSlots":3,"returnSlots":1},"@whitelistMint_5163":{"entryPoint":2280,"id":5163,"parameterSlots":6,"returnSlots":0},"@whitelistSaleConfigs_4755":{"entryPoint":4938,"id":4755,"parameterSlots":0,"returnSlots":0},"@whitelistUserMinted_4761":{"entryPoint":2065,"id":4761,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":14812,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":13198,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":13449,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool":{"entryPoint":14080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":19227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":12686,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":19114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":14878,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":13894,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_struct$_PublicSale_$4723_calldata_ptr":{"entryPoint":14389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_WhitelistSale_$4734_calldata_ptr":{"entryPoint":15216,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":13017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":15055,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":13689,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":14924,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":14146,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":13219,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":14101,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":19248,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":12707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":19135,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":13980,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":13038,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":13283,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_uint256t_string_calldata_ptr":{"entryPoint":14484,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_addresst_uint256t_uint256t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":13535,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256t_struct$_PublicSale_$4723_calldata_ptr":{"entryPoint":14420,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_struct$_WhitelistSale_$4734_calldata_ptr":{"entryPoint":15247,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":13133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12764,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":14220,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":18740,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":18981,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19351,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack":{"entryPoint":13852,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":15772,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack":{"entryPoint":16718,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":17851,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":12893,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":17999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023_to_t_string_memory_ptr_fromStack":{"entryPoint":18831,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack":{"entryPoint":15790,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":13347,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":14251,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint256_fromStack":{"entryPoint":15441,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":14286,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":18763,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19400,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18048,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":13148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":18898,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":19038,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":18689,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":15982,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":12779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint32_t_uint64_t_uint64_t_uint64__to_t_bytes32_t_uint32_t_uint64_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":14301,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed":{"entryPoint":13867,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16733,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12950,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":13362,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool_t_uint256_t_uint64__to_t_uint256_t_bool_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15913,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_rational_0_by_1_t_bool_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_uint256_t_uint256_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15825,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_string_calldata_ptr__to_t_uint256_t_uint256_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17896,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint32_t_uint32_t_uint64_t_uint64_t_uint64__to_t_uint256_t_uint32_t_uint32_t_uint64_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":15119,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint64_t_uint64__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15456,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":14721,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":12599,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":14748,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":16048,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":18953,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_calldata_ptr":{"entryPoint":16037,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12806,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":18964,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19340,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12817,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":17988,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15544,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":15596,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":17785,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":16325,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":13115,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":12752,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":14210,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":12619,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":15728,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":16674,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":13083,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12984,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":14235,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":14266,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":16290,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_bytes32_to_t_bytes32":{"entryPoint":18129,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$877_to_t_address":{"entryPoint":13834,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":15738,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint256":{"entryPoint":16684,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":13816,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":13782,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":16180,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint32_to_t_uint32":{"entryPoint":16993,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint64_to_t_uint256":{"entryPoint":15407,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint64_to_t_uint64":{"entryPoint":17270,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":16466,"id":null,"parameterSlots":3,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":14797,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":12834,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_t_struct$_PublicSale_$4723_calldata_ptr_to_t_struct$_PublicSale_$4723_storage":{"entryPoint":17569,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_t_struct$_WhitelistSale_$4734_calldata_ptr_to_t_struct$_WhitelistSale_$4734_storage":{"entryPoint":18506,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":16069,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":15358,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":16438,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":14672,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":13772,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":15656,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":18730,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":16408,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x00":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":15497,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":19180,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":15311,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":19293,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14625,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_bytes32":{"entryPoint":18160,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_t_uint256":{"entryPoint":16214,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_t_uint32":{"entryPoint":17027,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_t_uint64":{"entryPoint":17304,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_bytes32":{"entryPoint":18107,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_uint256":{"entryPoint":16774,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_uint32":{"entryPoint":16933,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_uint64":{"entryPoint":17185,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":13439,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":13434,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":14384,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":13444,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":14620,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":12614,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12609,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12876,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_0":{"entryPoint":16796,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_128":{"entryPoint":17349,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_160":{"entryPoint":18396,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_192":{"entryPoint":17455,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_32":{"entryPoint":17072,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_64":{"entryPoint":17207,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":18294,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":16085,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":18147,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":16395,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":16266,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023":{"entryPoint":18790,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":15787,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_32_shift_0":{"entryPoint":16809,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_4_shift_0":{"entryPoint":16955,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_4_shift_4":{"entryPoint":17085,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_8_shift_12":{"entryPoint":18307,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_8_shift_16":{"entryPoint":17362,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_8_shift_20":{"entryPoint":18409,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_8_shift_24":{"entryPoint":17468,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_8_shift_4":{"entryPoint":18213,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_8_shift_8":{"entryPoint":17220,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":16098,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_offset_0t_bytes32_to_t_bytes32":{"entryPoint":18178,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_0t_struct$_PublicSale_$4723_calldata_ptr_to_t_struct$_PublicSale_$4723_storage":{"entryPoint":17771,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_0t_struct$_WhitelistSale_$4734_calldata_ptr_to_t_struct$_WhitelistSale_$4734_storage":{"entryPoint":18675,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_0t_uint256_to_t_uint256":{"entryPoint":16875,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_0t_uint32_to_t_uint32":{"entryPoint":17037,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_12t_uint64_to_t_uint64":{"entryPoint":18361,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_16t_uint64_to_t_uint64":{"entryPoint":17420,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_20t_uint64_to_t_uint64":{"entryPoint":18471,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_24t_uint64_to_t_uint64":{"entryPoint":17534,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_4t_uint32_to_t_uint32":{"entryPoint":17127,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_4t_uint64_to_t_uint64":{"entryPoint":18259,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_8t_uint64_to_t_uint64":{"entryPoint":17314,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":16224,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":13175,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":14057,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":18084,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":12663,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12994,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":16910,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":17162,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":16261,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:50689:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"378:105:21","statements":[{"nodeType":"YulAssignment","src":"388:89:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:21","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:21"},"nodeType":"YulFunctionCall","src":"399:78:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:21"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:21","type":""}],"src":"334:149:21"},{"body":{"nodeType":"YulBlock","src":"531:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:21"},"nodeType":"YulFunctionCall","src":"589:12:21"},"nodeType":"YulExpressionStatement","src":"589:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:21"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:21"},"nodeType":"YulFunctionCall","src":"561:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:21"},"nodeType":"YulFunctionCall","src":"551:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:21"},"nodeType":"YulFunctionCall","src":"544:42:21"},"nodeType":"YulIf","src":"541:62:21"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:21","type":""}],"src":"489:120:21"},{"body":{"nodeType":"YulBlock","src":"666:86:21","statements":[{"nodeType":"YulAssignment","src":"676:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:21"},"nodeType":"YulFunctionCall","src":"685:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:21"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:21"},"nodeType":"YulFunctionCall","src":"714:32:21"},"nodeType":"YulExpressionStatement","src":"714:32:21"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:21","type":""}],"src":"615:137:21"},{"body":{"nodeType":"YulBlock","src":"823:262:21","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:21"},"nodeType":"YulFunctionCall","src":"871:79:21"},"nodeType":"YulExpressionStatement","src":"871:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:21"},"nodeType":"YulFunctionCall","src":"840:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:21"},"nodeType":"YulFunctionCall","src":"836:32:21"},"nodeType":"YulIf","src":"833:119:21"},{"nodeType":"YulBlock","src":"962:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:21"},"nodeType":"YulFunctionCall","src":"1036:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:21"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:21"},"nodeType":"YulFunctionCall","src":"1016:52:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:21","type":""}],"src":"758:327:21"},{"body":{"nodeType":"YulBlock","src":"1133:48:21","statements":[{"nodeType":"YulAssignment","src":"1143:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:21"},"nodeType":"YulFunctionCall","src":"1161:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:21"},"nodeType":"YulFunctionCall","src":"1154:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:21","type":""}],"src":"1091:90:21"},{"body":{"nodeType":"YulBlock","src":"1246:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:21"},"nodeType":"YulFunctionCall","src":"1268:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:21"},"nodeType":"YulFunctionCall","src":"1256:34:21"},"nodeType":"YulExpressionStatement","src":"1256:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:21","type":""}],"src":"1187:109:21"},{"body":{"nodeType":"YulBlock","src":"1394:118:21","statements":[{"nodeType":"YulAssignment","src":"1404:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:21"},"nodeType":"YulFunctionCall","src":"1412:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:21"},"nodeType":"YulFunctionCall","src":"1487:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:21"},"nodeType":"YulFunctionCall","src":"1440:65:21"},"nodeType":"YulExpressionStatement","src":"1440:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:21","type":""}],"src":"1302:210:21"},{"body":{"nodeType":"YulBlock","src":"1577:40:21","statements":[{"nodeType":"YulAssignment","src":"1588:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:21"},"nodeType":"YulFunctionCall","src":"1598:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:21","type":""}],"src":"1518:99:21"},{"body":{"nodeType":"YulBlock","src":"1719:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:21"},"nodeType":"YulFunctionCall","src":"1729:19:21"},"nodeType":"YulExpressionStatement","src":"1729:19:21"},{"nodeType":"YulAssignment","src":"1757:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:21"},"nodeType":"YulFunctionCall","src":"1772:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:21","type":""}],"src":"1623:169:21"},{"body":{"nodeType":"YulBlock","src":"1860:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:21"},"nodeType":"YulFunctionCall","src":"1960:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:21"},"nodeType":"YulFunctionCall","src":"1979:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:21"},"nodeType":"YulFunctionCall","src":"1973:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:21"},"nodeType":"YulFunctionCall","src":"1953:39:21"},"nodeType":"YulExpressionStatement","src":"1953:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:21"},"nodeType":"YulFunctionCall","src":"1897:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:21","statements":[{"nodeType":"YulAssignment","src":"1913:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:21"},"nodeType":"YulFunctionCall","src":"1918:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:21","statements":[]},"src":"1889:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:21"},"nodeType":"YulFunctionCall","src":"2018:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:21"},"nodeType":"YulFunctionCall","src":"2011:27:21"},"nodeType":"YulExpressionStatement","src":"2011:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:21","type":""}],"src":"1798:246:21"},{"body":{"nodeType":"YulBlock","src":"2098:54:21","statements":[{"nodeType":"YulAssignment","src":"2108:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:21"},"nodeType":"YulFunctionCall","src":"2122:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:21"},"nodeType":"YulFunctionCall","src":"2138:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:21"},"nodeType":"YulFunctionCall","src":"2118:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:21","type":""}],"src":"2050:102:21"},{"body":{"nodeType":"YulBlock","src":"2250:285:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:21"},"nodeType":"YulFunctionCall","src":"2274:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:21"},"nodeType":"YulFunctionCall","src":"2329:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:21"},"nodeType":"YulFunctionCall","src":"2444:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:21"},"nodeType":"YulFunctionCall","src":"2409:65:21"},"nodeType":"YulExpressionStatement","src":"2409:65:21"},{"nodeType":"YulAssignment","src":"2483:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:21"},"nodeType":"YulFunctionCall","src":"2499:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:21"},"nodeType":"YulFunctionCall","src":"2490:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:21","type":""}],"src":"2158:377:21"},{"body":{"nodeType":"YulBlock","src":"2659:195:21","statements":[{"nodeType":"YulAssignment","src":"2669:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:21"},"nodeType":"YulFunctionCall","src":"2677:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:21"},"nodeType":"YulFunctionCall","src":"2712:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:21"},"nodeType":"YulFunctionCall","src":"2731:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:21"},"nodeType":"YulFunctionCall","src":"2705:47:21"},"nodeType":"YulExpressionStatement","src":"2705:47:21"},{"nodeType":"YulAssignment","src":"2761:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:21"},"nodeType":"YulFunctionCall","src":"2769:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:21","type":""}],"src":"2541:313:21"},{"body":{"nodeType":"YulBlock","src":"2905:32:21","statements":[{"nodeType":"YulAssignment","src":"2915:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:21","type":""}],"src":"2860:77:21"},{"body":{"nodeType":"YulBlock","src":"2986:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:21"},"nodeType":"YulFunctionCall","src":"3045:12:21"},"nodeType":"YulExpressionStatement","src":"3045:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:21"},"nodeType":"YulFunctionCall","src":"3016:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:21"},"nodeType":"YulFunctionCall","src":"3006:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:21"},"nodeType":"YulFunctionCall","src":"2999:43:21"},"nodeType":"YulIf","src":"2996:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:21","type":""}],"src":"2943:122:21"},{"body":{"nodeType":"YulBlock","src":"3123:87:21","statements":[{"nodeType":"YulAssignment","src":"3133:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:21"},"nodeType":"YulFunctionCall","src":"3142:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:21"},"nodeType":"YulFunctionCall","src":"3171:33:21"},"nodeType":"YulExpressionStatement","src":"3171:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:21","type":""}],"src":"3071:139:21"},{"body":{"nodeType":"YulBlock","src":"3282:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:21"},"nodeType":"YulFunctionCall","src":"3330:79:21"},"nodeType":"YulExpressionStatement","src":"3330:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:21"},"nodeType":"YulFunctionCall","src":"3299:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:21"},"nodeType":"YulFunctionCall","src":"3295:32:21"},"nodeType":"YulIf","src":"3292:119:21"},{"nodeType":"YulBlock","src":"3421:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:21"},"nodeType":"YulFunctionCall","src":"3496:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:21"},"nodeType":"YulFunctionCall","src":"3475:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:21","type":""}],"src":"3216:329:21"},{"body":{"nodeType":"YulBlock","src":"3596:81:21","statements":[{"nodeType":"YulAssignment","src":"3606:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:21"},"nodeType":"YulFunctionCall","src":"3617:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:21","type":""}],"src":"3551:126:21"},{"body":{"nodeType":"YulBlock","src":"3728:51:21","statements":[{"nodeType":"YulAssignment","src":"3738:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:21"},"nodeType":"YulFunctionCall","src":"3749:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:21","type":""}],"src":"3683:96:21"},{"body":{"nodeType":"YulBlock","src":"3850:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:21"},"nodeType":"YulFunctionCall","src":"3872:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:21"},"nodeType":"YulFunctionCall","src":"3860:37:21"},"nodeType":"YulExpressionStatement","src":"3860:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:21","type":""}],"src":"3785:118:21"},{"body":{"nodeType":"YulBlock","src":"4007:124:21","statements":[{"nodeType":"YulAssignment","src":"4017:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:21"},"nodeType":"YulFunctionCall","src":"4025:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:21"},"nodeType":"YulFunctionCall","src":"4106:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:21"},"nodeType":"YulFunctionCall","src":"4053:71:21"},"nodeType":"YulExpressionStatement","src":"4053:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:21","type":""}],"src":"3909:222:21"},{"body":{"nodeType":"YulBlock","src":"4180:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:21"},"nodeType":"YulFunctionCall","src":"4239:12:21"},"nodeType":"YulExpressionStatement","src":"4239:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:21"},"nodeType":"YulFunctionCall","src":"4210:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:21"},"nodeType":"YulFunctionCall","src":"4200:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:21"},"nodeType":"YulFunctionCall","src":"4193:43:21"},"nodeType":"YulIf","src":"4190:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:21","type":""}],"src":"4137:122:21"},{"body":{"nodeType":"YulBlock","src":"4317:87:21","statements":[{"nodeType":"YulAssignment","src":"4327:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:21"},"nodeType":"YulFunctionCall","src":"4336:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:21"},"nodeType":"YulFunctionCall","src":"4365:33:21"},"nodeType":"YulExpressionStatement","src":"4365:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:21","type":""}],"src":"4265:139:21"},{"body":{"nodeType":"YulBlock","src":"4493:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:21"},"nodeType":"YulFunctionCall","src":"4541:79:21"},"nodeType":"YulExpressionStatement","src":"4541:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:21"},"nodeType":"YulFunctionCall","src":"4510:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:21"},"nodeType":"YulFunctionCall","src":"4506:32:21"},"nodeType":"YulIf","src":"4503:119:21"},{"nodeType":"YulBlock","src":"4632:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:21"},"nodeType":"YulFunctionCall","src":"4707:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:21"},"nodeType":"YulFunctionCall","src":"4686:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:21"}]}]},{"nodeType":"YulBlock","src":"4759:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:21"},"nodeType":"YulFunctionCall","src":"4835:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:21"},"nodeType":"YulFunctionCall","src":"4814:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:21","type":""}],"src":"4410:474:21"},{"body":{"nodeType":"YulBlock","src":"4973:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"5019:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5021:77:21"},"nodeType":"YulFunctionCall","src":"5021:79:21"},"nodeType":"YulExpressionStatement","src":"5021:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4994:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5003:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4990:3:21"},"nodeType":"YulFunctionCall","src":"4990:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5015:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4986:3:21"},"nodeType":"YulFunctionCall","src":"4986:32:21"},"nodeType":"YulIf","src":"4983:119:21"},{"nodeType":"YulBlock","src":"5112:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5127:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5141:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5131:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5156:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5191:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5202:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5187:3:21"},"nodeType":"YulFunctionCall","src":"5187:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5211:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5166:20:21"},"nodeType":"YulFunctionCall","src":"5166:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5156:6:21"}]}]},{"nodeType":"YulBlock","src":"5239:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5254:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5268:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5258:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5284:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5319:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5330:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5315:3:21"},"nodeType":"YulFunctionCall","src":"5315:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5339:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5294:20:21"},"nodeType":"YulFunctionCall","src":"5294:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5284:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4935:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4946:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4958:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4966:6:21","type":""}],"src":"4890:474:21"},{"body":{"nodeType":"YulBlock","src":"5435:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5452:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5475:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5457:17:21"},"nodeType":"YulFunctionCall","src":"5457:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5445:6:21"},"nodeType":"YulFunctionCall","src":"5445:37:21"},"nodeType":"YulExpressionStatement","src":"5445:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5423:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5430:3:21","type":""}],"src":"5370:118:21"},{"body":{"nodeType":"YulBlock","src":"5592:124:21","statements":[{"nodeType":"YulAssignment","src":"5602:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:21"},"nodeType":"YulFunctionCall","src":"5610:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5602:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5682:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5695:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5706:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5691:3:21"},"nodeType":"YulFunctionCall","src":"5691:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5638:43:21"},"nodeType":"YulFunctionCall","src":"5638:71:21"},"nodeType":"YulExpressionStatement","src":"5638:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5564:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5576:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5587:4:21","type":""}],"src":"5494:222:21"},{"body":{"nodeType":"YulBlock","src":"5788:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"5834:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5836:77:21"},"nodeType":"YulFunctionCall","src":"5836:79:21"},"nodeType":"YulExpressionStatement","src":"5836:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5809:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5818:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5805:3:21"},"nodeType":"YulFunctionCall","src":"5805:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5830:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5801:3:21"},"nodeType":"YulFunctionCall","src":"5801:32:21"},"nodeType":"YulIf","src":"5798:119:21"},{"nodeType":"YulBlock","src":"5927:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5942:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5956:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5946:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5971:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6006:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6017:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6002:3:21"},"nodeType":"YulFunctionCall","src":"6002:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6026:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5981:20:21"},"nodeType":"YulFunctionCall","src":"5981:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5971:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5758:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5769:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5781:6:21","type":""}],"src":"5722:329:21"},{"body":{"nodeType":"YulBlock","src":"6146:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6163:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6166:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6156:6:21"},"nodeType":"YulFunctionCall","src":"6156:12:21"},"nodeType":"YulExpressionStatement","src":"6156:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6057:117:21"},{"body":{"nodeType":"YulBlock","src":"6269:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6286:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6289:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6279:6:21"},"nodeType":"YulFunctionCall","src":"6279:12:21"},"nodeType":"YulExpressionStatement","src":"6279:12:21"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"6180:117:21"},{"body":{"nodeType":"YulBlock","src":"6392:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6409:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6412:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6402:6:21"},"nodeType":"YulFunctionCall","src":"6402:12:21"},"nodeType":"YulExpressionStatement","src":"6402:12:21"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6303:117:21"},{"body":{"nodeType":"YulBlock","src":"6533:478:21","statements":[{"body":{"nodeType":"YulBlock","src":"6582:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6584:77:21"},"nodeType":"YulFunctionCall","src":"6584:79:21"},"nodeType":"YulExpressionStatement","src":"6584:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6561:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6569:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6557:3:21"},"nodeType":"YulFunctionCall","src":"6557:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"6576:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6553:3:21"},"nodeType":"YulFunctionCall","src":"6553:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6546:6:21"},"nodeType":"YulFunctionCall","src":"6546:35:21"},"nodeType":"YulIf","src":"6543:122:21"},{"nodeType":"YulAssignment","src":"6674:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6697:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6684:12:21"},"nodeType":"YulFunctionCall","src":"6684:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6674:6:21"}]},{"body":{"nodeType":"YulBlock","src":"6747:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6749:77:21"},"nodeType":"YulFunctionCall","src":"6749:79:21"},"nodeType":"YulExpressionStatement","src":"6749:79:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6719:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6727:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6716:2:21"},"nodeType":"YulFunctionCall","src":"6716:30:21"},"nodeType":"YulIf","src":"6713:117:21"},{"nodeType":"YulAssignment","src":"6839:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6855:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6863:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6851:3:21"},"nodeType":"YulFunctionCall","src":"6851:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6839:8:21"}]},{"body":{"nodeType":"YulBlock","src":"6922:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6924:77:21"},"nodeType":"YulFunctionCall","src":"6924:79:21"},"nodeType":"YulExpressionStatement","src":"6924:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6887:8:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6901:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6909:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6897:3:21"},"nodeType":"YulFunctionCall","src":"6897:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6883:3:21"},"nodeType":"YulFunctionCall","src":"6883:32:21"},{"name":"end","nodeType":"YulIdentifier","src":"6917:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6880:2:21"},"nodeType":"YulFunctionCall","src":"6880:41:21"},"nodeType":"YulIf","src":"6877:128:21"}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6500:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"6508:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"6516:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"6526:6:21","type":""}],"src":"6443:568:21"},{"body":{"nodeType":"YulBlock","src":"7186:972:21","statements":[{"body":{"nodeType":"YulBlock","src":"7233:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7235:77:21"},"nodeType":"YulFunctionCall","src":"7235:79:21"},"nodeType":"YulExpressionStatement","src":"7235:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7207:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7216:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7203:3:21"},"nodeType":"YulFunctionCall","src":"7203:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"7228:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7199:3:21"},"nodeType":"YulFunctionCall","src":"7199:33:21"},"nodeType":"YulIf","src":"7196:120:21"},{"nodeType":"YulBlock","src":"7326:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7341:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7355:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7345:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7370:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7405:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7416:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7401:3:21"},"nodeType":"YulFunctionCall","src":"7401:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7425:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7380:20:21"},"nodeType":"YulFunctionCall","src":"7380:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7370:6:21"}]}]},{"nodeType":"YulBlock","src":"7453:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7468:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7482:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7472:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7498:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7533:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7544:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7529:3:21"},"nodeType":"YulFunctionCall","src":"7529:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7553:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7508:20:21"},"nodeType":"YulFunctionCall","src":"7508:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7498:6:21"}]}]},{"nodeType":"YulBlock","src":"7581:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7596:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7610:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7600:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7626:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7661:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7672:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7657:3:21"},"nodeType":"YulFunctionCall","src":"7657:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7681:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7636:20:21"},"nodeType":"YulFunctionCall","src":"7636:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7626:6:21"}]}]},{"nodeType":"YulBlock","src":"7709:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7724:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7738:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7728:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7754:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7789:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7800:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7785:3:21"},"nodeType":"YulFunctionCall","src":"7785:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7809:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7764:20:21"},"nodeType":"YulFunctionCall","src":"7764:53:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7754:6:21"}]}]},{"nodeType":"YulBlock","src":"7837:314:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7852:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7883:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7894:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7879:3:21"},"nodeType":"YulFunctionCall","src":"7879:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7866:12:21"},"nodeType":"YulFunctionCall","src":"7866:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7856:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7946:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7948:77:21"},"nodeType":"YulFunctionCall","src":"7948:79:21"},"nodeType":"YulExpressionStatement","src":"7948:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7918:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7926:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7915:2:21"},"nodeType":"YulFunctionCall","src":"7915:30:21"},"nodeType":"YulIf","src":"7912:117:21"},{"nodeType":"YulAssignment","src":"8043:98:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8113:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8124:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8109:3:21"},"nodeType":"YulFunctionCall","src":"8109:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8133:7:21"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"8061:47:21"},"nodeType":"YulFunctionCall","src":"8061:80:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"8043:6:21"},{"name":"value5","nodeType":"YulIdentifier","src":"8051:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256t_uint256t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7116:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7127:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7139:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7147:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7155:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7163:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7171:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7179:6:21","type":""}],"src":"7017:1141:21"},{"body":{"nodeType":"YulBlock","src":"8264:519:21","statements":[{"body":{"nodeType":"YulBlock","src":"8310:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8312:77:21"},"nodeType":"YulFunctionCall","src":"8312:79:21"},"nodeType":"YulExpressionStatement","src":"8312:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8285:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8294:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8281:3:21"},"nodeType":"YulFunctionCall","src":"8281:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8306:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8277:3:21"},"nodeType":"YulFunctionCall","src":"8277:32:21"},"nodeType":"YulIf","src":"8274:119:21"},{"nodeType":"YulBlock","src":"8403:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8418:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8432:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8422:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8447:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8482:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8493:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8478:3:21"},"nodeType":"YulFunctionCall","src":"8478:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8502:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8457:20:21"},"nodeType":"YulFunctionCall","src":"8457:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8447:6:21"}]}]},{"nodeType":"YulBlock","src":"8530:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8545:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8559:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8549:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8575:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8610:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8621:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8606:3:21"},"nodeType":"YulFunctionCall","src":"8606:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8630:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8585:20:21"},"nodeType":"YulFunctionCall","src":"8585:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8575:6:21"}]}]},{"nodeType":"YulBlock","src":"8658:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8673:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8687:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8677:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8703:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8738:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8749:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8734:3:21"},"nodeType":"YulFunctionCall","src":"8734:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8758:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8713:20:21"},"nodeType":"YulFunctionCall","src":"8713:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8703:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8218:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8229:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8241:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8249:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8257:6:21","type":""}],"src":"8164:619:21"},{"body":{"nodeType":"YulBlock","src":"8821:28:21","statements":[{"nodeType":"YulAssignment","src":"8831:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"8838:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8831:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8807:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8817:3:21","type":""}],"src":"8789:60:21"},{"body":{"nodeType":"YulBlock","src":"8915:82:21","statements":[{"nodeType":"YulAssignment","src":"8925:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8983:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8965:17:21"},"nodeType":"YulFunctionCall","src":"8965:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"8956:8:21"},"nodeType":"YulFunctionCall","src":"8956:34:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8938:17:21"},"nodeType":"YulFunctionCall","src":"8938:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"8925:9:21"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8895:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"8905:9:21","type":""}],"src":"8855:142:21"},{"body":{"nodeType":"YulBlock","src":"9063:66:21","statements":[{"nodeType":"YulAssignment","src":"9073:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9117:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"9086:30:21"},"nodeType":"YulFunctionCall","src":"9086:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9073:9:21"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9043:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9053:9:21","type":""}],"src":"9003:126:21"},{"body":{"nodeType":"YulBlock","src":"9209:66:21","statements":[{"nodeType":"YulAssignment","src":"9219:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9263:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"9232:30:21"},"nodeType":"YulFunctionCall","src":"9232:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9219:9:21"}]}]},"name":"convert_t_contract$_IERC20_$877_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9189:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9199:9:21","type":""}],"src":"9135:140:21"},{"body":{"nodeType":"YulBlock","src":"9360:80:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9377:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9427:5:21"}],"functionName":{"name":"convert_t_contract$_IERC20_$877_to_t_address","nodeType":"YulIdentifier","src":"9382:44:21"},"nodeType":"YulFunctionCall","src":"9382:51:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9370:6:21"},"nodeType":"YulFunctionCall","src":"9370:64:21"},"nodeType":"YulExpressionStatement","src":"9370:64:21"}]},"name":"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9348:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9355:3:21","type":""}],"src":"9281:159:21"},{"body":{"nodeType":"YulBlock","src":"9558:138:21","statements":[{"nodeType":"YulAssignment","src":"9568:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9580:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9591:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9576:3:21"},"nodeType":"YulFunctionCall","src":"9576:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9568:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9662:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9675:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9686:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9671:3:21"},"nodeType":"YulFunctionCall","src":"9671:17:21"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9604:57:21"},"nodeType":"YulFunctionCall","src":"9604:85:21"},"nodeType":"YulExpressionStatement","src":"9604:85:21"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9530:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9542:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9553:4:21","type":""}],"src":"9446:250:21"},{"body":{"nodeType":"YulBlock","src":"9791:478:21","statements":[{"body":{"nodeType":"YulBlock","src":"9840:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9842:77:21"},"nodeType":"YulFunctionCall","src":"9842:79:21"},"nodeType":"YulExpressionStatement","src":"9842:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9819:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9827:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9815:3:21"},"nodeType":"YulFunctionCall","src":"9815:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"9834:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9811:3:21"},"nodeType":"YulFunctionCall","src":"9811:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9804:6:21"},"nodeType":"YulFunctionCall","src":"9804:35:21"},"nodeType":"YulIf","src":"9801:122:21"},{"nodeType":"YulAssignment","src":"9932:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9955:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9942:12:21"},"nodeType":"YulFunctionCall","src":"9942:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9932:6:21"}]},{"body":{"nodeType":"YulBlock","src":"10005:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"10007:77:21"},"nodeType":"YulFunctionCall","src":"10007:79:21"},"nodeType":"YulExpressionStatement","src":"10007:79:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9977:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9985:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9974:2:21"},"nodeType":"YulFunctionCall","src":"9974:30:21"},"nodeType":"YulIf","src":"9971:117:21"},{"nodeType":"YulAssignment","src":"10097:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10113:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10121:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10109:3:21"},"nodeType":"YulFunctionCall","src":"10109:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"10097:8:21"}]},{"body":{"nodeType":"YulBlock","src":"10180:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"10182:77:21"},"nodeType":"YulFunctionCall","src":"10182:79:21"},"nodeType":"YulExpressionStatement","src":"10182:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"10145:8:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10159:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10167:4:21","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10155:3:21"},"nodeType":"YulFunctionCall","src":"10155:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10141:3:21"},"nodeType":"YulFunctionCall","src":"10141:32:21"},{"name":"end","nodeType":"YulIdentifier","src":"10175:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10138:2:21"},"nodeType":"YulFunctionCall","src":"10138:41:21"},"nodeType":"YulIf","src":"10135:128:21"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9758:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"9766:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"9774:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"9784:6:21","type":""}],"src":"9716:553:21"},{"body":{"nodeType":"YulBlock","src":"10361:443:21","statements":[{"body":{"nodeType":"YulBlock","src":"10407:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10409:77:21"},"nodeType":"YulFunctionCall","src":"10409:79:21"},"nodeType":"YulExpressionStatement","src":"10409:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10382:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10391:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10378:3:21"},"nodeType":"YulFunctionCall","src":"10378:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10403:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10374:3:21"},"nodeType":"YulFunctionCall","src":"10374:32:21"},"nodeType":"YulIf","src":"10371:119:21"},{"nodeType":"YulBlock","src":"10500:297:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10515:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10546:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10557:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10542:3:21"},"nodeType":"YulFunctionCall","src":"10542:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10529:12:21"},"nodeType":"YulFunctionCall","src":"10529:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10519:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"10607:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10609:77:21"},"nodeType":"YulFunctionCall","src":"10609:79:21"},"nodeType":"YulExpressionStatement","src":"10609:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10579:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10587:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10576:2:21"},"nodeType":"YulFunctionCall","src":"10576:30:21"},"nodeType":"YulIf","src":"10573:117:21"},{"nodeType":"YulAssignment","src":"10704:83:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10759:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10770:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10755:3:21"},"nodeType":"YulFunctionCall","src":"10755:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10779:7:21"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"10722:32:21"},"nodeType":"YulFunctionCall","src":"10722:65:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10704:6:21"},{"name":"value1","nodeType":"YulIdentifier","src":"10712:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10323:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10334:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10346:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10354:6:21","type":""}],"src":"10275:529:21"},{"body":{"nodeType":"YulBlock","src":"10850:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"10904:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10913:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10916:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10906:6:21"},"nodeType":"YulFunctionCall","src":"10906:12:21"},"nodeType":"YulExpressionStatement","src":"10906:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10873:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10895:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10880:14:21"},"nodeType":"YulFunctionCall","src":"10880:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10870:2:21"},"nodeType":"YulFunctionCall","src":"10870:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10863:6:21"},"nodeType":"YulFunctionCall","src":"10863:40:21"},"nodeType":"YulIf","src":"10860:60:21"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10843:5:21","type":""}],"src":"10810:116:21"},{"body":{"nodeType":"YulBlock","src":"10981:84:21","statements":[{"nodeType":"YulAssignment","src":"10991:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11013:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11000:12:21"},"nodeType":"YulFunctionCall","src":"11000:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10991:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11053:5:21"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"11029:23:21"},"nodeType":"YulFunctionCall","src":"11029:30:21"},"nodeType":"YulExpressionStatement","src":"11029:30:21"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10959:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"10967:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10975:5:21","type":""}],"src":"10932:133:21"},{"body":{"nodeType":"YulBlock","src":"11134:260:21","statements":[{"body":{"nodeType":"YulBlock","src":"11180:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11182:77:21"},"nodeType":"YulFunctionCall","src":"11182:79:21"},"nodeType":"YulExpressionStatement","src":"11182:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11155:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11164:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11151:3:21"},"nodeType":"YulFunctionCall","src":"11151:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11176:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11147:3:21"},"nodeType":"YulFunctionCall","src":"11147:32:21"},"nodeType":"YulIf","src":"11144:119:21"},{"nodeType":"YulBlock","src":"11273:114:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11288:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11302:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11292:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11317:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11349:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11360:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11345:3:21"},"nodeType":"YulFunctionCall","src":"11345:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11369:7:21"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"11327:17:21"},"nodeType":"YulFunctionCall","src":"11327:50:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11317:6:21"}]}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11104:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11115:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11127:6:21","type":""}],"src":"11071:323:21"},{"body":{"nodeType":"YulBlock","src":"11480:388:21","statements":[{"body":{"nodeType":"YulBlock","src":"11526:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11528:77:21"},"nodeType":"YulFunctionCall","src":"11528:79:21"},"nodeType":"YulExpressionStatement","src":"11528:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11501:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11510:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11497:3:21"},"nodeType":"YulFunctionCall","src":"11497:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11522:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11493:3:21"},"nodeType":"YulFunctionCall","src":"11493:32:21"},"nodeType":"YulIf","src":"11490:119:21"},{"nodeType":"YulBlock","src":"11619:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11634:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11648:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11638:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11663:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11698:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11709:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11694:3:21"},"nodeType":"YulFunctionCall","src":"11694:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11718:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11673:20:21"},"nodeType":"YulFunctionCall","src":"11673:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11663:6:21"}]}]},{"nodeType":"YulBlock","src":"11746:115:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11761:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11775:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11765:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11791:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11823:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11834:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11819:3:21"},"nodeType":"YulFunctionCall","src":"11819:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11843:7:21"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"11801:17:21"},"nodeType":"YulFunctionCall","src":"11801:50:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11791:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11442:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11453:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11465:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11473:6:21","type":""}],"src":"11400:468:21"},{"body":{"nodeType":"YulBlock","src":"11919:32:21","statements":[{"nodeType":"YulAssignment","src":"11929:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"11940:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11929:7:21"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11901:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11911:7:21","type":""}],"src":"11874:77:21"},{"body":{"nodeType":"YulBlock","src":"12022:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12039:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12062:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"12044:17:21"},"nodeType":"YulFunctionCall","src":"12044:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12032:6:21"},"nodeType":"YulFunctionCall","src":"12032:37:21"},"nodeType":"YulExpressionStatement","src":"12032:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12010:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12017:3:21","type":""}],"src":"11957:118:21"},{"body":{"nodeType":"YulBlock","src":"12125:49:21","statements":[{"nodeType":"YulAssignment","src":"12135:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12150:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"12157:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12146:3:21"},"nodeType":"YulFunctionCall","src":"12146:22:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12135:7:21"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12107:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12117:7:21","type":""}],"src":"12081:93:21"},{"body":{"nodeType":"YulBlock","src":"12243:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12260:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12282:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"12265:16:21"},"nodeType":"YulFunctionCall","src":"12265:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12253:6:21"},"nodeType":"YulFunctionCall","src":"12253:36:21"},"nodeType":"YulExpressionStatement","src":"12253:36:21"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12231:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12238:3:21","type":""}],"src":"12180:115:21"},{"body":{"nodeType":"YulBlock","src":"12345:57:21","statements":[{"nodeType":"YulAssignment","src":"12355:41:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12370:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"12377:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12366:3:21"},"nodeType":"YulFunctionCall","src":"12366:30:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12355:7:21"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12327:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12337:7:21","type":""}],"src":"12301:101:21"},{"body":{"nodeType":"YulBlock","src":"12471:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12488:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12510:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"12493:16:21"},"nodeType":"YulFunctionCall","src":"12493:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12481:6:21"},"nodeType":"YulFunctionCall","src":"12481:36:21"},"nodeType":"YulExpressionStatement","src":"12481:36:21"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12459:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12466:3:21","type":""}],"src":"12408:115:21"},{"body":{"nodeType":"YulBlock","src":"12731:446:21","statements":[{"nodeType":"YulAssignment","src":"12741:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12753:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12764:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12749:3:21"},"nodeType":"YulFunctionCall","src":"12749:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12741:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12822:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12835:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12846:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12831:3:21"},"nodeType":"YulFunctionCall","src":"12831:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12778:43:21"},"nodeType":"YulFunctionCall","src":"12778:71:21"},"nodeType":"YulExpressionStatement","src":"12778:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12901:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12914:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12925:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12910:3:21"},"nodeType":"YulFunctionCall","src":"12910:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"12859:41:21"},"nodeType":"YulFunctionCall","src":"12859:70:21"},"nodeType":"YulExpressionStatement","src":"12859:70:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12981:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12994:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13005:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12990:3:21"},"nodeType":"YulFunctionCall","src":"12990:18:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"12939:41:21"},"nodeType":"YulFunctionCall","src":"12939:70:21"},"nodeType":"YulExpressionStatement","src":"12939:70:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13061:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13074:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13085:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13070:3:21"},"nodeType":"YulFunctionCall","src":"13070:18:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"13019:41:21"},"nodeType":"YulFunctionCall","src":"13019:70:21"},"nodeType":"YulExpressionStatement","src":"13019:70:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"13141:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13154:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13165:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13150:3:21"},"nodeType":"YulFunctionCall","src":"13150:19:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"13099:41:21"},"nodeType":"YulFunctionCall","src":"13099:71:21"},"nodeType":"YulExpressionStatement","src":"13099:71:21"}]},"name":"abi_encode_tuple_t_bytes32_t_uint32_t_uint64_t_uint64_t_uint64__to_t_bytes32_t_uint32_t_uint64_t_uint64_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12671:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12683:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12691:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12699:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12707:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12715:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12726:4:21","type":""}],"src":"12529:648:21"},{"body":{"nodeType":"YulBlock","src":"13272:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13289:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13292:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13282:6:21"},"nodeType":"YulFunctionCall","src":"13282:12:21"},"nodeType":"YulExpressionStatement","src":"13282:12:21"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"13183:117:21"},{"body":{"nodeType":"YulBlock","src":"13421:153:21","statements":[{"body":{"nodeType":"YulBlock","src":"13461:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"13463:77:21"},"nodeType":"YulFunctionCall","src":"13463:79:21"},"nodeType":"YulExpressionStatement","src":"13463:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"13442:3:21"},{"name":"offset","nodeType":"YulIdentifier","src":"13447:6:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13438:3:21"},"nodeType":"YulFunctionCall","src":"13438:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"13456:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13434:3:21"},"nodeType":"YulFunctionCall","src":"13434:26:21"},"nodeType":"YulIf","src":"13431:113:21"},{"nodeType":"YulAssignment","src":"13553:15:21","value":{"name":"offset","nodeType":"YulIdentifier","src":"13562:6:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13553:5:21"}]}]},"name":"abi_decode_t_struct$_PublicSale_$4723_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13399:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"13407:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13415:5:21","type":""}],"src":"13339:235:21"},{"body":{"nodeType":"YulBlock","src":"13693:422:21","statements":[{"body":{"nodeType":"YulBlock","src":"13740:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13742:77:21"},"nodeType":"YulFunctionCall","src":"13742:79:21"},"nodeType":"YulExpressionStatement","src":"13742:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13714:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13723:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13710:3:21"},"nodeType":"YulFunctionCall","src":"13710:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"13735:3:21","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13706:3:21"},"nodeType":"YulFunctionCall","src":"13706:33:21"},"nodeType":"YulIf","src":"13703:120:21"},{"nodeType":"YulBlock","src":"13833:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13848:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13862:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13852:6:21","type":""}]},{"nodeType":"YulAssignment","src":"13877:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13912:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"13923:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13908:3:21"},"nodeType":"YulFunctionCall","src":"13908:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13932:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13887:20:21"},"nodeType":"YulFunctionCall","src":"13887:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13877:6:21"}]}]},{"nodeType":"YulBlock","src":"13960:148:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13975:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13989:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13979:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14005:93:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14070:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"14081:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14066:3:21"},"nodeType":"YulFunctionCall","src":"14066:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14090:7:21"}],"functionName":{"name":"abi_decode_t_struct$_PublicSale_$4723_calldata_ptr","nodeType":"YulIdentifier","src":"14015:50:21"},"nodeType":"YulFunctionCall","src":"14015:83:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14005:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_struct$_PublicSale_$4723_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13655:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13666:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13678:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13686:6:21","type":""}],"src":"13580:535:21"},{"body":{"nodeType":"YulBlock","src":"14258:828:21","statements":[{"body":{"nodeType":"YulBlock","src":"14305:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14307:77:21"},"nodeType":"YulFunctionCall","src":"14307:79:21"},"nodeType":"YulExpressionStatement","src":"14307:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14279:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14288:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14275:3:21"},"nodeType":"YulFunctionCall","src":"14275:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"14300:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14271:3:21"},"nodeType":"YulFunctionCall","src":"14271:33:21"},"nodeType":"YulIf","src":"14268:120:21"},{"nodeType":"YulBlock","src":"14398:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14413:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14427:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14417:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14442:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14477:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"14488:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14473:3:21"},"nodeType":"YulFunctionCall","src":"14473:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14497:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14452:20:21"},"nodeType":"YulFunctionCall","src":"14452:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14442:6:21"}]}]},{"nodeType":"YulBlock","src":"14525:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14540:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14554:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14544:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14570:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14605:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"14616:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14601:3:21"},"nodeType":"YulFunctionCall","src":"14601:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14625:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14580:20:21"},"nodeType":"YulFunctionCall","src":"14580:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14570:6:21"}]}]},{"nodeType":"YulBlock","src":"14653:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14668:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14682:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14672:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14698:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14733:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"14744:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14729:3:21"},"nodeType":"YulFunctionCall","src":"14729:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14753:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14708:20:21"},"nodeType":"YulFunctionCall","src":"14708:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14698:6:21"}]}]},{"nodeType":"YulBlock","src":"14781:298:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14796:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14827:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14838:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14823:3:21"},"nodeType":"YulFunctionCall","src":"14823:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14810:12:21"},"nodeType":"YulFunctionCall","src":"14810:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14800:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"14889:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14891:77:21"},"nodeType":"YulFunctionCall","src":"14891:79:21"},"nodeType":"YulExpressionStatement","src":"14891:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14861:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14869:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14858:2:21"},"nodeType":"YulFunctionCall","src":"14858:30:21"},"nodeType":"YulIf","src":"14855:117:21"},{"nodeType":"YulAssignment","src":"14986:83:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15041:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"15052:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15037:3:21"},"nodeType":"YulFunctionCall","src":"15037:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15061:7:21"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"15004:32:21"},"nodeType":"YulFunctionCall","src":"15004:65:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14986:6:21"},{"name":"value4","nodeType":"YulIdentifier","src":"14994:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14196:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14207:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14219:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14227:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14235:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14243:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14251:6:21","type":""}],"src":"14121:965:21"},{"body":{"nodeType":"YulBlock","src":"15181:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15198:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15201:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15191:6:21"},"nodeType":"YulFunctionCall","src":"15191:12:21"},"nodeType":"YulExpressionStatement","src":"15191:12:21"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"15092:117:21"},{"body":{"nodeType":"YulBlock","src":"15243:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15260:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15263:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15253:6:21"},"nodeType":"YulFunctionCall","src":"15253:88:21"},"nodeType":"YulExpressionStatement","src":"15253:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15357:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15360:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15350:6:21"},"nodeType":"YulFunctionCall","src":"15350:15:21"},"nodeType":"YulExpressionStatement","src":"15350:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15381:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15384:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15374:6:21"},"nodeType":"YulFunctionCall","src":"15374:15:21"},"nodeType":"YulExpressionStatement","src":"15374:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"15215:180:21"},{"body":{"nodeType":"YulBlock","src":"15444:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15454:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15476:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"15506:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"15484:21:21"},"nodeType":"YulFunctionCall","src":"15484:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15472:3:21"},"nodeType":"YulFunctionCall","src":"15472:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"15458:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"15623:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"15625:16:21"},"nodeType":"YulFunctionCall","src":"15625:18:21"},"nodeType":"YulExpressionStatement","src":"15625:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"15566:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"15578:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15563:2:21"},"nodeType":"YulFunctionCall","src":"15563:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"15602:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"15614:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15599:2:21"},"nodeType":"YulFunctionCall","src":"15599:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"15560:2:21"},"nodeType":"YulFunctionCall","src":"15560:62:21"},"nodeType":"YulIf","src":"15557:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15661:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"15665:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15654:6:21"},"nodeType":"YulFunctionCall","src":"15654:22:21"},"nodeType":"YulExpressionStatement","src":"15654:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15430:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"15438:4:21","type":""}],"src":"15401:281:21"},{"body":{"nodeType":"YulBlock","src":"15729:88:21","statements":[{"nodeType":"YulAssignment","src":"15739:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"15749:18:21"},"nodeType":"YulFunctionCall","src":"15749:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15739:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15798:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"15806:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"15778:19:21"},"nodeType":"YulFunctionCall","src":"15778:33:21"},"nodeType":"YulExpressionStatement","src":"15778:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"15713:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15722:6:21","type":""}],"src":"15688:129:21"},{"body":{"nodeType":"YulBlock","src":"15889:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"15994:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"15996:16:21"},"nodeType":"YulFunctionCall","src":"15996:18:21"},"nodeType":"YulExpressionStatement","src":"15996:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15966:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15974:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15963:2:21"},"nodeType":"YulFunctionCall","src":"15963:30:21"},"nodeType":"YulIf","src":"15960:56:21"},{"nodeType":"YulAssignment","src":"16026:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16056:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16034:21:21"},"nodeType":"YulFunctionCall","src":"16034:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16026:4:21"}]},{"nodeType":"YulAssignment","src":"16100:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16112:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"16118:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16108:3:21"},"nodeType":"YulFunctionCall","src":"16108:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16100:4:21"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"15873:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"15884:4:21","type":""}],"src":"15823:307:21"},{"body":{"nodeType":"YulBlock","src":"16200:82:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16223:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"16228:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"16233:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"16210:12:21"},"nodeType":"YulFunctionCall","src":"16210:30:21"},"nodeType":"YulExpressionStatement","src":"16210:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16260:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"16265:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16256:3:21"},"nodeType":"YulFunctionCall","src":"16256:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"16274:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16249:6:21"},"nodeType":"YulFunctionCall","src":"16249:27:21"},"nodeType":"YulExpressionStatement","src":"16249:27:21"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"16182:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"16187:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"16192:6:21","type":""}],"src":"16136:146:21"},{"body":{"nodeType":"YulBlock","src":"16371:340:21","statements":[{"nodeType":"YulAssignment","src":"16381:74:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16447:6:21"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"16406:40:21"},"nodeType":"YulFunctionCall","src":"16406:48:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"16390:15:21"},"nodeType":"YulFunctionCall","src":"16390:65:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"16381:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"16471:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"16478:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16464:6:21"},"nodeType":"YulFunctionCall","src":"16464:21:21"},"nodeType":"YulExpressionStatement","src":"16464:21:21"},{"nodeType":"YulVariableDeclaration","src":"16494:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"16509:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"16516:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16505:3:21"},"nodeType":"YulFunctionCall","src":"16505:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"16498:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"16559:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"16561:77:21"},"nodeType":"YulFunctionCall","src":"16561:79:21"},"nodeType":"YulExpressionStatement","src":"16561:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16540:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"16545:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16536:3:21"},"nodeType":"YulFunctionCall","src":"16536:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"16554:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16533:2:21"},"nodeType":"YulFunctionCall","src":"16533:25:21"},"nodeType":"YulIf","src":"16530:112:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16688:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"16693:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"16698:6:21"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16651:36:21"},"nodeType":"YulFunctionCall","src":"16651:54:21"},"nodeType":"YulExpressionStatement","src":"16651:54:21"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"16344:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"16349:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"16357:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"16365:5:21","type":""}],"src":"16288:423:21"},{"body":{"nodeType":"YulBlock","src":"16791:277:21","statements":[{"body":{"nodeType":"YulBlock","src":"16840:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"16842:77:21"},"nodeType":"YulFunctionCall","src":"16842:79:21"},"nodeType":"YulExpressionStatement","src":"16842:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16819:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16827:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16815:3:21"},"nodeType":"YulFunctionCall","src":"16815:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"16834:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16811:3:21"},"nodeType":"YulFunctionCall","src":"16811:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16804:6:21"},"nodeType":"YulFunctionCall","src":"16804:35:21"},"nodeType":"YulIf","src":"16801:122:21"},{"nodeType":"YulVariableDeclaration","src":"16932:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16959:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16946:12:21"},"nodeType":"YulFunctionCall","src":"16946:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16936:6:21","type":""}]},{"nodeType":"YulAssignment","src":"16975:87:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17035:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"17043:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17031:3:21"},"nodeType":"YulFunctionCall","src":"17031:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"17050:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"17058:3:21"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"16984:46:21"},"nodeType":"YulFunctionCall","src":"16984:78:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"16975:5:21"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16769:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"16777:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"16785:5:21","type":""}],"src":"16730:338:21"},{"body":{"nodeType":"YulBlock","src":"17200:817:21","statements":[{"body":{"nodeType":"YulBlock","src":"17247:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17249:77:21"},"nodeType":"YulFunctionCall","src":"17249:79:21"},"nodeType":"YulExpressionStatement","src":"17249:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17221:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17230:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17217:3:21"},"nodeType":"YulFunctionCall","src":"17217:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"17242:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17213:3:21"},"nodeType":"YulFunctionCall","src":"17213:33:21"},"nodeType":"YulIf","src":"17210:120:21"},{"nodeType":"YulBlock","src":"17340:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17355:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17369:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17359:6:21","type":""}]},{"nodeType":"YulAssignment","src":"17384:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17419:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"17430:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17415:3:21"},"nodeType":"YulFunctionCall","src":"17415:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17439:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17394:20:21"},"nodeType":"YulFunctionCall","src":"17394:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17384:6:21"}]}]},{"nodeType":"YulBlock","src":"17467:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17482:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17496:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17486:6:21","type":""}]},{"nodeType":"YulAssignment","src":"17512:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17547:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"17558:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17543:3:21"},"nodeType":"YulFunctionCall","src":"17543:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17567:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17522:20:21"},"nodeType":"YulFunctionCall","src":"17522:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17512:6:21"}]}]},{"nodeType":"YulBlock","src":"17595:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17610:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17624:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17614:6:21","type":""}]},{"nodeType":"YulAssignment","src":"17640:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17675:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"17686:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17671:3:21"},"nodeType":"YulFunctionCall","src":"17671:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17695:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17650:20:21"},"nodeType":"YulFunctionCall","src":"17650:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17640:6:21"}]}]},{"nodeType":"YulBlock","src":"17723:287:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17738:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17769:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17780:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17765:3:21"},"nodeType":"YulFunctionCall","src":"17765:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17752:12:21"},"nodeType":"YulFunctionCall","src":"17752:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17742:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"17831:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17833:77:21"},"nodeType":"YulFunctionCall","src":"17833:79:21"},"nodeType":"YulExpressionStatement","src":"17833:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17803:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"17811:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17800:2:21"},"nodeType":"YulFunctionCall","src":"17800:30:21"},"nodeType":"YulIf","src":"17797:117:21"},{"nodeType":"YulAssignment","src":"17928:72:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17972:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"17983:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17968:3:21"},"nodeType":"YulFunctionCall","src":"17968:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17992:7:21"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17938:29:21"},"nodeType":"YulFunctionCall","src":"17938:62:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"17928:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17146:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17157:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17169:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17177:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17185:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17193:6:21","type":""}],"src":"17074:943:21"},{"body":{"nodeType":"YulBlock","src":"18106:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"18152:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18154:77:21"},"nodeType":"YulFunctionCall","src":"18154:79:21"},"nodeType":"YulExpressionStatement","src":"18154:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18127:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18136:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18123:3:21"},"nodeType":"YulFunctionCall","src":"18123:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"18148:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18119:3:21"},"nodeType":"YulFunctionCall","src":"18119:32:21"},"nodeType":"YulIf","src":"18116:119:21"},{"nodeType":"YulBlock","src":"18245:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18260:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18274:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18264:6:21","type":""}]},{"nodeType":"YulAssignment","src":"18289:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18324:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"18335:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18320:3:21"},"nodeType":"YulFunctionCall","src":"18320:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18344:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18299:20:21"},"nodeType":"YulFunctionCall","src":"18299:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18289:6:21"}]}]},{"nodeType":"YulBlock","src":"18372:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18387:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18401:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18391:6:21","type":""}]},{"nodeType":"YulAssignment","src":"18417:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18452:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"18463:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18448:3:21"},"nodeType":"YulFunctionCall","src":"18448:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18472:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18427:20:21"},"nodeType":"YulFunctionCall","src":"18427:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18417:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18068:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18079:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18091:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18099:6:21","type":""}],"src":"18023:474:21"},{"body":{"nodeType":"YulBlock","src":"18731:527:21","statements":[{"nodeType":"YulAssignment","src":"18741:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18753:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18764:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18749:3:21"},"nodeType":"YulFunctionCall","src":"18749:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18741:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18822:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18835:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18846:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18831:3:21"},"nodeType":"YulFunctionCall","src":"18831:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18778:43:21"},"nodeType":"YulFunctionCall","src":"18778:71:21"},"nodeType":"YulExpressionStatement","src":"18778:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18901:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18914:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18925:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18910:3:21"},"nodeType":"YulFunctionCall","src":"18910:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"18859:41:21"},"nodeType":"YulFunctionCall","src":"18859:70:21"},"nodeType":"YulExpressionStatement","src":"18859:70:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18981:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18994:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19005:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18990:3:21"},"nodeType":"YulFunctionCall","src":"18990:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"18939:41:21"},"nodeType":"YulFunctionCall","src":"18939:70:21"},"nodeType":"YulExpressionStatement","src":"18939:70:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19061:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19074:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19085:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19070:3:21"},"nodeType":"YulFunctionCall","src":"19070:18:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"19019:41:21"},"nodeType":"YulFunctionCall","src":"19019:70:21"},"nodeType":"YulExpressionStatement","src":"19019:70:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"19141:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19154:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19165:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19150:3:21"},"nodeType":"YulFunctionCall","src":"19150:19:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"19099:41:21"},"nodeType":"YulFunctionCall","src":"19099:71:21"},"nodeType":"YulExpressionStatement","src":"19099:71:21"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"19222:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19235:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19246:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19231:3:21"},"nodeType":"YulFunctionCall","src":"19231:19:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"19180:41:21"},"nodeType":"YulFunctionCall","src":"19180:71:21"},"nodeType":"YulExpressionStatement","src":"19180:71:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint32_t_uint32_t_uint64_t_uint64_t_uint64__to_t_uint256_t_uint32_t_uint32_t_uint64_t_uint64_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18663:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"18675:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18683:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18691:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18699:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18707:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18715:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18726:4:21","type":""}],"src":"18503:755:21"},{"body":{"nodeType":"YulBlock","src":"19385:153:21","statements":[{"body":{"nodeType":"YulBlock","src":"19425:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"19427:77:21"},"nodeType":"YulFunctionCall","src":"19427:79:21"},"nodeType":"YulExpressionStatement","src":"19427:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"19406:3:21"},{"name":"offset","nodeType":"YulIdentifier","src":"19411:6:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19402:3:21"},"nodeType":"YulFunctionCall","src":"19402:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"19420:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19398:3:21"},"nodeType":"YulFunctionCall","src":"19398:26:21"},"nodeType":"YulIf","src":"19395:113:21"},{"nodeType":"YulAssignment","src":"19517:15:21","value":{"name":"offset","nodeType":"YulIdentifier","src":"19526:6:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19517:5:21"}]}]},"name":"abi_decode_t_struct$_WhitelistSale_$4734_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19363:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"19371:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19379:5:21","type":""}],"src":"19300:238:21"},{"body":{"nodeType":"YulBlock","src":"19660:425:21","statements":[{"body":{"nodeType":"YulBlock","src":"19707:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19709:77:21"},"nodeType":"YulFunctionCall","src":"19709:79:21"},"nodeType":"YulExpressionStatement","src":"19709:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19681:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19690:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19677:3:21"},"nodeType":"YulFunctionCall","src":"19677:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"19702:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19673:3:21"},"nodeType":"YulFunctionCall","src":"19673:33:21"},"nodeType":"YulIf","src":"19670:120:21"},{"nodeType":"YulBlock","src":"19800:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19815:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"19829:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19819:6:21","type":""}]},{"nodeType":"YulAssignment","src":"19844:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19879:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"19890:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19875:3:21"},"nodeType":"YulFunctionCall","src":"19875:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19899:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19854:20:21"},"nodeType":"YulFunctionCall","src":"19854:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19844:6:21"}]}]},{"nodeType":"YulBlock","src":"19927:151:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19942:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"19956:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19946:6:21","type":""}]},{"nodeType":"YulAssignment","src":"19972:96:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20040:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"20051:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20036:3:21"},"nodeType":"YulFunctionCall","src":"20036:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20060:7:21"}],"functionName":{"name":"abi_decode_t_struct$_WhitelistSale_$4734_calldata_ptr","nodeType":"YulIdentifier","src":"19982:53:21"},"nodeType":"YulFunctionCall","src":"19982:86:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19972:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_struct$_WhitelistSale_$4734_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19622:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19633:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19645:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19653:6:21","type":""}],"src":"19544:541:21"},{"body":{"nodeType":"YulBlock","src":"20119:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20136:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20139:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20129:6:21"},"nodeType":"YulFunctionCall","src":"20129:88:21"},"nodeType":"YulExpressionStatement","src":"20129:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20233:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20236:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20226:6:21"},"nodeType":"YulFunctionCall","src":"20226:15:21"},"nodeType":"YulExpressionStatement","src":"20226:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20257:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20260:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20250:6:21"},"nodeType":"YulFunctionCall","src":"20250:15:21"},"nodeType":"YulExpressionStatement","src":"20250:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20091:180:21"},{"body":{"nodeType":"YulBlock","src":"20328:269:21","statements":[{"nodeType":"YulAssignment","src":"20338:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20352:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"20358:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20348:3:21"},"nodeType":"YulFunctionCall","src":"20348:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20338:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"20369:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20399:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"20405:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20395:3:21"},"nodeType":"YulFunctionCall","src":"20395:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"20373:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"20446:51:21","statements":[{"nodeType":"YulAssignment","src":"20460:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20474:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20482:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20470:3:21"},"nodeType":"YulFunctionCall","src":"20470:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20460:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20426:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20419:6:21"},"nodeType":"YulFunctionCall","src":"20419:26:21"},"nodeType":"YulIf","src":"20416:81:21"},{"body":{"nodeType":"YulBlock","src":"20549:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"20563:16:21"},"nodeType":"YulFunctionCall","src":"20563:18:21"},"nodeType":"YulExpressionStatement","src":"20563:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20513:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20536:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20544:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20533:2:21"},"nodeType":"YulFunctionCall","src":"20533:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20510:2:21"},"nodeType":"YulFunctionCall","src":"20510:38:21"},"nodeType":"YulIf","src":"20507:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20312:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20321:6:21","type":""}],"src":"20277:320:21"},{"body":{"nodeType":"YulBlock","src":"20662:81:21","statements":[{"nodeType":"YulAssignment","src":"20672:65:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20729:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"20712:16:21"},"nodeType":"YulFunctionCall","src":"20712:23:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"20703:8:21"},"nodeType":"YulFunctionCall","src":"20703:33:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20685:17:21"},"nodeType":"YulFunctionCall","src":"20685:52:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"20672:9:21"}]}]},"name":"convert_t_uint64_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20642:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"20652:9:21","type":""}],"src":"20603:140:21"},{"body":{"nodeType":"YulBlock","src":"20813:65:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20830:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20865:5:21"}],"functionName":{"name":"convert_t_uint64_to_t_uint256","nodeType":"YulIdentifier","src":"20835:29:21"},"nodeType":"YulFunctionCall","src":"20835:36:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20823:6:21"},"nodeType":"YulFunctionCall","src":"20823:49:21"},"nodeType":"YulExpressionStatement","src":"20823:49:21"}]},"name":"abi_encode_t_uint64_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20801:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20808:3:21","type":""}],"src":"20749:129:21"},{"body":{"nodeType":"YulBlock","src":"21008:204:21","statements":[{"nodeType":"YulAssignment","src":"21018:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21030:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21041:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21026:3:21"},"nodeType":"YulFunctionCall","src":"21026:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21018:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21097:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21110:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21121:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21106:3:21"},"nodeType":"YulFunctionCall","src":"21106:17:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21054:42:21"},"nodeType":"YulFunctionCall","src":"21054:70:21"},"nodeType":"YulExpressionStatement","src":"21054:70:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21177:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21190:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21201:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21186:3:21"},"nodeType":"YulFunctionCall","src":"21186:18:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21134:42:21"},"nodeType":"YulFunctionCall","src":"21134:71:21"},"nodeType":"YulExpressionStatement","src":"21134:71:21"}]},"name":"abi_encode_tuple_t_uint64_t_uint64__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20972:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20984:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20992:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21003:4:21","type":""}],"src":"20884:328:21"},{"body":{"nodeType":"YulBlock","src":"21246:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21263:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21266:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21256:6:21"},"nodeType":"YulFunctionCall","src":"21256:88:21"},"nodeType":"YulExpressionStatement","src":"21256:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21360:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21363:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21353:6:21"},"nodeType":"YulFunctionCall","src":"21353:15:21"},"nodeType":"YulExpressionStatement","src":"21353:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21384:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21387:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21377:6:21"},"nodeType":"YulFunctionCall","src":"21377:15:21"},"nodeType":"YulExpressionStatement","src":"21377:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21218:180:21"},{"body":{"nodeType":"YulBlock","src":"21448:147:21","statements":[{"nodeType":"YulAssignment","src":"21458:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21481:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21463:17:21"},"nodeType":"YulFunctionCall","src":"21463:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21458:1:21"}]},{"nodeType":"YulAssignment","src":"21492:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21515:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21497:17:21"},"nodeType":"YulFunctionCall","src":"21497:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21492:1:21"}]},{"nodeType":"YulAssignment","src":"21526:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21537:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"21540:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21533:3:21"},"nodeType":"YulFunctionCall","src":"21533:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21526:3:21"}]},{"body":{"nodeType":"YulBlock","src":"21566:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21568:16:21"},"nodeType":"YulFunctionCall","src":"21568:18:21"},"nodeType":"YulExpressionStatement","src":"21568:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21558:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"21561:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21555:2:21"},"nodeType":"YulFunctionCall","src":"21555:10:21"},"nodeType":"YulIf","src":"21552:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21435:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"21438:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21444:3:21","type":""}],"src":"21404:191:21"},{"body":{"nodeType":"YulBlock","src":"21644:162:21","statements":[{"nodeType":"YulAssignment","src":"21654:24:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21676:1:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"21659:16:21"},"nodeType":"YulFunctionCall","src":"21659:19:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21654:1:21"}]},{"nodeType":"YulAssignment","src":"21687:24:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21709:1:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"21692:16:21"},"nodeType":"YulFunctionCall","src":"21692:19:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21687:1:21"}]},{"nodeType":"YulAssignment","src":"21720:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21731:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"21734:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21727:3:21"},"nodeType":"YulFunctionCall","src":"21727:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21720:3:21"}]},{"body":{"nodeType":"YulBlock","src":"21777:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21779:16:21"},"nodeType":"YulFunctionCall","src":"21779:18:21"},"nodeType":"YulExpressionStatement","src":"21779:18:21"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"21752:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21757:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21749:2:21"},"nodeType":"YulFunctionCall","src":"21749:27:21"},"nodeType":"YulIf","src":"21746:53:21"}]},"name":"checked_add_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21631:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"21634:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21640:3:21","type":""}],"src":"21601:205:21"},{"body":{"nodeType":"YulBlock","src":"21855:190:21","statements":[{"nodeType":"YulAssignment","src":"21865:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21892:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21874:17:21"},"nodeType":"YulFunctionCall","src":"21874:24:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21865:5:21"}]},{"body":{"nodeType":"YulBlock","src":"21988:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21990:16:21"},"nodeType":"YulFunctionCall","src":"21990:18:21"},"nodeType":"YulExpressionStatement","src":"21990:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21913:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21920:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21910:2:21"},"nodeType":"YulFunctionCall","src":"21910:77:21"},"nodeType":"YulIf","src":"21907:103:21"},{"nodeType":"YulAssignment","src":"22019:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22030:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"22037:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22026:3:21"},"nodeType":"YulFunctionCall","src":"22026:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22019:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21841:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21851:3:21","type":""}],"src":"21812:233:21"},{"body":{"nodeType":"YulBlock","src":"22104:32:21","statements":[{"nodeType":"YulAssignment","src":"22114:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"22125:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22114:7:21"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22086:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22096:7:21","type":""}],"src":"22051:85:21"},{"body":{"nodeType":"YulBlock","src":"22210:90:21","statements":[{"nodeType":"YulAssignment","src":"22220:74:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22286:5:21"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"22260:25:21"},"nodeType":"YulFunctionCall","src":"22260:32:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"22251:8:21"},"nodeType":"YulFunctionCall","src":"22251:42:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22233:17:21"},"nodeType":"YulFunctionCall","src":"22233:61:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"22220:9:21"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22190:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"22200:9:21","type":""}],"src":"22142:158:21"},{"body":{"nodeType":"YulBlock","src":"22379:74:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22396:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22440:5:21"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"22401:38:21"},"nodeType":"YulFunctionCall","src":"22401:45:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22389:6:21"},"nodeType":"YulFunctionCall","src":"22389:58:21"},"nodeType":"YulExpressionStatement","src":"22389:58:21"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22367:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22374:3:21","type":""}],"src":"22306:147:21"},{"body":{"nodeType":"YulBlock","src":"22565:8:21","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22557:6:21","type":""}],"src":"22459:114:21"},{"body":{"nodeType":"YulBlock","src":"22725:218:21","statements":[{"nodeType":"YulAssignment","src":"22735:73:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22801:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22806:1:21","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22742:58:21"},"nodeType":"YulFunctionCall","src":"22742:66:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22735:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22906:3:21"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"22817:88:21"},"nodeType":"YulFunctionCall","src":"22817:93:21"},"nodeType":"YulExpressionStatement","src":"22817:93:21"},{"nodeType":"YulAssignment","src":"22919:18:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22930:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22935:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22926:3:21"},"nodeType":"YulFunctionCall","src":"22926:11:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22919:3:21"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22713:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22721:3:21","type":""}],"src":"22579:364:21"},{"body":{"nodeType":"YulBlock","src":"23234:580:21","statements":[{"nodeType":"YulAssignment","src":"23244:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23256:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23267:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23252:3:21"},"nodeType":"YulFunctionCall","src":"23252:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23244:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23325:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23338:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23349:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23334:3:21"},"nodeType":"YulFunctionCall","src":"23334:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23281:43:21"},"nodeType":"YulFunctionCall","src":"23281:71:21"},"nodeType":"YulExpressionStatement","src":"23281:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23406:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23430:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23415:3:21"},"nodeType":"YulFunctionCall","src":"23415:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23362:43:21"},"nodeType":"YulFunctionCall","src":"23362:72:21"},"nodeType":"YulExpressionStatement","src":"23362:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23496:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23509:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23520:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23505:3:21"},"nodeType":"YulFunctionCall","src":"23505:18:21"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23444:51:21"},"nodeType":"YulFunctionCall","src":"23444:80:21"},"nodeType":"YulExpressionStatement","src":"23444:80:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23572:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23585:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23596:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23581:3:21"},"nodeType":"YulFunctionCall","src":"23581:18:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23534:37:21"},"nodeType":"YulFunctionCall","src":"23534:66:21"},"nodeType":"YulExpressionStatement","src":"23534:66:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23621:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23632:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23617:3:21"},"nodeType":"YulFunctionCall","src":"23617:19:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23642:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"23648:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23638:3:21"},"nodeType":"YulFunctionCall","src":"23638:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23610:6:21"},"nodeType":"YulFunctionCall","src":"23610:49:21"},"nodeType":"YulExpressionStatement","src":"23610:49:21"},{"nodeType":"YulAssignment","src":"23668:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23802:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23676:124:21"},"nodeType":"YulFunctionCall","src":"23676:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23668:4:21"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_rational_0_by_1_t_bool_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_uint256_t_uint256_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23182:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23194:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23202:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23210:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23218:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23229:4:21","type":""}],"src":"22949:865:21"},{"body":{"nodeType":"YulBlock","src":"23995:364:21","statements":[{"nodeType":"YulAssignment","src":"24005:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24017:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24028:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24013:3:21"},"nodeType":"YulFunctionCall","src":"24013:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24005:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24086:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24099:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24110:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24095:3:21"},"nodeType":"YulFunctionCall","src":"24095:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24042:43:21"},"nodeType":"YulFunctionCall","src":"24042:71:21"},"nodeType":"YulExpressionStatement","src":"24042:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24161:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24174:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24185:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24170:3:21"},"nodeType":"YulFunctionCall","src":"24170:18:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24123:37:21"},"nodeType":"YulFunctionCall","src":"24123:66:21"},"nodeType":"YulExpressionStatement","src":"24123:66:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24243:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24256:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24267:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24252:3:21"},"nodeType":"YulFunctionCall","src":"24252:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24199:43:21"},"nodeType":"YulFunctionCall","src":"24199:72:21"},"nodeType":"YulExpressionStatement","src":"24199:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24324:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24337:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24348:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24333:3:21"},"nodeType":"YulFunctionCall","src":"24333:18:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24281:42:21"},"nodeType":"YulFunctionCall","src":"24281:71:21"},"nodeType":"YulExpressionStatement","src":"24281:71:21"}]},"name":"abi_encode_tuple_t_uint256_t_bool_t_uint256_t_uint64__to_t_uint256_t_bool_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23943:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23955:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23963:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23971:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23979:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23990:4:21","type":""}],"src":"23820:539:21"},{"body":{"nodeType":"YulBlock","src":"24519:288:21","statements":[{"nodeType":"YulAssignment","src":"24529:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24541:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24552:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24537:3:21"},"nodeType":"YulFunctionCall","src":"24537:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24529:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24609:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24622:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24633:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24618:3:21"},"nodeType":"YulFunctionCall","src":"24618:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24565:43:21"},"nodeType":"YulFunctionCall","src":"24565:71:21"},"nodeType":"YulExpressionStatement","src":"24565:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24690:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24703:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24714:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24699:3:21"},"nodeType":"YulFunctionCall","src":"24699:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24646:43:21"},"nodeType":"YulFunctionCall","src":"24646:72:21"},"nodeType":"YulExpressionStatement","src":"24646:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24772:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24785:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24796:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24781:3:21"},"nodeType":"YulFunctionCall","src":"24781:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24728:43:21"},"nodeType":"YulFunctionCall","src":"24728:72:21"},"nodeType":"YulExpressionStatement","src":"24728:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24475:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24487:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24495:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24503:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24514:4:21","type":""}],"src":"24365:442:21"},{"body":{"nodeType":"YulBlock","src":"24879:31:21","statements":[{"nodeType":"YulAssignment","src":"24890:13:21","value":{"name":"len","nodeType":"YulIdentifier","src":"24900:3:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"24890:6:21"}]}]},"name":"array_length_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24857:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"24864:3:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"24872:6:21","type":""}],"src":"24813:97:21"},{"body":{"nodeType":"YulBlock","src":"24970:87:21","statements":[{"nodeType":"YulAssignment","src":"24980:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"24988:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"24980:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25008:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"25011:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25001:6:21"},"nodeType":"YulFunctionCall","src":"25001:14:21"},"nodeType":"YulExpressionStatement","src":"25001:14:21"},{"nodeType":"YulAssignment","src":"25024:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25042:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25045:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"25032:9:21"},"nodeType":"YulFunctionCall","src":"25032:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25024:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"24957:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"24965:4:21","type":""}],"src":"24916:141:21"},{"body":{"nodeType":"YulBlock","src":"25107:49:21","statements":[{"nodeType":"YulAssignment","src":"25117:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25135:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"25142:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25131:3:21"},"nodeType":"YulFunctionCall","src":"25131:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"25147:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25127:3:21"},"nodeType":"YulFunctionCall","src":"25127:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"25117:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25090:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"25100:6:21","type":""}],"src":"25063:93:21"},{"body":{"nodeType":"YulBlock","src":"25215:54:21","statements":[{"nodeType":"YulAssignment","src":"25225:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"25250:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"25256:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25246:3:21"},"nodeType":"YulFunctionCall","src":"25246:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"25225:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"25190:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"25196:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"25206:8:21","type":""}],"src":"25162:107:21"},{"body":{"nodeType":"YulBlock","src":"25351:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"25361:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"25382:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"25394:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25378:3:21"},"nodeType":"YulFunctionCall","src":"25378:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"25365:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25405:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"25436:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25447:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"25417:18:21"},"nodeType":"YulFunctionCall","src":"25417:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"25409:4:21","type":""}]},{"nodeType":"YulAssignment","src":"25523:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"25554:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"25565:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"25535:18:21"},"nodeType":"YulFunctionCall","src":"25535:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"25523:8:21"}]},{"nodeType":"YulAssignment","src":"25583:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25596:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"25607:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25603:3:21"},"nodeType":"YulFunctionCall","src":"25603:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25592:3:21"},"nodeType":"YulFunctionCall","src":"25592:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25583:5:21"}]},{"nodeType":"YulAssignment","src":"25622:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25635:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"25646:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"25656:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25642:3:21"},"nodeType":"YulFunctionCall","src":"25642:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"25632:2:21"},"nodeType":"YulFunctionCall","src":"25632:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"25622:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25312:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"25319:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"25331:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"25344:6:21","type":""}],"src":"25275:393:21"},{"body":{"nodeType":"YulBlock","src":"25734:82:21","statements":[{"nodeType":"YulAssignment","src":"25744:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25802:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25784:17:21"},"nodeType":"YulFunctionCall","src":"25784:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"25775:8:21"},"nodeType":"YulFunctionCall","src":"25775:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25757:17:21"},"nodeType":"YulFunctionCall","src":"25757:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"25744:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25714:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"25724:9:21","type":""}],"src":"25674:142:21"},{"body":{"nodeType":"YulBlock","src":"25869:28:21","statements":[{"nodeType":"YulAssignment","src":"25879:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"25886:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"25879:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25855:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"25865:3:21","type":""}],"src":"25822:75:21"},{"body":{"nodeType":"YulBlock","src":"25979:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"25989:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"26044:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"26013:30:21"},"nodeType":"YulFunctionCall","src":"26013:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"25993:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26068:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26108:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"26102:5:21"},"nodeType":"YulFunctionCall","src":"26102:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"26115:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"26147:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"26123:23:21"},"nodeType":"YulFunctionCall","src":"26123:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"26074:27:21"},"nodeType":"YulFunctionCall","src":"26074:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"26061:6:21"},"nodeType":"YulFunctionCall","src":"26061:105:21"},"nodeType":"YulExpressionStatement","src":"26061:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"25956:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"25962:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"25970:7:21","type":""}],"src":"25903:269:21"},{"body":{"nodeType":"YulBlock","src":"26227:24:21","statements":[{"nodeType":"YulAssignment","src":"26237:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"26244:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26237:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26223:3:21","type":""}],"src":"26178:73:21"},{"body":{"nodeType":"YulBlock","src":"26310:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"26320:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"26334:30:21"},"nodeType":"YulFunctionCall","src":"26334:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"26324:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26419:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"26425:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"26433:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"26375:43:21"},"nodeType":"YulFunctionCall","src":"26375:65:21"},"nodeType":"YulExpressionStatement","src":"26375:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"26296:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"26302:6:21","type":""}],"src":"26257:189:21"},{"body":{"nodeType":"YulBlock","src":"26502:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"26569:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26613:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"26620:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"26583:29:21"},"nodeType":"YulFunctionCall","src":"26583:39:21"},"nodeType":"YulExpressionStatement","src":"26583:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26522:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"26529:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26519:2:21"},"nodeType":"YulFunctionCall","src":"26519:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"26534:26:21","statements":[{"nodeType":"YulAssignment","src":"26536:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26549:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"26556:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26545:3:21"},"nodeType":"YulFunctionCall","src":"26545:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"26536:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"26516:2:21","statements":[]},"src":"26512:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"26490:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"26497:3:21","type":""}],"src":"26452:186:21"},{"body":{"nodeType":"YulBlock","src":"26723:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"26749:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"26763:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"26811:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"26779:31:21"},"nodeType":"YulFunctionCall","src":"26779:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"26767:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"26830:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"26853:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"26881:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"26863:17:21"},"nodeType":"YulFunctionCall","src":"26863:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26849:3:21"},"nodeType":"YulFunctionCall","src":"26849:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"26834:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"27050:27:21","statements":[{"nodeType":"YulAssignment","src":"27052:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"27067:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"27052:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"27034:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"27046:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27031:2:21"},"nodeType":"YulFunctionCall","src":"27031:18:21"},"nodeType":"YulIf","src":"27028:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"27119:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"27136:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"27164:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"27146:17:21"},"nodeType":"YulFunctionCall","src":"27146:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27132:3:21"},"nodeType":"YulFunctionCall","src":"27132:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"27090:28:21"},"nodeType":"YulFunctionCall","src":"27090:80:21"},"nodeType":"YulExpressionStatement","src":"27090:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"26740:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"26745:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26737:2:21"},"nodeType":"YulFunctionCall","src":"26737:11:21"},"nodeType":"YulIf","src":"26734:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"26699:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"26706:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"26711:10:21","type":""}],"src":"26644:543:21"},{"body":{"nodeType":"YulBlock","src":"27256:54:21","statements":[{"nodeType":"YulAssignment","src":"27266:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"27291:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"27297:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"27287:3:21"},"nodeType":"YulFunctionCall","src":"27287:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"27266:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"27231:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"27237:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"27247:8:21","type":""}],"src":"27193:117:21"},{"body":{"nodeType":"YulBlock","src":"27367:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"27377:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27426:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"27429:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27422:3:21"},"nodeType":"YulFunctionCall","src":"27422:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27441:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27437:3:21"},"nodeType":"YulFunctionCall","src":"27437:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"27393:28:21"},"nodeType":"YulFunctionCall","src":"27393:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27389:3:21"},"nodeType":"YulFunctionCall","src":"27389:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"27381:4:21","type":""}]},{"nodeType":"YulAssignment","src":"27454:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27468:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"27474:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27464:3:21"},"nodeType":"YulFunctionCall","src":"27464:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"27454:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27344:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"27350:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"27360:6:21","type":""}],"src":"27316:169:21"},{"body":{"nodeType":"YulBlock","src":"27571:214:21","statements":[{"nodeType":"YulAssignment","src":"27704:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27731:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"27737:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"27712:18:21"},"nodeType":"YulFunctionCall","src":"27712:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"27704:4:21"}]},{"nodeType":"YulAssignment","src":"27750:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27761:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27771:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"27774:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27767:3:21"},"nodeType":"YulFunctionCall","src":"27767:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"27758:2:21"},"nodeType":"YulFunctionCall","src":"27758:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"27750:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27552:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"27558:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"27566:4:21","type":""}],"src":"27490:295:21"},{"body":{"nodeType":"YulBlock","src":"27889:1304:21","statements":[{"nodeType":"YulVariableDeclaration","src":"27900:58:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27949:3:21"},{"name":"len","nodeType":"YulIdentifier","src":"27954:3:21"}],"functionName":{"name":"array_length_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"27914:34:21"},"nodeType":"YulFunctionCall","src":"27914:44:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"27904:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"28043:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"28045:16:21"},"nodeType":"YulFunctionCall","src":"28045:18:21"},"nodeType":"YulExpressionStatement","src":"28045:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28015:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28023:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28012:2:21"},"nodeType":"YulFunctionCall","src":"28012:30:21"},"nodeType":"YulIf","src":"28009:56:21"},{"nodeType":"YulVariableDeclaration","src":"28075:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28121:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"28115:5:21"},"nodeType":"YulFunctionCall","src":"28115:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"28089:25:21"},"nodeType":"YulFunctionCall","src":"28089:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"28079:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28220:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"28226:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"28234:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"28174:45:21"},"nodeType":"YulFunctionCall","src":"28174:67:21"},"nodeType":"YulExpressionStatement","src":"28174:67:21"},{"nodeType":"YulVariableDeclaration","src":"28251:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"28268:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"28255:9:21","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"28316:625:21","statements":[{"nodeType":"YulVariableDeclaration","src":"28330:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28349:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28361:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28357:3:21"},"nodeType":"YulFunctionCall","src":"28357:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28345:3:21"},"nodeType":"YulFunctionCall","src":"28345:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"28334:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28381:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28427:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"28395:31:21"},"nodeType":"YulFunctionCall","src":"28395:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"28385:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28445:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"28454:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"28449:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"28513:170:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28538:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"28563:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"28568:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28559:3:21"},"nodeType":"YulFunctionCall","src":"28559:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28546:12:21"},"nodeType":"YulFunctionCall","src":"28546:33:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"28531:6:21"},"nodeType":"YulFunctionCall","src":"28531:49:21"},"nodeType":"YulExpressionStatement","src":"28531:49:21"},{"nodeType":"YulAssignment","src":"28597:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28611:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28619:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28607:3:21"},"nodeType":"YulFunctionCall","src":"28607:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28597:6:21"}]},{"nodeType":"YulAssignment","src":"28638:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"28655:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28666:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28651:3:21"},"nodeType":"YulFunctionCall","src":"28651:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"28638:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28479:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"28482:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28476:2:21"},"nodeType":"YulFunctionCall","src":"28476:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"28491:21:21","statements":[{"nodeType":"YulAssignment","src":"28493:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28502:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"28505:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28498:3:21"},"nodeType":"YulFunctionCall","src":"28498:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"28493:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"28472:3:21","statements":[]},"src":"28468:215:21"},{"body":{"nodeType":"YulBlock","src":"28719:163:21","statements":[{"nodeType":"YulVariableDeclaration","src":"28737:50:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"28771:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"28776:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28767:3:21"},"nodeType":"YulFunctionCall","src":"28767:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28754:12:21"},"nodeType":"YulFunctionCall","src":"28754:33:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"28741:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28811:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"28838:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28853:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28861:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28849:3:21"},"nodeType":"YulFunctionCall","src":"28849:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"28819:18:21"},"nodeType":"YulFunctionCall","src":"28819:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"28804:6:21"},"nodeType":"YulFunctionCall","src":"28804:64:21"},"nodeType":"YulExpressionStatement","src":"28804:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"28702:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"28711:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28699:2:21"},"nodeType":"YulFunctionCall","src":"28699:19:21"},"nodeType":"YulIf","src":"28696:186:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28902:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28916:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28924:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28912:3:21"},"nodeType":"YulFunctionCall","src":"28912:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"28928:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28908:3:21"},"nodeType":"YulFunctionCall","src":"28908:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"28895:6:21"},"nodeType":"YulFunctionCall","src":"28895:36:21"},"nodeType":"YulExpressionStatement","src":"28895:36:21"}]},"nodeType":"YulCase","src":"28309:632:21","value":{"kind":"number","nodeType":"YulLiteral","src":"28314:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"28958:229:21","statements":[{"nodeType":"YulVariableDeclaration","src":"28972:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"28985:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"28976:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"29009:74:21","statements":[{"nodeType":"YulAssignment","src":"29027:42:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"29053:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"29058:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29049:3:21"},"nodeType":"YulFunctionCall","src":"29049:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29036:12:21"},"nodeType":"YulFunctionCall","src":"29036:33:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29027:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"29002:6:21"},"nodeType":"YulIf","src":"28999:84:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29103:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29162:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"29169:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"29109:52:21"},"nodeType":"YulFunctionCall","src":"29109:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29096:6:21"},"nodeType":"YulFunctionCall","src":"29096:81:21"},"nodeType":"YulExpressionStatement","src":"29096:81:21"}]},"nodeType":"YulCase","src":"28950:237:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28289:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28297:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28286:2:21"},"nodeType":"YulFunctionCall","src":"28286:14:21"},"nodeType":"YulSwitch","src":"28279:908:21"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"27873:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"27879:3:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"27884:3:21","type":""}],"src":"27790:1403:21"},{"body":{"nodeType":"YulBlock","src":"29252:32:21","statements":[{"nodeType":"YulAssignment","src":"29262:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"29273:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"29262:7:21"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29234:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"29244:7:21","type":""}],"src":"29199:85:21"},{"body":{"nodeType":"YulBlock","src":"29358:90:21","statements":[{"nodeType":"YulAssignment","src":"29368:74:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29434:5:21"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"29408:25:21"},"nodeType":"YulFunctionCall","src":"29408:32:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"29399:8:21"},"nodeType":"YulFunctionCall","src":"29399:42:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29381:17:21"},"nodeType":"YulFunctionCall","src":"29381:61:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"29368:9:21"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29338:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"29348:9:21","type":""}],"src":"29290:158:21"},{"body":{"nodeType":"YulBlock","src":"29527:74:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29544:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29588:5:21"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"29549:38:21"},"nodeType":"YulFunctionCall","src":"29549:45:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29537:6:21"},"nodeType":"YulFunctionCall","src":"29537:58:21"},"nodeType":"YulExpressionStatement","src":"29537:58:21"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29515:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29522:3:21","type":""}],"src":"29454:147:21"},{"body":{"nodeType":"YulBlock","src":"29741:214:21","statements":[{"nodeType":"YulAssignment","src":"29751:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29763:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29774:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29759:3:21"},"nodeType":"YulFunctionCall","src":"29759:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29751:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29839:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29852:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29863:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29848:3:21"},"nodeType":"YulFunctionCall","src":"29848:17:21"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29787:51:21"},"nodeType":"YulFunctionCall","src":"29787:79:21"},"nodeType":"YulExpressionStatement","src":"29787:79:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29920:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29933:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29944:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29929:3:21"},"nodeType":"YulFunctionCall","src":"29929:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29876:43:21"},"nodeType":"YulFunctionCall","src":"29876:72:21"},"nodeType":"YulExpressionStatement","src":"29876:72:21"}]},"name":"abi_encode_tuple_t_rational_1_by_1_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29705:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29717:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29725:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29736:4:21","type":""}],"src":"29607:348:21"},{"body":{"nodeType":"YulBlock","src":"29989:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30006:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30009:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29999:6:21"},"nodeType":"YulFunctionCall","src":"29999:88:21"},"nodeType":"YulExpressionStatement","src":"29999:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30103:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30106:4:21","type":"","value":"0x00"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30096:6:21"},"nodeType":"YulFunctionCall","src":"30096:15:21"},"nodeType":"YulExpressionStatement","src":"30096:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30127:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30130:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30120:6:21"},"nodeType":"YulFunctionCall","src":"30120:15:21"},"nodeType":"YulExpressionStatement","src":"30120:15:21"}]},"name":"panic_error_0x00","nodeType":"YulFunctionDefinition","src":"29961:180:21"},{"body":{"nodeType":"YulBlock","src":"30204:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"30215:30:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"30241:3:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30228:12:21"},"nodeType":"YulFunctionCall","src":"30228:17:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"30219:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30281:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"30254:26:21"},"nodeType":"YulFunctionCall","src":"30254:33:21"},"nodeType":"YulExpressionStatement","src":"30254:33:21"},{"nodeType":"YulAssignment","src":"30297:29:21","value":{"name":"value","nodeType":"YulIdentifier","src":"30321:5:21"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"30297:11:21"}]}]},"name":"read_from_calldatat_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"30184:3:21","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"30192:11:21","type":""}],"src":"30147:186:21"},{"body":{"nodeType":"YulBlock","src":"30380:51:21","statements":[{"nodeType":"YulAssignment","src":"30390:34:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30415:1:21","type":"","value":"0"},{"name":"value","nodeType":"YulIdentifier","src":"30418:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"30411:3:21"},"nodeType":"YulFunctionCall","src":"30411:13:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"30390:8:21"}]}]},"name":"shift_left_0","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30361:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"30371:8:21","type":""}],"src":"30339:92:21"},{"body":{"nodeType":"YulBlock","src":"30502:225:21","statements":[{"nodeType":"YulVariableDeclaration","src":"30512:78:21","value":{"kind":"number","nodeType":"YulLiteral","src":"30524:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"30516:4:21","type":""}]},{"nodeType":"YulAssignment","src":"30599:34:21","value":{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"30624:8:21"}],"functionName":{"name":"shift_left_0","nodeType":"YulIdentifier","src":"30611:12:21"},"nodeType":"YulFunctionCall","src":"30611:22:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"30599:8:21"}]},{"nodeType":"YulAssignment","src":"30642:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30655:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"30666:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30662:3:21"},"nodeType":"YulFunctionCall","src":"30662:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30651:3:21"},"nodeType":"YulFunctionCall","src":"30651:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30642:5:21"}]},{"nodeType":"YulAssignment","src":"30681:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30694:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"30705:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"30715:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30701:3:21"},"nodeType":"YulFunctionCall","src":"30701:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"30691:2:21"},"nodeType":"YulFunctionCall","src":"30691:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"30681:6:21"}]}]},"name":"update_byte_slice_32_shift_0","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30475:5:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"30482:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"30495:6:21","type":""}],"src":"30437:290:21"},{"body":{"nodeType":"YulBlock","src":"30809:186:21","statements":[{"nodeType":"YulVariableDeclaration","src":"30819:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"30874:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"30843:30:21"},"nodeType":"YulFunctionCall","src":"30843:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"30823:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30898:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30939:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"30933:5:21"},"nodeType":"YulFunctionCall","src":"30933:11:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"30970:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"30946:23:21"},"nodeType":"YulFunctionCall","src":"30946:41:21"}],"functionName":{"name":"update_byte_slice_32_shift_0","nodeType":"YulIdentifier","src":"30904:28:21"},"nodeType":"YulFunctionCall","src":"30904:84:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30891:6:21"},"nodeType":"YulFunctionCall","src":"30891:98:21"},"nodeType":"YulExpressionStatement","src":"30891:98:21"}]},"name":"update_storage_value_offset_0t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"30794:4:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"30800:7:21","type":""}],"src":"30733:262:21"},{"body":{"nodeType":"YulBlock","src":"31043:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"31099:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31108:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31111:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31101:6:21"},"nodeType":"YulFunctionCall","src":"31101:12:21"},"nodeType":"YulExpressionStatement","src":"31101:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31066:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31090:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"31073:16:21"},"nodeType":"YulFunctionCall","src":"31073:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"31063:2:21"},"nodeType":"YulFunctionCall","src":"31063:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31056:6:21"},"nodeType":"YulFunctionCall","src":"31056:42:21"},"nodeType":"YulIf","src":"31053:62:21"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31036:5:21","type":""}],"src":"31001:120:21"},{"body":{"nodeType":"YulBlock","src":"31183:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"31194:30:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31220:3:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"31207:12:21"},"nodeType":"YulFunctionCall","src":"31207:17:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"31198:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31259:5:21"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"31233:25:21"},"nodeType":"YulFunctionCall","src":"31233:32:21"},"nodeType":"YulExpressionStatement","src":"31233:32:21"},{"nodeType":"YulAssignment","src":"31275:29:21","value":{"name":"value","nodeType":"YulIdentifier","src":"31299:5:21"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"31275:11:21"}]}]},"name":"read_from_calldatat_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"31163:3:21","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"31171:11:21","type":""}],"src":"31127:184:21"},{"body":{"nodeType":"YulBlock","src":"31381:169:21","statements":[{"nodeType":"YulVariableDeclaration","src":"31391:22:21","value":{"kind":"number","nodeType":"YulLiteral","src":"31403:10:21","type":"","value":"0xffffffff"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"31395:4:21","type":""}]},{"nodeType":"YulAssignment","src":"31422:34:21","value":{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"31447:8:21"}],"functionName":{"name":"shift_left_0","nodeType":"YulIdentifier","src":"31434:12:21"},"nodeType":"YulFunctionCall","src":"31434:22:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"31422:8:21"}]},{"nodeType":"YulAssignment","src":"31465:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31478:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"31489:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"31485:3:21"},"nodeType":"YulFunctionCall","src":"31485:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31474:3:21"},"nodeType":"YulFunctionCall","src":"31474:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31465:5:21"}]},{"nodeType":"YulAssignment","src":"31504:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31517:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"31528:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"31538:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31524:3:21"},"nodeType":"YulFunctionCall","src":"31524:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"31514:2:21"},"nodeType":"YulFunctionCall","src":"31514:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"31504:6:21"}]}]},"name":"update_byte_slice_4_shift_0","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31354:5:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"31361:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"31374:6:21","type":""}],"src":"31317:233:21"},{"body":{"nodeType":"YulBlock","src":"31614:80:21","statements":[{"nodeType":"YulAssignment","src":"31624:64:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31680:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"31663:16:21"},"nodeType":"YulFunctionCall","src":"31663:23:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"31654:8:21"},"nodeType":"YulFunctionCall","src":"31654:33:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"31637:16:21"},"nodeType":"YulFunctionCall","src":"31637:51:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"31624:9:21"}]}]},"name":"convert_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31594:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"31604:9:21","type":""}],"src":"31556:138:21"},{"body":{"nodeType":"YulBlock","src":"31746:28:21","statements":[{"nodeType":"YulAssignment","src":"31756:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"31763:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"31756:3:21"}]}]},"name":"prepare_store_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31732:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"31742:3:21","type":""}],"src":"31700:74:21"},{"body":{"nodeType":"YulBlock","src":"31854:182:21","statements":[{"nodeType":"YulVariableDeclaration","src":"31864:61:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"31917:7:21"}],"functionName":{"name":"convert_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"31888:28:21"},"nodeType":"YulFunctionCall","src":"31888:37:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"31868:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31941:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31981:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"31975:5:21"},"nodeType":"YulFunctionCall","src":"31975:11:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"32011:16:21"}],"functionName":{"name":"prepare_store_t_uint32","nodeType":"YulIdentifier","src":"31988:22:21"},"nodeType":"YulFunctionCall","src":"31988:40:21"}],"functionName":{"name":"update_byte_slice_4_shift_0","nodeType":"YulIdentifier","src":"31947:27:21"},"nodeType":"YulFunctionCall","src":"31947:82:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"31934:6:21"},"nodeType":"YulFunctionCall","src":"31934:96:21"},"nodeType":"YulExpressionStatement","src":"31934:96:21"}]},"name":"update_storage_value_offset_0t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"31839:4:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"31845:7:21","type":""}],"src":"31780:256:21"},{"body":{"nodeType":"YulBlock","src":"32084:52:21","statements":[{"nodeType":"YulAssignment","src":"32094:35:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32119:2:21","type":"","value":"32"},{"name":"value","nodeType":"YulIdentifier","src":"32123:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"32115:3:21"},"nodeType":"YulFunctionCall","src":"32115:14:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"32094:8:21"}]}]},"name":"shift_left_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32065:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"32075:8:21","type":""}],"src":"32042:94:21"},{"body":{"nodeType":"YulBlock","src":"32206:178:21","statements":[{"nodeType":"YulVariableDeclaration","src":"32216:30:21","value":{"kind":"number","nodeType":"YulLiteral","src":"32228:18:21","type":"","value":"0xffffffff00000000"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"32220:4:21","type":""}]},{"nodeType":"YulAssignment","src":"32255:35:21","value":{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32281:8:21"}],"functionName":{"name":"shift_left_32","nodeType":"YulIdentifier","src":"32267:13:21"},"nodeType":"YulFunctionCall","src":"32267:23:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32255:8:21"}]},{"nodeType":"YulAssignment","src":"32299:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32312:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"32323:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32319:3:21"},"nodeType":"YulFunctionCall","src":"32319:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32308:3:21"},"nodeType":"YulFunctionCall","src":"32308:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32299:5:21"}]},{"nodeType":"YulAssignment","src":"32338:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32351:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32362:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"32372:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32358:3:21"},"nodeType":"YulFunctionCall","src":"32358:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"32348:2:21"},"nodeType":"YulFunctionCall","src":"32348:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"32338:6:21"}]}]},"name":"update_byte_slice_4_shift_4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32179:5:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"32186:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"32199:6:21","type":""}],"src":"32142:242:21"},{"body":{"nodeType":"YulBlock","src":"32464:182:21","statements":[{"nodeType":"YulVariableDeclaration","src":"32474:61:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"32527:7:21"}],"functionName":{"name":"convert_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"32498:28:21"},"nodeType":"YulFunctionCall","src":"32498:37:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"32478:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32551:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32591:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"32585:5:21"},"nodeType":"YulFunctionCall","src":"32585:11:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"32621:16:21"}],"functionName":{"name":"prepare_store_t_uint32","nodeType":"YulIdentifier","src":"32598:22:21"},"nodeType":"YulFunctionCall","src":"32598:40:21"}],"functionName":{"name":"update_byte_slice_4_shift_4","nodeType":"YulIdentifier","src":"32557:27:21"},"nodeType":"YulFunctionCall","src":"32557:82:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32544:6:21"},"nodeType":"YulFunctionCall","src":"32544:96:21"},"nodeType":"YulExpressionStatement","src":"32544:96:21"}]},"name":"update_storage_value_offset_4t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"32449:4:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"32455:7:21","type":""}],"src":"32390:256:21"},{"body":{"nodeType":"YulBlock","src":"32694:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"32750:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32759:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32762:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32752:6:21"},"nodeType":"YulFunctionCall","src":"32752:12:21"},"nodeType":"YulExpressionStatement","src":"32752:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32717:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32741:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"32724:16:21"},"nodeType":"YulFunctionCall","src":"32724:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32714:2:21"},"nodeType":"YulFunctionCall","src":"32714:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32707:6:21"},"nodeType":"YulFunctionCall","src":"32707:42:21"},"nodeType":"YulIf","src":"32704:62:21"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32687:5:21","type":""}],"src":"32652:120:21"},{"body":{"nodeType":"YulBlock","src":"32834:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"32845:30:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"32871:3:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"32858:12:21"},"nodeType":"YulFunctionCall","src":"32858:17:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"32849:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32910:5:21"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"32884:25:21"},"nodeType":"YulFunctionCall","src":"32884:32:21"},"nodeType":"YulExpressionStatement","src":"32884:32:21"},{"nodeType":"YulAssignment","src":"32926:29:21","value":{"name":"value","nodeType":"YulIdentifier","src":"32950:5:21"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"32926:11:21"}]}]},"name":"read_from_calldatat_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"32814:3:21","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"32822:11:21","type":""}],"src":"32778:184:21"},{"body":{"nodeType":"YulBlock","src":"33010:52:21","statements":[{"nodeType":"YulAssignment","src":"33020:35:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33045:2:21","type":"","value":"64"},{"name":"value","nodeType":"YulIdentifier","src":"33049:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"33041:3:21"},"nodeType":"YulFunctionCall","src":"33041:14:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"33020:8:21"}]}]},"name":"shift_left_64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32991:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"33001:8:21","type":""}],"src":"32968:94:21"},{"body":{"nodeType":"YulBlock","src":"33132:194:21","statements":[{"nodeType":"YulVariableDeclaration","src":"33142:46:21","value":{"kind":"number","nodeType":"YulLiteral","src":"33154:34:21","type":"","value":"0xffffffffffffffff0000000000000000"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"33146:4:21","type":""}]},{"nodeType":"YulAssignment","src":"33197:35:21","value":{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"33223:8:21"}],"functionName":{"name":"shift_left_64","nodeType":"YulIdentifier","src":"33209:13:21"},"nodeType":"YulFunctionCall","src":"33209:23:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"33197:8:21"}]},{"nodeType":"YulAssignment","src":"33241:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33254:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"33265:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33261:3:21"},"nodeType":"YulFunctionCall","src":"33261:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33250:3:21"},"nodeType":"YulFunctionCall","src":"33250:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33241:5:21"}]},{"nodeType":"YulAssignment","src":"33280:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33293:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"33304:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"33314:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33300:3:21"},"nodeType":"YulFunctionCall","src":"33300:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"33290:2:21"},"nodeType":"YulFunctionCall","src":"33290:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"33280:6:21"}]}]},"name":"update_byte_slice_8_shift_8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33105:5:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"33112:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"33125:6:21","type":""}],"src":"33068:258:21"},{"body":{"nodeType":"YulBlock","src":"33390:80:21","statements":[{"nodeType":"YulAssignment","src":"33400:64:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33456:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"33439:16:21"},"nodeType":"YulFunctionCall","src":"33439:23:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"33430:8:21"},"nodeType":"YulFunctionCall","src":"33430:33:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"33413:16:21"},"nodeType":"YulFunctionCall","src":"33413:51:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"33400:9:21"}]}]},"name":"convert_t_uint64_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33370:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"33380:9:21","type":""}],"src":"33332:138:21"},{"body":{"nodeType":"YulBlock","src":"33522:28:21","statements":[{"nodeType":"YulAssignment","src":"33532:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"33539:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33532:3:21"}]}]},"name":"prepare_store_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33508:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33518:3:21","type":""}],"src":"33476:74:21"},{"body":{"nodeType":"YulBlock","src":"33630:182:21","statements":[{"nodeType":"YulVariableDeclaration","src":"33640:61:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"33693:7:21"}],"functionName":{"name":"convert_t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"33664:28:21"},"nodeType":"YulFunctionCall","src":"33664:37:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"33644:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33717:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33757:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"33751:5:21"},"nodeType":"YulFunctionCall","src":"33751:11:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"33787:16:21"}],"functionName":{"name":"prepare_store_t_uint64","nodeType":"YulIdentifier","src":"33764:22:21"},"nodeType":"YulFunctionCall","src":"33764:40:21"}],"functionName":{"name":"update_byte_slice_8_shift_8","nodeType":"YulIdentifier","src":"33723:27:21"},"nodeType":"YulFunctionCall","src":"33723:82:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"33710:6:21"},"nodeType":"YulFunctionCall","src":"33710:96:21"},"nodeType":"YulExpressionStatement","src":"33710:96:21"}]},"name":"update_storage_value_offset_8t_uint64_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"33615:4:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"33621:7:21","type":""}],"src":"33556:256:21"},{"body":{"nodeType":"YulBlock","src":"33861:53:21","statements":[{"nodeType":"YulAssignment","src":"33871:36:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33896:3:21","type":"","value":"128"},{"name":"value","nodeType":"YulIdentifier","src":"33901:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"33892:3:21"},"nodeType":"YulFunctionCall","src":"33892:15:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"33871:8:21"}]}]},"name":"shift_left_128","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33842:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"33852:8:21","type":""}],"src":"33818:96:21"},{"body":{"nodeType":"YulBlock","src":"33985:211:21","statements":[{"nodeType":"YulVariableDeclaration","src":"33995:62:21","value":{"kind":"number","nodeType":"YulLiteral","src":"34007:50:21","type":"","value":"0xffffffffffffffff00000000000000000000000000000000"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"33999:4:21","type":""}]},{"nodeType":"YulAssignment","src":"34066:36:21","value":{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"34093:8:21"}],"functionName":{"name":"shift_left_128","nodeType":"YulIdentifier","src":"34078:14:21"},"nodeType":"YulFunctionCall","src":"34078:24:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"34066:8:21"}]},{"nodeType":"YulAssignment","src":"34111:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34124:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"34135:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34131:3:21"},"nodeType":"YulFunctionCall","src":"34131:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34120:3:21"},"nodeType":"YulFunctionCall","src":"34120:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"34111:5:21"}]},{"nodeType":"YulAssignment","src":"34150:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34163:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"34174:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"34184:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34170:3:21"},"nodeType":"YulFunctionCall","src":"34170:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"34160:2:21"},"nodeType":"YulFunctionCall","src":"34160:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"34150:6:21"}]}]},"name":"update_byte_slice_8_shift_16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33958:5:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"33965:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"33978:6:21","type":""}],"src":"33920:276:21"},{"body":{"nodeType":"YulBlock","src":"34277:183:21","statements":[{"nodeType":"YulVariableDeclaration","src":"34287:61:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"34340:7:21"}],"functionName":{"name":"convert_t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"34311:28:21"},"nodeType":"YulFunctionCall","src":"34311:37:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"34291:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34364:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34405:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34399:5:21"},"nodeType":"YulFunctionCall","src":"34399:11:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"34435:16:21"}],"functionName":{"name":"prepare_store_t_uint64","nodeType":"YulIdentifier","src":"34412:22:21"},"nodeType":"YulFunctionCall","src":"34412:40:21"}],"functionName":{"name":"update_byte_slice_8_shift_16","nodeType":"YulIdentifier","src":"34370:28:21"},"nodeType":"YulFunctionCall","src":"34370:83:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"34357:6:21"},"nodeType":"YulFunctionCall","src":"34357:97:21"},"nodeType":"YulExpressionStatement","src":"34357:97:21"}]},"name":"update_storage_value_offset_16t_uint64_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"34262:4:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"34268:7:21","type":""}],"src":"34202:258:21"},{"body":{"nodeType":"YulBlock","src":"34509:53:21","statements":[{"nodeType":"YulAssignment","src":"34519:36:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34544:3:21","type":"","value":"192"},{"name":"value","nodeType":"YulIdentifier","src":"34549:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34540:3:21"},"nodeType":"YulFunctionCall","src":"34540:15:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"34519:8:21"}]}]},"name":"shift_left_192","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34490:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"34500:8:21","type":""}],"src":"34466:96:21"},{"body":{"nodeType":"YulBlock","src":"34633:227:21","statements":[{"nodeType":"YulVariableDeclaration","src":"34643:78:21","value":{"kind":"number","nodeType":"YulLiteral","src":"34655:66:21","type":"","value":"0xffffffffffffffff000000000000000000000000000000000000000000000000"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"34647:4:21","type":""}]},{"nodeType":"YulAssignment","src":"34730:36:21","value":{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"34757:8:21"}],"functionName":{"name":"shift_left_192","nodeType":"YulIdentifier","src":"34742:14:21"},"nodeType":"YulFunctionCall","src":"34742:24:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"34730:8:21"}]},{"nodeType":"YulAssignment","src":"34775:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34788:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"34799:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34795:3:21"},"nodeType":"YulFunctionCall","src":"34795:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34784:3:21"},"nodeType":"YulFunctionCall","src":"34784:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"34775:5:21"}]},{"nodeType":"YulAssignment","src":"34814:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34827:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"34838:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"34848:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34834:3:21"},"nodeType":"YulFunctionCall","src":"34834:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"34824:2:21"},"nodeType":"YulFunctionCall","src":"34824:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"34814:6:21"}]}]},"name":"update_byte_slice_8_shift_24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34606:5:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"34613:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"34626:6:21","type":""}],"src":"34568:292:21"},{"body":{"nodeType":"YulBlock","src":"34941:183:21","statements":[{"nodeType":"YulVariableDeclaration","src":"34951:61:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"35004:7:21"}],"functionName":{"name":"convert_t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"34975:28:21"},"nodeType":"YulFunctionCall","src":"34975:37:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"34955:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35028:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35069:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"35063:5:21"},"nodeType":"YulFunctionCall","src":"35063:11:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"35099:16:21"}],"functionName":{"name":"prepare_store_t_uint64","nodeType":"YulIdentifier","src":"35076:22:21"},"nodeType":"YulFunctionCall","src":"35076:40:21"}],"functionName":{"name":"update_byte_slice_8_shift_24","nodeType":"YulIdentifier","src":"35034:28:21"},"nodeType":"YulFunctionCall","src":"35034:83:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35021:6:21"},"nodeType":"YulFunctionCall","src":"35021:97:21"},"nodeType":"YulExpressionStatement","src":"35021:97:21"}]},"name":"update_storage_value_offset_24t_uint64_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"34926:4:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"34932:7:21","type":""}],"src":"34866:258:21"},{"body":{"nodeType":"YulBlock","src":"35258:2024:21","statements":[{"nodeType":"YulBlock","src":"35269:327:21","statements":[{"nodeType":"YulVariableDeclaration","src":"35284:30:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35306:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"35312:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35302:3:21"},"nodeType":"YulFunctionCall","src":"35302:12:21"},"variables":[{"name":"memberSlot","nodeType":"YulTypedName","src":"35288:10:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35327:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35351:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"35358:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35347:3:21"},"nodeType":"YulFunctionCall","src":"35347:13:21"},"variables":[{"name":"memberSrcPtr","nodeType":"YulTypedName","src":"35331:12:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35374:46:21","value":{"name":"memberSrcPtr","nodeType":"YulIdentifier","src":"35408:12:21"},"variables":[{"name":"memberValue_0","nodeType":"YulTypedName","src":"35378:13:21","type":""}]},{"nodeType":"YulAssignment","src":"35434:59:21","value":{"arguments":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"35479:13:21"}],"functionName":{"name":"read_from_calldatat_uint256","nodeType":"YulIdentifier","src":"35451:27:21"},"nodeType":"YulFunctionCall","src":"35451:42:21"},"variableNames":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"35434:13:21"}]},{"expression":{"arguments":[{"name":"memberSlot","nodeType":"YulIdentifier","src":"35559:10:21"},{"name":"memberValue_0","nodeType":"YulIdentifier","src":"35571:13:21"}],"functionName":{"name":"update_storage_value_offset_0t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"35507:51:21"},"nodeType":"YulFunctionCall","src":"35507:78:21"},"nodeType":"YulExpressionStatement","src":"35507:78:21"}]},{"nodeType":"YulBlock","src":"35606:325:21","statements":[{"nodeType":"YulVariableDeclaration","src":"35621:30:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35643:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"35649:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35639:3:21"},"nodeType":"YulFunctionCall","src":"35639:12:21"},"variables":[{"name":"memberSlot","nodeType":"YulTypedName","src":"35625:10:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35664:34:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35688:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"35695:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35684:3:21"},"nodeType":"YulFunctionCall","src":"35684:14:21"},"variables":[{"name":"memberSrcPtr","nodeType":"YulTypedName","src":"35668:12:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35712:46:21","value":{"name":"memberSrcPtr","nodeType":"YulIdentifier","src":"35746:12:21"},"variables":[{"name":"memberValue_0","nodeType":"YulTypedName","src":"35716:13:21","type":""}]},{"nodeType":"YulAssignment","src":"35772:58:21","value":{"arguments":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"35816:13:21"}],"functionName":{"name":"read_from_calldatat_uint32","nodeType":"YulIdentifier","src":"35789:26:21"},"nodeType":"YulFunctionCall","src":"35789:41:21"},"variableNames":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"35772:13:21"}]},{"expression":{"arguments":[{"name":"memberSlot","nodeType":"YulIdentifier","src":"35894:10:21"},{"name":"memberValue_0","nodeType":"YulIdentifier","src":"35906:13:21"}],"functionName":{"name":"update_storage_value_offset_0t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"35844:49:21"},"nodeType":"YulFunctionCall","src":"35844:76:21"},"nodeType":"YulExpressionStatement","src":"35844:76:21"}]},{"nodeType":"YulBlock","src":"35941:325:21","statements":[{"nodeType":"YulVariableDeclaration","src":"35956:30:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35978:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"35984:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35974:3:21"},"nodeType":"YulFunctionCall","src":"35974:12:21"},"variables":[{"name":"memberSlot","nodeType":"YulTypedName","src":"35960:10:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35999:34:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36023:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"36030:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36019:3:21"},"nodeType":"YulFunctionCall","src":"36019:14:21"},"variables":[{"name":"memberSrcPtr","nodeType":"YulTypedName","src":"36003:12:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36047:46:21","value":{"name":"memberSrcPtr","nodeType":"YulIdentifier","src":"36081:12:21"},"variables":[{"name":"memberValue_0","nodeType":"YulTypedName","src":"36051:13:21","type":""}]},{"nodeType":"YulAssignment","src":"36107:58:21","value":{"arguments":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"36151:13:21"}],"functionName":{"name":"read_from_calldatat_uint32","nodeType":"YulIdentifier","src":"36124:26:21"},"nodeType":"YulFunctionCall","src":"36124:41:21"},"variableNames":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"36107:13:21"}]},{"expression":{"arguments":[{"name":"memberSlot","nodeType":"YulIdentifier","src":"36229:10:21"},{"name":"memberValue_0","nodeType":"YulIdentifier","src":"36241:13:21"}],"functionName":{"name":"update_storage_value_offset_4t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"36179:49:21"},"nodeType":"YulFunctionCall","src":"36179:76:21"},"nodeType":"YulExpressionStatement","src":"36179:76:21"}]},{"nodeType":"YulBlock","src":"36276:325:21","statements":[{"nodeType":"YulVariableDeclaration","src":"36291:30:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36313:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"36319:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36309:3:21"},"nodeType":"YulFunctionCall","src":"36309:12:21"},"variables":[{"name":"memberSlot","nodeType":"YulTypedName","src":"36295:10:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36334:34:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36358:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"36365:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36354:3:21"},"nodeType":"YulFunctionCall","src":"36354:14:21"},"variables":[{"name":"memberSrcPtr","nodeType":"YulTypedName","src":"36338:12:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36382:46:21","value":{"name":"memberSrcPtr","nodeType":"YulIdentifier","src":"36416:12:21"},"variables":[{"name":"memberValue_0","nodeType":"YulTypedName","src":"36386:13:21","type":""}]},{"nodeType":"YulAssignment","src":"36442:58:21","value":{"arguments":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"36486:13:21"}],"functionName":{"name":"read_from_calldatat_uint64","nodeType":"YulIdentifier","src":"36459:26:21"},"nodeType":"YulFunctionCall","src":"36459:41:21"},"variableNames":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"36442:13:21"}]},{"expression":{"arguments":[{"name":"memberSlot","nodeType":"YulIdentifier","src":"36564:10:21"},{"name":"memberValue_0","nodeType":"YulIdentifier","src":"36576:13:21"}],"functionName":{"name":"update_storage_value_offset_8t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"36514:49:21"},"nodeType":"YulFunctionCall","src":"36514:76:21"},"nodeType":"YulExpressionStatement","src":"36514:76:21"}]},{"nodeType":"YulBlock","src":"36611:327:21","statements":[{"nodeType":"YulVariableDeclaration","src":"36626:30:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36648:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"36654:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36644:3:21"},"nodeType":"YulFunctionCall","src":"36644:12:21"},"variables":[{"name":"memberSlot","nodeType":"YulTypedName","src":"36630:10:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36669:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36693:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"36700:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36689:3:21"},"nodeType":"YulFunctionCall","src":"36689:15:21"},"variables":[{"name":"memberSrcPtr","nodeType":"YulTypedName","src":"36673:12:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36718:46:21","value":{"name":"memberSrcPtr","nodeType":"YulIdentifier","src":"36752:12:21"},"variables":[{"name":"memberValue_0","nodeType":"YulTypedName","src":"36722:13:21","type":""}]},{"nodeType":"YulAssignment","src":"36778:58:21","value":{"arguments":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"36822:13:21"}],"functionName":{"name":"read_from_calldatat_uint64","nodeType":"YulIdentifier","src":"36795:26:21"},"nodeType":"YulFunctionCall","src":"36795:41:21"},"variableNames":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"36778:13:21"}]},{"expression":{"arguments":[{"name":"memberSlot","nodeType":"YulIdentifier","src":"36901:10:21"},{"name":"memberValue_0","nodeType":"YulIdentifier","src":"36913:13:21"}],"functionName":{"name":"update_storage_value_offset_16t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"36850:50:21"},"nodeType":"YulFunctionCall","src":"36850:77:21"},"nodeType":"YulExpressionStatement","src":"36850:77:21"}]},{"nodeType":"YulBlock","src":"36948:327:21","statements":[{"nodeType":"YulVariableDeclaration","src":"36963:30:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36985:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"36991:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36981:3:21"},"nodeType":"YulFunctionCall","src":"36981:12:21"},"variables":[{"name":"memberSlot","nodeType":"YulTypedName","src":"36967:10:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37006:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37030:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"37037:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37026:3:21"},"nodeType":"YulFunctionCall","src":"37026:15:21"},"variables":[{"name":"memberSrcPtr","nodeType":"YulTypedName","src":"37010:12:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37055:46:21","value":{"name":"memberSrcPtr","nodeType":"YulIdentifier","src":"37089:12:21"},"variables":[{"name":"memberValue_0","nodeType":"YulTypedName","src":"37059:13:21","type":""}]},{"nodeType":"YulAssignment","src":"37115:58:21","value":{"arguments":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"37159:13:21"}],"functionName":{"name":"read_from_calldatat_uint64","nodeType":"YulIdentifier","src":"37132:26:21"},"nodeType":"YulFunctionCall","src":"37132:41:21"},"variableNames":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"37115:13:21"}]},{"expression":{"arguments":[{"name":"memberSlot","nodeType":"YulIdentifier","src":"37238:10:21"},{"name":"memberValue_0","nodeType":"YulIdentifier","src":"37250:13:21"}],"functionName":{"name":"update_storage_value_offset_24t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"37187:50:21"},"nodeType":"YulFunctionCall","src":"37187:77:21"},"nodeType":"YulExpressionStatement","src":"37187:77:21"}]}]},"name":"copy_struct_to_storage_from_t_struct$_PublicSale_$4723_calldata_ptr_to_t_struct$_PublicSale_$4723_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"35245:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"35251:5:21","type":""}],"src":"35130:2152:21"},{"body":{"nodeType":"YulBlock","src":"37419:137:21","statements":[{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37536:4:21"},{"name":"value_0","nodeType":"YulIdentifier","src":"37542:7:21"}],"functionName":{"name":"copy_struct_to_storage_from_t_struct$_PublicSale_$4723_calldata_ptr_to_t_struct$_PublicSale_$4723_storage","nodeType":"YulIdentifier","src":"37430:105:21"},"nodeType":"YulFunctionCall","src":"37430:120:21"},"nodeType":"YulExpressionStatement","src":"37430:120:21"}]},"name":"update_storage_value_offset_0t_struct$_PublicSale_$4723_calldata_ptr_to_t_struct$_PublicSale_$4723_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"37404:4:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"37410:7:21","type":""}],"src":"37288:268:21"},{"body":{"nodeType":"YulBlock","src":"37610:362:21","statements":[{"nodeType":"YulAssignment","src":"37620:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37643:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37625:17:21"},"nodeType":"YulFunctionCall","src":"37625:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"37620:1:21"}]},{"nodeType":"YulAssignment","src":"37654:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37677:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37659:17:21"},"nodeType":"YulFunctionCall","src":"37659:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"37654:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"37688:28:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37711:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"37714:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37707:3:21"},"nodeType":"YulFunctionCall","src":"37707:9:21"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"37692:11:21","type":""}]},{"nodeType":"YulAssignment","src":"37725:41:21","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"37754:11:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37736:17:21"},"nodeType":"YulFunctionCall","src":"37736:30:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"37725:7:21"}]},{"body":{"nodeType":"YulBlock","src":"37943:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37945:16:21"},"nodeType":"YulFunctionCall","src":"37945:18:21"},"nodeType":"YulExpressionStatement","src":"37945:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37876:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37869:6:21"},"nodeType":"YulFunctionCall","src":"37869:9:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37899:1:21"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"37906:7:21"},{"name":"x","nodeType":"YulIdentifier","src":"37915:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"37902:3:21"},"nodeType":"YulFunctionCall","src":"37902:15:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"37896:2:21"},"nodeType":"YulFunctionCall","src":"37896:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"37849:2:21"},"nodeType":"YulFunctionCall","src":"37849:83:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37829:6:21"},"nodeType":"YulFunctionCall","src":"37829:113:21"},"nodeType":"YulIf","src":"37826:139:21"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"37593:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"37596:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"37602:7:21","type":""}],"src":"37562:410:21"},{"body":{"nodeType":"YulBlock","src":"38104:215:21","statements":[{"nodeType":"YulAssignment","src":"38114:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38180:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"38185:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38121:58:21"},"nodeType":"YulFunctionCall","src":"38121:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38114:3:21"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"38239:5:21"},{"name":"pos","nodeType":"YulIdentifier","src":"38246:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"38251:6:21"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"38202:36:21"},"nodeType":"YulFunctionCall","src":"38202:56:21"},"nodeType":"YulExpressionStatement","src":"38202:56:21"},{"nodeType":"YulAssignment","src":"38267:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38278:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38305:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"38283:21:21"},"nodeType":"YulFunctionCall","src":"38283:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38274:3:21"},"nodeType":"YulFunctionCall","src":"38274:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38267:3:21"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"38077:5:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"38084:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38092:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38100:3:21","type":""}],"src":"38002:317:21"},{"body":{"nodeType":"YulBlock","src":"38559:529:21","statements":[{"nodeType":"YulAssignment","src":"38569:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38581:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38592:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38577:3:21"},"nodeType":"YulFunctionCall","src":"38577:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38569:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38650:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38663:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38674:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38659:3:21"},"nodeType":"YulFunctionCall","src":"38659:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"38606:43:21"},"nodeType":"YulFunctionCall","src":"38606:71:21"},"nodeType":"YulExpressionStatement","src":"38606:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38731:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38744:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38755:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38740:3:21"},"nodeType":"YulFunctionCall","src":"38740:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"38687:43:21"},"nodeType":"YulFunctionCall","src":"38687:72:21"},"nodeType":"YulExpressionStatement","src":"38687:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38813:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38826:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38837:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38822:3:21"},"nodeType":"YulFunctionCall","src":"38822:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"38769:43:21"},"nodeType":"YulFunctionCall","src":"38769:72:21"},"nodeType":"YulExpressionStatement","src":"38769:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38889:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38902:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38913:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38898:3:21"},"nodeType":"YulFunctionCall","src":"38898:18:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"38851:37:21"},"nodeType":"YulFunctionCall","src":"38851:66:21"},"nodeType":"YulExpressionStatement","src":"38851:66:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38938:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38949:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38934:3:21"},"nodeType":"YulFunctionCall","src":"38934:19:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38959:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"38965:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38955:3:21"},"nodeType":"YulFunctionCall","src":"38955:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38927:6:21"},"nodeType":"YulFunctionCall","src":"38927:49:21"},"nodeType":"YulExpressionStatement","src":"38927:49:21"},{"nodeType":"YulAssignment","src":"38985:96:21","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"39059:6:21"},{"name":"value5","nodeType":"YulIdentifier","src":"39067:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"39076:4:21"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38993:65:21"},"nodeType":"YulFunctionCall","src":"38993:88:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38985:4:21"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_string_calldata_ptr__to_t_uint256_t_uint256_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38491:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"38503:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"38511:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"38519:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"38527:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38535:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38543:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38554:4:21","type":""}],"src":"38325:763:21"},{"body":{"nodeType":"YulBlock","src":"39208:34:21","statements":[{"nodeType":"YulAssignment","src":"39218:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"39233:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"39218:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39180:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"39185:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"39196:11:21","type":""}],"src":"39094:148:21"},{"body":{"nodeType":"YulBlock","src":"39358:280:21","statements":[{"nodeType":"YulVariableDeclaration","src":"39368:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39415:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"39382:32:21"},"nodeType":"YulFunctionCall","src":"39382:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"39372:6:21","type":""}]},{"nodeType":"YulAssignment","src":"39430:96:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39514:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"39519:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39437:76:21"},"nodeType":"YulFunctionCall","src":"39437:89:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39430:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39574:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"39581:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39570:3:21"},"nodeType":"YulFunctionCall","src":"39570:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"39588:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"39593:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"39535:34:21"},"nodeType":"YulFunctionCall","src":"39535:65:21"},"nodeType":"YulExpressionStatement","src":"39535:65:21"},{"nodeType":"YulAssignment","src":"39609:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39620:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"39625:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39616:3:21"},"nodeType":"YulFunctionCall","src":"39616:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39609:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39339:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"39346:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39354:3:21","type":""}],"src":"39248:390:21"},{"body":{"nodeType":"YulBlock","src":"39828:251:21","statements":[{"nodeType":"YulAssignment","src":"39839:102:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39928:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"39937:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39846:81:21"},"nodeType":"YulFunctionCall","src":"39846:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39839:3:21"}]},{"nodeType":"YulAssignment","src":"39951:102:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40040:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"40049:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39958:81:21"},"nodeType":"YulFunctionCall","src":"39958:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39951:3:21"}]},{"nodeType":"YulAssignment","src":"40063:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"40070:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40063:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39799:3:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39805:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39813:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39824:3:21","type":""}],"src":"39644:435:21"},{"body":{"nodeType":"YulBlock","src":"40128:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"40185:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"40187:6:21"},"nodeType":"YulFunctionCall","src":"40187:12:21"},"nodeType":"YulExpressionStatement","src":"40187:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40151:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40176:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"40158:17:21"},"nodeType":"YulFunctionCall","src":"40158:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"40148:2:21"},"nodeType":"YulFunctionCall","src":"40148:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40141:6:21"},"nodeType":"YulFunctionCall","src":"40141:43:21"},"nodeType":"YulIf","src":"40138:63:21"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40121:5:21","type":""}],"src":"40085:122:21"},{"body":{"nodeType":"YulBlock","src":"40270:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"40281:30:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"40307:3:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"40294:12:21"},"nodeType":"YulFunctionCall","src":"40294:17:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"40285:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40347:5:21"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"40320:26:21"},"nodeType":"YulFunctionCall","src":"40320:33:21"},"nodeType":"YulExpressionStatement","src":"40320:33:21"},{"nodeType":"YulAssignment","src":"40363:29:21","value":{"name":"value","nodeType":"YulIdentifier","src":"40387:5:21"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"40363:11:21"}]}]},"name":"read_from_calldatat_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"40250:3:21","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"40258:11:21","type":""}],"src":"40213:186:21"},{"body":{"nodeType":"YulBlock","src":"40465:53:21","statements":[{"nodeType":"YulAssignment","src":"40475:37:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40506:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"40488:17:21"},"nodeType":"YulFunctionCall","src":"40488:24:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"40475:9:21"}]}]},"name":"convert_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40445:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"40455:9:21","type":""}],"src":"40405:113:21"},{"body":{"nodeType":"YulBlock","src":"40575:51:21","statements":[{"nodeType":"YulAssignment","src":"40585:34:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40610:1:21","type":"","value":"0"},{"name":"value","nodeType":"YulIdentifier","src":"40613:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"40606:3:21"},"nodeType":"YulFunctionCall","src":"40606:13:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"40585:8:21"}]}]},"name":"shift_right_0_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40556:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"40566:8:21","type":""}],"src":"40524:102:21"},{"body":{"nodeType":"YulBlock","src":"40679:52:21","statements":[{"nodeType":"YulAssignment","src":"40689:36:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40719:5:21"}],"functionName":{"name":"shift_right_0_unsigned","nodeType":"YulIdentifier","src":"40696:22:21"},"nodeType":"YulFunctionCall","src":"40696:29:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"40689:3:21"}]}]},"name":"prepare_store_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40665:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"40675:3:21","type":""}],"src":"40632:99:21"},{"body":{"nodeType":"YulBlock","src":"40813:186:21","statements":[{"nodeType":"YulVariableDeclaration","src":"40823:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"40878:7:21"}],"functionName":{"name":"convert_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"40847:30:21"},"nodeType":"YulFunctionCall","src":"40847:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"40827:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"40902:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"40943:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"40937:5:21"},"nodeType":"YulFunctionCall","src":"40937:11:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"40974:16:21"}],"functionName":{"name":"prepare_store_t_bytes32","nodeType":"YulIdentifier","src":"40950:23:21"},"nodeType":"YulFunctionCall","src":"40950:41:21"}],"functionName":{"name":"update_byte_slice_32_shift_0","nodeType":"YulIdentifier","src":"40908:28:21"},"nodeType":"YulFunctionCall","src":"40908:84:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"40895:6:21"},"nodeType":"YulFunctionCall","src":"40895:98:21"},"nodeType":"YulExpressionStatement","src":"40895:98:21"}]},"name":"update_storage_value_offset_0t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"40798:4:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"40804:7:21","type":""}],"src":"40737:262:21"},{"body":{"nodeType":"YulBlock","src":"41069:186:21","statements":[{"nodeType":"YulVariableDeclaration","src":"41079:38:21","value":{"kind":"number","nodeType":"YulLiteral","src":"41091:26:21","type":"","value":"0xffffffffffffffff00000000"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"41083:4:21","type":""}]},{"nodeType":"YulAssignment","src":"41126:35:21","value":{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"41152:8:21"}],"functionName":{"name":"shift_left_32","nodeType":"YulIdentifier","src":"41138:13:21"},"nodeType":"YulFunctionCall","src":"41138:23:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"41126:8:21"}]},{"nodeType":"YulAssignment","src":"41170:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41183:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"41194:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"41190:3:21"},"nodeType":"YulFunctionCall","src":"41190:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41179:3:21"},"nodeType":"YulFunctionCall","src":"41179:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"41170:5:21"}]},{"nodeType":"YulAssignment","src":"41209:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41222:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"41233:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"41243:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41229:3:21"},"nodeType":"YulFunctionCall","src":"41229:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"41219:2:21"},"nodeType":"YulFunctionCall","src":"41219:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"41209:6:21"}]}]},"name":"update_byte_slice_8_shift_4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41042:5:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"41049:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"41062:6:21","type":""}],"src":"41005:250:21"},{"body":{"nodeType":"YulBlock","src":"41335:182:21","statements":[{"nodeType":"YulVariableDeclaration","src":"41345:61:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"41398:7:21"}],"functionName":{"name":"convert_t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"41369:28:21"},"nodeType":"YulFunctionCall","src":"41369:37:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"41349:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"41422:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"41462:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"41456:5:21"},"nodeType":"YulFunctionCall","src":"41456:11:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"41492:16:21"}],"functionName":{"name":"prepare_store_t_uint64","nodeType":"YulIdentifier","src":"41469:22:21"},"nodeType":"YulFunctionCall","src":"41469:40:21"}],"functionName":{"name":"update_byte_slice_8_shift_4","nodeType":"YulIdentifier","src":"41428:27:21"},"nodeType":"YulFunctionCall","src":"41428:82:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"41415:6:21"},"nodeType":"YulFunctionCall","src":"41415:96:21"},"nodeType":"YulExpressionStatement","src":"41415:96:21"}]},"name":"update_storage_value_offset_4t_uint64_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"41320:4:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"41326:7:21","type":""}],"src":"41261:256:21"},{"body":{"nodeType":"YulBlock","src":"41565:52:21","statements":[{"nodeType":"YulAssignment","src":"41575:35:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41600:2:21","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"41604:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"41596:3:21"},"nodeType":"YulFunctionCall","src":"41596:14:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"41575:8:21"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41546:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"41556:8:21","type":""}],"src":"41523:94:21"},{"body":{"nodeType":"YulBlock","src":"41688:202:21","statements":[{"nodeType":"YulVariableDeclaration","src":"41698:54:21","value":{"kind":"number","nodeType":"YulLiteral","src":"41710:42:21","type":"","value":"0xffffffffffffffff000000000000000000000000"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"41702:4:21","type":""}]},{"nodeType":"YulAssignment","src":"41761:35:21","value":{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"41787:8:21"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"41773:13:21"},"nodeType":"YulFunctionCall","src":"41773:23:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"41761:8:21"}]},{"nodeType":"YulAssignment","src":"41805:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41818:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"41829:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"41825:3:21"},"nodeType":"YulFunctionCall","src":"41825:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41814:3:21"},"nodeType":"YulFunctionCall","src":"41814:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"41805:5:21"}]},{"nodeType":"YulAssignment","src":"41844:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41857:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"41868:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"41878:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41864:3:21"},"nodeType":"YulFunctionCall","src":"41864:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"41854:2:21"},"nodeType":"YulFunctionCall","src":"41854:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"41844:6:21"}]}]},"name":"update_byte_slice_8_shift_12","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41661:5:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"41668:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"41681:6:21","type":""}],"src":"41623:267:21"},{"body":{"nodeType":"YulBlock","src":"41971:183:21","statements":[{"nodeType":"YulVariableDeclaration","src":"41981:61:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"42034:7:21"}],"functionName":{"name":"convert_t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"42005:28:21"},"nodeType":"YulFunctionCall","src":"42005:37:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"41985:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"42058:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"42099:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"42093:5:21"},"nodeType":"YulFunctionCall","src":"42093:11:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"42129:16:21"}],"functionName":{"name":"prepare_store_t_uint64","nodeType":"YulIdentifier","src":"42106:22:21"},"nodeType":"YulFunctionCall","src":"42106:40:21"}],"functionName":{"name":"update_byte_slice_8_shift_12","nodeType":"YulIdentifier","src":"42064:28:21"},"nodeType":"YulFunctionCall","src":"42064:83:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"42051:6:21"},"nodeType":"YulFunctionCall","src":"42051:97:21"},"nodeType":"YulExpressionStatement","src":"42051:97:21"}]},"name":"update_storage_value_offset_12t_uint64_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"41956:4:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"41962:7:21","type":""}],"src":"41896:258:21"},{"body":{"nodeType":"YulBlock","src":"42203:53:21","statements":[{"nodeType":"YulAssignment","src":"42213:36:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42238:3:21","type":"","value":"160"},{"name":"value","nodeType":"YulIdentifier","src":"42243:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"42234:3:21"},"nodeType":"YulFunctionCall","src":"42234:15:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"42213:8:21"}]}]},"name":"shift_left_160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42184:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"42194:8:21","type":""}],"src":"42160:96:21"},{"body":{"nodeType":"YulBlock","src":"42327:219:21","statements":[{"nodeType":"YulVariableDeclaration","src":"42337:70:21","value":{"kind":"number","nodeType":"YulLiteral","src":"42349:58:21","type":"","value":"0xffffffffffffffff0000000000000000000000000000000000000000"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"42341:4:21","type":""}]},{"nodeType":"YulAssignment","src":"42416:36:21","value":{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"42443:8:21"}],"functionName":{"name":"shift_left_160","nodeType":"YulIdentifier","src":"42428:14:21"},"nodeType":"YulFunctionCall","src":"42428:24:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"42416:8:21"}]},{"nodeType":"YulAssignment","src":"42461:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42474:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"42485:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"42481:3:21"},"nodeType":"YulFunctionCall","src":"42481:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42470:3:21"},"nodeType":"YulFunctionCall","src":"42470:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"42461:5:21"}]},{"nodeType":"YulAssignment","src":"42500:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42513:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"42524:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"42534:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42520:3:21"},"nodeType":"YulFunctionCall","src":"42520:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"42510:2:21"},"nodeType":"YulFunctionCall","src":"42510:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"42500:6:21"}]}]},"name":"update_byte_slice_8_shift_20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42300:5:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"42307:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"42320:6:21","type":""}],"src":"42262:284:21"},{"body":{"nodeType":"YulBlock","src":"42627:183:21","statements":[{"nodeType":"YulVariableDeclaration","src":"42637:61:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"42690:7:21"}],"functionName":{"name":"convert_t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"42661:28:21"},"nodeType":"YulFunctionCall","src":"42661:37:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"42641:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"42714:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"42755:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"42749:5:21"},"nodeType":"YulFunctionCall","src":"42749:11:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"42785:16:21"}],"functionName":{"name":"prepare_store_t_uint64","nodeType":"YulIdentifier","src":"42762:22:21"},"nodeType":"YulFunctionCall","src":"42762:40:21"}],"functionName":{"name":"update_byte_slice_8_shift_20","nodeType":"YulIdentifier","src":"42720:28:21"},"nodeType":"YulFunctionCall","src":"42720:83:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"42707:6:21"},"nodeType":"YulFunctionCall","src":"42707:97:21"},"nodeType":"YulExpressionStatement","src":"42707:97:21"}]},"name":"update_storage_value_offset_20t_uint64_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"42612:4:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"42618:7:21","type":""}],"src":"42552:258:21"},{"body":{"nodeType":"YulBlock","src":"42950:1688:21","statements":[{"nodeType":"YulBlock","src":"42961:327:21","statements":[{"nodeType":"YulVariableDeclaration","src":"42976:30:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"42998:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"43004:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42994:3:21"},"nodeType":"YulFunctionCall","src":"42994:12:21"},"variables":[{"name":"memberSlot","nodeType":"YulTypedName","src":"42980:10:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43019:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43043:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"43050:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43039:3:21"},"nodeType":"YulFunctionCall","src":"43039:13:21"},"variables":[{"name":"memberSrcPtr","nodeType":"YulTypedName","src":"43023:12:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43066:46:21","value":{"name":"memberSrcPtr","nodeType":"YulIdentifier","src":"43100:12:21"},"variables":[{"name":"memberValue_0","nodeType":"YulTypedName","src":"43070:13:21","type":""}]},{"nodeType":"YulAssignment","src":"43126:59:21","value":{"arguments":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"43171:13:21"}],"functionName":{"name":"read_from_calldatat_bytes32","nodeType":"YulIdentifier","src":"43143:27:21"},"nodeType":"YulFunctionCall","src":"43143:42:21"},"variableNames":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"43126:13:21"}]},{"expression":{"arguments":[{"name":"memberSlot","nodeType":"YulIdentifier","src":"43251:10:21"},{"name":"memberValue_0","nodeType":"YulIdentifier","src":"43263:13:21"}],"functionName":{"name":"update_storage_value_offset_0t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"43199:51:21"},"nodeType":"YulFunctionCall","src":"43199:78:21"},"nodeType":"YulExpressionStatement","src":"43199:78:21"}]},{"nodeType":"YulBlock","src":"43298:325:21","statements":[{"nodeType":"YulVariableDeclaration","src":"43313:30:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"43335:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"43341:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43331:3:21"},"nodeType":"YulFunctionCall","src":"43331:12:21"},"variables":[{"name":"memberSlot","nodeType":"YulTypedName","src":"43317:10:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43356:34:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43380:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"43387:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43376:3:21"},"nodeType":"YulFunctionCall","src":"43376:14:21"},"variables":[{"name":"memberSrcPtr","nodeType":"YulTypedName","src":"43360:12:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43404:46:21","value":{"name":"memberSrcPtr","nodeType":"YulIdentifier","src":"43438:12:21"},"variables":[{"name":"memberValue_0","nodeType":"YulTypedName","src":"43408:13:21","type":""}]},{"nodeType":"YulAssignment","src":"43464:58:21","value":{"arguments":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"43508:13:21"}],"functionName":{"name":"read_from_calldatat_uint32","nodeType":"YulIdentifier","src":"43481:26:21"},"nodeType":"YulFunctionCall","src":"43481:41:21"},"variableNames":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"43464:13:21"}]},{"expression":{"arguments":[{"name":"memberSlot","nodeType":"YulIdentifier","src":"43586:10:21"},{"name":"memberValue_0","nodeType":"YulIdentifier","src":"43598:13:21"}],"functionName":{"name":"update_storage_value_offset_0t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"43536:49:21"},"nodeType":"YulFunctionCall","src":"43536:76:21"},"nodeType":"YulExpressionStatement","src":"43536:76:21"}]},{"nodeType":"YulBlock","src":"43633:325:21","statements":[{"nodeType":"YulVariableDeclaration","src":"43648:30:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"43670:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"43676:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43666:3:21"},"nodeType":"YulFunctionCall","src":"43666:12:21"},"variables":[{"name":"memberSlot","nodeType":"YulTypedName","src":"43652:10:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43691:34:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43715:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"43722:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43711:3:21"},"nodeType":"YulFunctionCall","src":"43711:14:21"},"variables":[{"name":"memberSrcPtr","nodeType":"YulTypedName","src":"43695:12:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43739:46:21","value":{"name":"memberSrcPtr","nodeType":"YulIdentifier","src":"43773:12:21"},"variables":[{"name":"memberValue_0","nodeType":"YulTypedName","src":"43743:13:21","type":""}]},{"nodeType":"YulAssignment","src":"43799:58:21","value":{"arguments":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"43843:13:21"}],"functionName":{"name":"read_from_calldatat_uint64","nodeType":"YulIdentifier","src":"43816:26:21"},"nodeType":"YulFunctionCall","src":"43816:41:21"},"variableNames":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"43799:13:21"}]},{"expression":{"arguments":[{"name":"memberSlot","nodeType":"YulIdentifier","src":"43921:10:21"},{"name":"memberValue_0","nodeType":"YulIdentifier","src":"43933:13:21"}],"functionName":{"name":"update_storage_value_offset_4t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"43871:49:21"},"nodeType":"YulFunctionCall","src":"43871:76:21"},"nodeType":"YulExpressionStatement","src":"43871:76:21"}]},{"nodeType":"YulBlock","src":"43968:326:21","statements":[{"nodeType":"YulVariableDeclaration","src":"43983:30:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"44005:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"44011:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44001:3:21"},"nodeType":"YulFunctionCall","src":"44001:12:21"},"variables":[{"name":"memberSlot","nodeType":"YulTypedName","src":"43987:10:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"44026:34:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44050:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"44057:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44046:3:21"},"nodeType":"YulFunctionCall","src":"44046:14:21"},"variables":[{"name":"memberSrcPtr","nodeType":"YulTypedName","src":"44030:12:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"44074:46:21","value":{"name":"memberSrcPtr","nodeType":"YulIdentifier","src":"44108:12:21"},"variables":[{"name":"memberValue_0","nodeType":"YulTypedName","src":"44078:13:21","type":""}]},{"nodeType":"YulAssignment","src":"44134:58:21","value":{"arguments":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"44178:13:21"}],"functionName":{"name":"read_from_calldatat_uint64","nodeType":"YulIdentifier","src":"44151:26:21"},"nodeType":"YulFunctionCall","src":"44151:41:21"},"variableNames":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"44134:13:21"}]},{"expression":{"arguments":[{"name":"memberSlot","nodeType":"YulIdentifier","src":"44257:10:21"},{"name":"memberValue_0","nodeType":"YulIdentifier","src":"44269:13:21"}],"functionName":{"name":"update_storage_value_offset_12t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"44206:50:21"},"nodeType":"YulFunctionCall","src":"44206:77:21"},"nodeType":"YulExpressionStatement","src":"44206:77:21"}]},{"nodeType":"YulBlock","src":"44304:327:21","statements":[{"nodeType":"YulVariableDeclaration","src":"44319:30:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"44341:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"44347:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44337:3:21"},"nodeType":"YulFunctionCall","src":"44337:12:21"},"variables":[{"name":"memberSlot","nodeType":"YulTypedName","src":"44323:10:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"44362:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44386:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"44393:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44382:3:21"},"nodeType":"YulFunctionCall","src":"44382:15:21"},"variables":[{"name":"memberSrcPtr","nodeType":"YulTypedName","src":"44366:12:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"44411:46:21","value":{"name":"memberSrcPtr","nodeType":"YulIdentifier","src":"44445:12:21"},"variables":[{"name":"memberValue_0","nodeType":"YulTypedName","src":"44415:13:21","type":""}]},{"nodeType":"YulAssignment","src":"44471:58:21","value":{"arguments":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"44515:13:21"}],"functionName":{"name":"read_from_calldatat_uint64","nodeType":"YulIdentifier","src":"44488:26:21"},"nodeType":"YulFunctionCall","src":"44488:41:21"},"variableNames":[{"name":"memberValue_0","nodeType":"YulIdentifier","src":"44471:13:21"}]},{"expression":{"arguments":[{"name":"memberSlot","nodeType":"YulIdentifier","src":"44594:10:21"},{"name":"memberValue_0","nodeType":"YulIdentifier","src":"44606:13:21"}],"functionName":{"name":"update_storage_value_offset_20t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"44543:50:21"},"nodeType":"YulFunctionCall","src":"44543:77:21"},"nodeType":"YulExpressionStatement","src":"44543:77:21"}]}]},"name":"copy_struct_to_storage_from_t_struct$_WhitelistSale_$4734_calldata_ptr_to_t_struct$_WhitelistSale_$4734_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"42937:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"42943:5:21","type":""}],"src":"42816:1822:21"},{"body":{"nodeType":"YulBlock","src":"44781:143:21","statements":[{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"44904:4:21"},{"name":"value_0","nodeType":"YulIdentifier","src":"44910:7:21"}],"functionName":{"name":"copy_struct_to_storage_from_t_struct$_WhitelistSale_$4734_calldata_ptr_to_t_struct$_WhitelistSale_$4734_storage","nodeType":"YulIdentifier","src":"44792:111:21"},"nodeType":"YulFunctionCall","src":"44792:126:21"},"nodeType":"YulExpressionStatement","src":"44792:126:21"}]},"name":"update_storage_value_offset_0t_struct$_WhitelistSale_$4734_calldata_ptr_to_t_struct$_WhitelistSale_$4734_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"44766:4:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"44772:7:21","type":""}],"src":"44644:280:21"},{"body":{"nodeType":"YulBlock","src":"45056:206:21","statements":[{"nodeType":"YulAssignment","src":"45066:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45078:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45089:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45074:3:21"},"nodeType":"YulFunctionCall","src":"45074:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45066:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45146:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45159:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45170:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45155:3:21"},"nodeType":"YulFunctionCall","src":"45155:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"45102:43:21"},"nodeType":"YulFunctionCall","src":"45102:71:21"},"nodeType":"YulExpressionStatement","src":"45102:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"45227:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45240:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45251:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45236:3:21"},"nodeType":"YulFunctionCall","src":"45236:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"45183:43:21"},"nodeType":"YulFunctionCall","src":"45183:72:21"},"nodeType":"YulExpressionStatement","src":"45183:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45020:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"45032:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45040:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45051:4:21","type":""}],"src":"44930:332:21"},{"body":{"nodeType":"YulBlock","src":"45315:32:21","statements":[{"nodeType":"YulAssignment","src":"45325:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"45336:5:21"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"45325:7:21"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45297:5:21","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"45307:7:21","type":""}],"src":"45268:79:21"},{"body":{"nodeType":"YulBlock","src":"45436:74:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45453:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45496:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"45478:17:21"},"nodeType":"YulFunctionCall","src":"45478:24:21"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"45458:19:21"},"nodeType":"YulFunctionCall","src":"45458:45:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45446:6:21"},"nodeType":"YulFunctionCall","src":"45446:58:21"},"nodeType":"YulExpressionStatement","src":"45446:58:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45424:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45431:3:21","type":""}],"src":"45353:157:21"},{"body":{"nodeType":"YulBlock","src":"45632:140:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45705:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"45714:3:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"45643:61:21"},"nodeType":"YulFunctionCall","src":"45643:75:21"},"nodeType":"YulExpressionStatement","src":"45643:75:21"},{"nodeType":"YulAssignment","src":"45727:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45738:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"45743:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45734:3:21"},"nodeType":"YulFunctionCall","src":"45734:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45727:3:21"}]},{"nodeType":"YulAssignment","src":"45756:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"45763:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45756:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45611:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45617:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45628:3:21","type":""}],"src":"45516:256:21"},{"body":{"nodeType":"YulBlock","src":"45884:64:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45906:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"45914:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45902:3:21"},"nodeType":"YulFunctionCall","src":"45902:14:21"},{"hexValue":"5472616e73666572206e6f7420656e61626c6564","kind":"string","nodeType":"YulLiteral","src":"45918:22:21","type":"","value":"Transfer not enabled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45895:6:21"},"nodeType":"YulFunctionCall","src":"45895:46:21"},"nodeType":"YulExpressionStatement","src":"45895:46:21"}]},"name":"store_literal_in_memory_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45876:6:21","type":""}],"src":"45778:170:21"},{"body":{"nodeType":"YulBlock","src":"46100:220:21","statements":[{"nodeType":"YulAssignment","src":"46110:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46176:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"46181:2:21","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46117:58:21"},"nodeType":"YulFunctionCall","src":"46117:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46110:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46282:3:21"}],"functionName":{"name":"store_literal_in_memory_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023","nodeType":"YulIdentifier","src":"46193:88:21"},"nodeType":"YulFunctionCall","src":"46193:93:21"},"nodeType":"YulExpressionStatement","src":"46193:93:21"},{"nodeType":"YulAssignment","src":"46295:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46306:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"46311:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46302:3:21"},"nodeType":"YulFunctionCall","src":"46302:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46295:3:21"}]}]},"name":"abi_encode_t_stringliteral_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46088:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46096:3:21","type":""}],"src":"45954:366:21"},{"body":{"nodeType":"YulBlock","src":"46497:248:21","statements":[{"nodeType":"YulAssignment","src":"46507:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46519:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46530:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46515:3:21"},"nodeType":"YulFunctionCall","src":"46515:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46507:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46554:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46565:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46550:3:21"},"nodeType":"YulFunctionCall","src":"46550:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46573:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"46579:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46569:3:21"},"nodeType":"YulFunctionCall","src":"46569:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46543:6:21"},"nodeType":"YulFunctionCall","src":"46543:47:21"},"nodeType":"YulExpressionStatement","src":"46543:47:21"},{"nodeType":"YulAssignment","src":"46599:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46733:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46607:124:21"},"nodeType":"YulFunctionCall","src":"46607:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46599:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46477:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46492:4:21","type":""}],"src":"46326:419:21"},{"body":{"nodeType":"YulBlock","src":"46905:288:21","statements":[{"nodeType":"YulAssignment","src":"46915:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46927:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46938:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46923:3:21"},"nodeType":"YulFunctionCall","src":"46923:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46915:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46995:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47008:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47019:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47004:3:21"},"nodeType":"YulFunctionCall","src":"47004:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"46951:43:21"},"nodeType":"YulFunctionCall","src":"46951:71:21"},"nodeType":"YulExpressionStatement","src":"46951:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"47076:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47089:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47100:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47085:3:21"},"nodeType":"YulFunctionCall","src":"47085:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"47032:43:21"},"nodeType":"YulFunctionCall","src":"47032:72:21"},"nodeType":"YulExpressionStatement","src":"47032:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"47158:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47171:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47182:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47167:3:21"},"nodeType":"YulFunctionCall","src":"47167:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"47114:43:21"},"nodeType":"YulFunctionCall","src":"47114:72:21"},"nodeType":"YulExpressionStatement","src":"47114:72:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46861:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"46873:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"46881:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46889:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46900:4:21","type":""}],"src":"46751:442:21"},{"body":{"nodeType":"YulBlock","src":"47257:40:21","statements":[{"nodeType":"YulAssignment","src":"47268:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47284:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47278:5:21"},"nodeType":"YulFunctionCall","src":"47278:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"47268:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47240:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"47250:6:21","type":""}],"src":"47199:98:21"},{"body":{"nodeType":"YulBlock","src":"47398:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47415:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"47420:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47408:6:21"},"nodeType":"YulFunctionCall","src":"47408:19:21"},"nodeType":"YulExpressionStatement","src":"47408:19:21"},{"nodeType":"YulAssignment","src":"47436:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47455:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"47460:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47451:3:21"},"nodeType":"YulFunctionCall","src":"47451:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"47436:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47370:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"47375:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"47386:11:21","type":""}],"src":"47303:168:21"},{"body":{"nodeType":"YulBlock","src":"47567:283:21","statements":[{"nodeType":"YulVariableDeclaration","src":"47577:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47623:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"47591:31:21"},"nodeType":"YulFunctionCall","src":"47591:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"47581:6:21","type":""}]},{"nodeType":"YulAssignment","src":"47638:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47703:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"47708:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47645:57:21"},"nodeType":"YulFunctionCall","src":"47645:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47638:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47763:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"47770:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47759:3:21"},"nodeType":"YulFunctionCall","src":"47759:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"47777:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"47782:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"47724:34:21"},"nodeType":"YulFunctionCall","src":"47724:65:21"},"nodeType":"YulExpressionStatement","src":"47724:65:21"},{"nodeType":"YulAssignment","src":"47798:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47809:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"47836:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"47814:21:21"},"nodeType":"YulFunctionCall","src":"47814:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47805:3:21"},"nodeType":"YulFunctionCall","src":"47805:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47798:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47548:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"47555:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47563:3:21","type":""}],"src":"47477:373:21"},{"body":{"nodeType":"YulBlock","src":"48056:440:21","statements":[{"nodeType":"YulAssignment","src":"48066:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48078:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"48089:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48074:3:21"},"nodeType":"YulFunctionCall","src":"48074:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48066:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"48147:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48160:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"48171:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48156:3:21"},"nodeType":"YulFunctionCall","src":"48156:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"48103:43:21"},"nodeType":"YulFunctionCall","src":"48103:71:21"},"nodeType":"YulExpressionStatement","src":"48103:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"48228:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48241:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"48252:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48237:3:21"},"nodeType":"YulFunctionCall","src":"48237:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"48184:43:21"},"nodeType":"YulFunctionCall","src":"48184:72:21"},"nodeType":"YulExpressionStatement","src":"48184:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"48310:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48323:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"48334:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48319:3:21"},"nodeType":"YulFunctionCall","src":"48319:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"48266:43:21"},"nodeType":"YulFunctionCall","src":"48266:72:21"},"nodeType":"YulExpressionStatement","src":"48266:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48359:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"48370:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48355:3:21"},"nodeType":"YulFunctionCall","src":"48355:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48379:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"48385:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48375:3:21"},"nodeType":"YulFunctionCall","src":"48375:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48348:6:21"},"nodeType":"YulFunctionCall","src":"48348:48:21"},"nodeType":"YulExpressionStatement","src":"48348:48:21"},{"nodeType":"YulAssignment","src":"48405:84:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"48475:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"48484:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48413:61:21"},"nodeType":"YulFunctionCall","src":"48413:76:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48405:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48004:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"48016:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"48024:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"48032:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"48040:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48051:4:21","type":""}],"src":"47856:640:21"},{"body":{"nodeType":"YulBlock","src":"48564:79:21","statements":[{"nodeType":"YulAssignment","src":"48574:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48589:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48583:5:21"},"nodeType":"YulFunctionCall","src":"48583:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"48574:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48631:5:21"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"48605:25:21"},"nodeType":"YulFunctionCall","src":"48605:32:21"},"nodeType":"YulExpressionStatement","src":"48605:32:21"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48542:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"48550:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"48558:5:21","type":""}],"src":"48502:141:21"},{"body":{"nodeType":"YulBlock","src":"48725:273:21","statements":[{"body":{"nodeType":"YulBlock","src":"48771:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"48773:77:21"},"nodeType":"YulFunctionCall","src":"48773:79:21"},"nodeType":"YulExpressionStatement","src":"48773:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"48746:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"48755:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48742:3:21"},"nodeType":"YulFunctionCall","src":"48742:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"48767:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"48738:3:21"},"nodeType":"YulFunctionCall","src":"48738:32:21"},"nodeType":"YulIf","src":"48735:119:21"},{"nodeType":"YulBlock","src":"48864:127:21","statements":[{"nodeType":"YulVariableDeclaration","src":"48879:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"48893:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"48883:6:21","type":""}]},{"nodeType":"YulAssignment","src":"48908:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48953:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"48964:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48949:3:21"},"nodeType":"YulFunctionCall","src":"48949:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"48973:7:21"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"48918:30:21"},"nodeType":"YulFunctionCall","src":"48918:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"48908:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48695:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"48706:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"48718:6:21","type":""}],"src":"48649:349:21"},{"body":{"nodeType":"YulBlock","src":"49032:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49049:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49052:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49042:6:21"},"nodeType":"YulFunctionCall","src":"49042:88:21"},"nodeType":"YulExpressionStatement","src":"49042:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49146:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"49149:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49139:6:21"},"nodeType":"YulFunctionCall","src":"49139:15:21"},"nodeType":"YulExpressionStatement","src":"49139:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49170:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49173:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49163:6:21"},"nodeType":"YulFunctionCall","src":"49163:15:21"},"nodeType":"YulExpressionStatement","src":"49163:15:21"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"49004:180:21"},{"body":{"nodeType":"YulBlock","src":"49250:77:21","statements":[{"nodeType":"YulAssignment","src":"49260:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"49275:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49269:5:21"},"nodeType":"YulFunctionCall","src":"49269:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"49260:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49315:5:21"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"49291:23:21"},"nodeType":"YulFunctionCall","src":"49291:30:21"},"nodeType":"YulExpressionStatement","src":"49291:30:21"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"49228:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"49236:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"49244:5:21","type":""}],"src":"49190:137:21"},{"body":{"nodeType":"YulBlock","src":"49407:271:21","statements":[{"body":{"nodeType":"YulBlock","src":"49453:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"49455:77:21"},"nodeType":"YulFunctionCall","src":"49455:79:21"},"nodeType":"YulExpressionStatement","src":"49455:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"49428:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"49437:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49424:3:21"},"nodeType":"YulFunctionCall","src":"49424:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"49449:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"49420:3:21"},"nodeType":"YulFunctionCall","src":"49420:32:21"},"nodeType":"YulIf","src":"49417:119:21"},{"nodeType":"YulBlock","src":"49546:125:21","statements":[{"nodeType":"YulVariableDeclaration","src":"49561:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"49575:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"49565:6:21","type":""}]},{"nodeType":"YulAssignment","src":"49590:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49633:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"49644:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49629:3:21"},"nodeType":"YulFunctionCall","src":"49629:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"49653:7:21"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"49600:28:21"},"nodeType":"YulFunctionCall","src":"49600:61:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"49590:6:21"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49377:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"49388:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"49400:6:21","type":""}],"src":"49333:345:21"},{"body":{"nodeType":"YulBlock","src":"49712:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49729:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49732:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49722:6:21"},"nodeType":"YulFunctionCall","src":"49722:88:21"},"nodeType":"YulExpressionStatement","src":"49722:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49826:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"49829:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49819:6:21"},"nodeType":"YulFunctionCall","src":"49819:15:21"},"nodeType":"YulExpressionStatement","src":"49819:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49850:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49853:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49843:6:21"},"nodeType":"YulFunctionCall","src":"49843:15:21"},"nodeType":"YulExpressionStatement","src":"49843:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"49684:180:21"},{"body":{"nodeType":"YulBlock","src":"49983:34:21","statements":[{"nodeType":"YulAssignment","src":"49993:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"50008:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"49993:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"49955:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"49960:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"49971:11:21","type":""}],"src":"49870:147:21"},{"body":{"nodeType":"YulBlock","src":"50131:278:21","statements":[{"nodeType":"YulVariableDeclaration","src":"50141:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50187:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"50155:31:21"},"nodeType":"YulFunctionCall","src":"50155:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"50145:6:21","type":""}]},{"nodeType":"YulAssignment","src":"50202:95:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50285:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"50290:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"50209:75:21"},"nodeType":"YulFunctionCall","src":"50209:88:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50202:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50345:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"50352:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50341:3:21"},"nodeType":"YulFunctionCall","src":"50341:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"50359:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"50364:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"50306:34:21"},"nodeType":"YulFunctionCall","src":"50306:65:21"},"nodeType":"YulExpressionStatement","src":"50306:65:21"},{"nodeType":"YulAssignment","src":"50380:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50391:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"50396:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50387:3:21"},"nodeType":"YulFunctionCall","src":"50387:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50380:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50112:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"50119:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50127:3:21","type":""}],"src":"50023:386:21"},{"body":{"nodeType":"YulBlock","src":"50549:137:21","statements":[{"nodeType":"YulAssignment","src":"50560:100:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"50647:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"50656:3:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"50567:79:21"},"nodeType":"YulFunctionCall","src":"50567:93:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50560:3:21"}]},{"nodeType":"YulAssignment","src":"50670:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"50677:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50670:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"50528:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"50534:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50545:3:21","type":""}],"src":"50415:271:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_uint256t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$877_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$877_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint32_t_uint64_t_uint64_t_uint64__to_t_bytes32_t_uint32_t_uint64_t_uint64_t_uint64__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct KIPNode.PublicSale\n    function abi_decode_t_struct$_PublicSale_$4723_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 192) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_uint256t_struct$_PublicSale_$4723_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_struct$_PublicSale_$4723_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint32_t_uint32_t_uint64_t_uint64_t_uint64__to_t_uint256_t_uint32_t_uint32_t_uint64_t_uint64_t_uint64__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    // struct KIPNode.WhitelistSale\n    function abi_decode_t_struct$_WhitelistSale_$4734_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 160) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_uint256t_struct$_WhitelistSale_$4734_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_struct$_WhitelistSale_$4734_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function convert_t_uint64_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_t_uint64_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_rational_0_by_1_t_bool_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_uint256_t_uint256_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_uint256_t_uint64__to_t_uint256_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_string_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len) {\n\n        let newLen := array_length_t_string_calldata_ptr(src, len)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := calldataload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x00() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x00)\n        revert(0, 0x24)\n    }\n\n    function read_from_calldatat_uint256(ptr) -> returnValue {\n\n        let value := calldataload(ptr)\n        validator_revert_t_uint256(value)\n\n        returnValue :=\n\n        value\n\n    }\n\n    function shift_left_0(value) -> newValue {\n        newValue :=\n\n        shl(0, value)\n\n    }\n\n    function update_byte_slice_32_shift_0(value, toInsert) -> result {\n        let mask := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        toInsert := shift_left_0(toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function update_storage_value_offset_0t_uint256_to_t_uint256(slot, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_32_shift_0(sload(slot), prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function read_from_calldatat_uint32(ptr) -> returnValue {\n\n        let value := calldataload(ptr)\n        validator_revert_t_uint32(value)\n\n        returnValue :=\n\n        value\n\n    }\n\n    function update_byte_slice_4_shift_0(value, toInsert) -> result {\n        let mask := 0xffffffff\n        toInsert := shift_left_0(toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint32_to_t_uint32(value) -> converted {\n        converted := cleanup_t_uint32(identity(cleanup_t_uint32(value)))\n    }\n\n    function prepare_store_t_uint32(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_offset_0t_uint32_to_t_uint32(slot, value_0) {\n        let convertedValue_0 := convert_t_uint32_to_t_uint32(value_0)\n        sstore(slot, update_byte_slice_4_shift_0(sload(slot), prepare_store_t_uint32(convertedValue_0)))\n    }\n\n    function shift_left_32(value) -> newValue {\n        newValue :=\n\n        shl(32, value)\n\n    }\n\n    function update_byte_slice_4_shift_4(value, toInsert) -> result {\n        let mask := 0xffffffff00000000\n        toInsert := shift_left_32(toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function update_storage_value_offset_4t_uint32_to_t_uint32(slot, value_0) {\n        let convertedValue_0 := convert_t_uint32_to_t_uint32(value_0)\n        sstore(slot, update_byte_slice_4_shift_4(sload(slot), prepare_store_t_uint32(convertedValue_0)))\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function read_from_calldatat_uint64(ptr) -> returnValue {\n\n        let value := calldataload(ptr)\n        validator_revert_t_uint64(value)\n\n        returnValue :=\n\n        value\n\n    }\n\n    function shift_left_64(value) -> newValue {\n        newValue :=\n\n        shl(64, value)\n\n    }\n\n    function update_byte_slice_8_shift_8(value, toInsert) -> result {\n        let mask := 0xffffffffffffffff0000000000000000\n        toInsert := shift_left_64(toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint64_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_uint64(value)))\n    }\n\n    function prepare_store_t_uint64(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_offset_8t_uint64_to_t_uint64(slot, value_0) {\n        let convertedValue_0 := convert_t_uint64_to_t_uint64(value_0)\n        sstore(slot, update_byte_slice_8_shift_8(sload(slot), prepare_store_t_uint64(convertedValue_0)))\n    }\n\n    function shift_left_128(value) -> newValue {\n        newValue :=\n\n        shl(128, value)\n\n    }\n\n    function update_byte_slice_8_shift_16(value, toInsert) -> result {\n        let mask := 0xffffffffffffffff00000000000000000000000000000000\n        toInsert := shift_left_128(toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function update_storage_value_offset_16t_uint64_to_t_uint64(slot, value_0) {\n        let convertedValue_0 := convert_t_uint64_to_t_uint64(value_0)\n        sstore(slot, update_byte_slice_8_shift_16(sload(slot), prepare_store_t_uint64(convertedValue_0)))\n    }\n\n    function shift_left_192(value) -> newValue {\n        newValue :=\n\n        shl(192, value)\n\n    }\n\n    function update_byte_slice_8_shift_24(value, toInsert) -> result {\n        let mask := 0xffffffffffffffff000000000000000000000000000000000000000000000000\n        toInsert := shift_left_192(toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function update_storage_value_offset_24t_uint64_to_t_uint64(slot, value_0) {\n        let convertedValue_0 := convert_t_uint64_to_t_uint64(value_0)\n        sstore(slot, update_byte_slice_8_shift_24(sload(slot), prepare_store_t_uint64(convertedValue_0)))\n    }\n\n    function copy_struct_to_storage_from_t_struct$_PublicSale_$4723_calldata_ptr_to_t_struct$_PublicSale_$4723_storage(slot, value) {\n\n        {\n\n            let memberSlot := add(slot, 0)\n            let memberSrcPtr := add(value, 0)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint256(memberValue_0)\n\n            update_storage_value_offset_0t_uint256_to_t_uint256(memberSlot, memberValue_0)\n\n        }\n\n        {\n\n            let memberSlot := add(slot, 1)\n            let memberSrcPtr := add(value, 32)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint32(memberValue_0)\n\n            update_storage_value_offset_0t_uint32_to_t_uint32(memberSlot, memberValue_0)\n\n        }\n\n        {\n\n            let memberSlot := add(slot, 1)\n            let memberSrcPtr := add(value, 64)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint32(memberValue_0)\n\n            update_storage_value_offset_4t_uint32_to_t_uint32(memberSlot, memberValue_0)\n\n        }\n\n        {\n\n            let memberSlot := add(slot, 1)\n            let memberSrcPtr := add(value, 96)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint64(memberValue_0)\n\n            update_storage_value_offset_8t_uint64_to_t_uint64(memberSlot, memberValue_0)\n\n        }\n\n        {\n\n            let memberSlot := add(slot, 1)\n            let memberSrcPtr := add(value, 128)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint64(memberValue_0)\n\n            update_storage_value_offset_16t_uint64_to_t_uint64(memberSlot, memberValue_0)\n\n        }\n\n        {\n\n            let memberSlot := add(slot, 1)\n            let memberSrcPtr := add(value, 160)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint64(memberValue_0)\n\n            update_storage_value_offset_24t_uint64_to_t_uint64(memberSlot, memberValue_0)\n\n        }\n\n    }\n\n    function update_storage_value_offset_0t_struct$_PublicSale_$4723_calldata_ptr_to_t_struct$_PublicSale_$4723_storage(slot, value_0) {\n\n        copy_struct_to_storage_from_t_struct$_PublicSale_$4723_calldata_ptr_to_t_struct$_PublicSale_$4723_storage(slot, value_0)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_string_calldata_ptr__to_t_uint256_t_uint256_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value4, value5,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function read_from_calldatat_bytes32(ptr) -> returnValue {\n\n        let value := calldataload(ptr)\n        validator_revert_t_bytes32(value)\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_t_bytes32_to_t_bytes32(value) -> converted {\n        converted := cleanup_t_bytes32(value)\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function prepare_store_t_bytes32(value) -> ret {\n        ret := shift_right_0_unsigned(value)\n    }\n\n    function update_storage_value_offset_0t_bytes32_to_t_bytes32(slot, value_0) {\n        let convertedValue_0 := convert_t_bytes32_to_t_bytes32(value_0)\n        sstore(slot, update_byte_slice_32_shift_0(sload(slot), prepare_store_t_bytes32(convertedValue_0)))\n    }\n\n    function update_byte_slice_8_shift_4(value, toInsert) -> result {\n        let mask := 0xffffffffffffffff00000000\n        toInsert := shift_left_32(toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function update_storage_value_offset_4t_uint64_to_t_uint64(slot, value_0) {\n        let convertedValue_0 := convert_t_uint64_to_t_uint64(value_0)\n        sstore(slot, update_byte_slice_8_shift_4(sload(slot), prepare_store_t_uint64(convertedValue_0)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function update_byte_slice_8_shift_12(value, toInsert) -> result {\n        let mask := 0xffffffffffffffff000000000000000000000000\n        toInsert := shift_left_96(toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function update_storage_value_offset_12t_uint64_to_t_uint64(slot, value_0) {\n        let convertedValue_0 := convert_t_uint64_to_t_uint64(value_0)\n        sstore(slot, update_byte_slice_8_shift_12(sload(slot), prepare_store_t_uint64(convertedValue_0)))\n    }\n\n    function shift_left_160(value) -> newValue {\n        newValue :=\n\n        shl(160, value)\n\n    }\n\n    function update_byte_slice_8_shift_20(value, toInsert) -> result {\n        let mask := 0xffffffffffffffff0000000000000000000000000000000000000000\n        toInsert := shift_left_160(toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function update_storage_value_offset_20t_uint64_to_t_uint64(slot, value_0) {\n        let convertedValue_0 := convert_t_uint64_to_t_uint64(value_0)\n        sstore(slot, update_byte_slice_8_shift_20(sload(slot), prepare_store_t_uint64(convertedValue_0)))\n    }\n\n    function copy_struct_to_storage_from_t_struct$_WhitelistSale_$4734_calldata_ptr_to_t_struct$_WhitelistSale_$4734_storage(slot, value) {\n\n        {\n\n            let memberSlot := add(slot, 0)\n            let memberSrcPtr := add(value, 0)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_bytes32(memberValue_0)\n\n            update_storage_value_offset_0t_bytes32_to_t_bytes32(memberSlot, memberValue_0)\n\n        }\n\n        {\n\n            let memberSlot := add(slot, 1)\n            let memberSrcPtr := add(value, 32)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint32(memberValue_0)\n\n            update_storage_value_offset_0t_uint32_to_t_uint32(memberSlot, memberValue_0)\n\n        }\n\n        {\n\n            let memberSlot := add(slot, 1)\n            let memberSrcPtr := add(value, 64)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint64(memberValue_0)\n\n            update_storage_value_offset_4t_uint64_to_t_uint64(memberSlot, memberValue_0)\n\n        }\n\n        {\n\n            let memberSlot := add(slot, 1)\n            let memberSrcPtr := add(value, 96)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint64(memberValue_0)\n\n            update_storage_value_offset_12t_uint64_to_t_uint64(memberSlot, memberValue_0)\n\n        }\n\n        {\n\n            let memberSlot := add(slot, 1)\n            let memberSrcPtr := add(value, 128)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint64(memberValue_0)\n\n            update_storage_value_offset_20t_uint64_to_t_uint64(memberSlot, memberValue_0)\n\n        }\n\n    }\n\n    function update_storage_value_offset_0t_struct$_WhitelistSale_$4734_calldata_ptr_to_t_struct$_WhitelistSale_$4734_storage(slot, value_0) {\n\n        copy_struct_to_storage_from_t_struct$_WhitelistSale_$4734_calldata_ptr_to_t_struct$_WhitelistSale_$4734_storage(slot, value_0)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer not enabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4890335c87e72b5881e9408cb351bea8f085825c3e275e56eb065eae70246023_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101fb5760003560e01c80636c0360eb1161011a578063acb889ee116100ad578063c87b56dd1161007c578063c87b56dd1461059e578063e985e9c5146105ce578063f1ce5fe0146105fe578063f2fde38b14610633578063fcf9e1f81461064f576101fb565b8063acb889ee1461052c578063af3a19c714610548578063b824054014610566578063b88d4fde14610582576101fb565b806395d89b41116100e957806395d89b41146104a25780639fe9f623146104c0578063a22cb465146104dc578063a4532fb9146104f8576101fb565b80636c0360eb1461042c57806370a082311461044a578063715018a61461047a5780638da5cb5b14610484576101fb565b80633013ce29116101925780634cd412d5116101615780634cd412d5146103a657806355f804b3146103c45780636352211e146103e05780636a326ab114610410576101fb565b80633013ce291461031e57806333d9f1fa1461033c578063378077a81461036c57806342842e0e1461038a576101fb565b80631aca45a7116101ce5780631aca45a71461029a5780631bb08048146102ca5780631d68e8ce146102e657806323b872dd14610302576101fb565b806301ffc9a71461020057806306fdde0314610230578063081812fc1461024e578063095ea7b31461027e575b600080fd5b61021a600480360381019061021591906131a3565b61066b565b60405161022791906131eb565b60405180910390f35b61023861074d565b6040516102459190613296565b60405180910390f35b610268600480360381019061026391906132ee565b6107df565b604051610275919061335c565b60405180910390f35b610298600480360381019061029391906133a3565b6107fb565b005b6102b460048036038101906102af91906133e3565b610811565b6040516102c19190613432565b60405180910390f35b6102e460048036038101906102df919061344d565b610836565b005b61030060048036038101906102fb91906134df565b6108e8565b005b61031c60048036038101906103179190613579565b610e32565b005b610326610f34565b604051610333919061362b565b60405180910390f35b610356600480360381019061035191906133e3565b610f5a565b6040516103639190613432565b60405180910390f35b610374610f7f565b604051610381919061335c565b60405180910390f35b6103a4600480360381019061039f9190613579565b610fa5565b005b6103ae610fc5565b6040516103bb91906131eb565b60405180910390f35b6103de60048036038101906103d9919061369c565b610fd8565b005b6103fa60048036038101906103f591906132ee565b611033565b604051610407919061335c565b60405180910390f35b61042a6004803603810190610425919061344d565b611045565b005b6104346110f7565b6040516104419190613296565b60405180910390f35b610464600480360381019061045f919061344d565b611185565b6040516104719190613432565b60405180910390f35b61048261123f565b005b61048c611253565b604051610499919061335c565b60405180910390f35b6104aa61127d565b6040516104b79190613296565b60405180910390f35b6104da60048036038101906104d59190613715565b61130f565b005b6104f660048036038101906104f19190613742565b611334565b005b610512600480360381019061050d91906132ee565b61134a565b6040516105239594939291906137dd565b60405180910390f35b61054660048036038101906105419190613854565b6113cc565b005b610550611450565b60405161055d9190613432565b60405180910390f35b610580600480360381019061057b9190613894565b611455565b005b61059c60048036038101906105979190613a4c565b611a56565b005b6105b860048036038101906105b391906132ee565b611a73565b6040516105c59190613296565b60405180910390f35b6105e860048036038101906105e39190613acf565b611adc565b6040516105f591906131eb565b60405180910390f35b610618600480360381019061061391906132ee565b611b70565b60405161062a96959493929190613b0f565b60405180910390f35b61064d6004803603810190610648919061344d565b611c08565b005b61066960048036038101906106649190613b8f565b611c8e565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061073657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610746575061074582611d12565b5b9050919050565b60606000805461075c90613bfe565b80601f016020809104026020016040519081016040528092919081815260200182805461078890613bfe565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b60006107ea82611d7c565b506107f482611e04565b9050919050565b61080d8282610808611e41565b611e49565b5050565b600c602052816000526040600020602052806000526040600020600091509150505481565b61083e611e5b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a4576040517f9926074200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008614806108f75750602686115b8061092e5750600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b806109395750600084145b15610970576040517f41abc80100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60008881526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160049054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160018201600c9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505090506000610a62611e41565b9050816060015167ffffffffffffffff16421080610a8d5750816080015167ffffffffffffffff1642115b15610ad957816060015182608001516040517fcbaef561000000000000000000000000000000000000000000000000000000008152600401610ad0929190613c60565b60405180910390fd5b8486600c60008b815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b369190613cb8565b1180610b645750816020015163ffffffff1686836040015167ffffffffffffffff16610b629190613cb8565b115b15610b9b576040517fdad4f32900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ba88882878787611ee2565b610bde576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85600c60008a815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c3e9190613cb8565b9250508190555085600b60008a815260200190815260200160002060010160048282829054906101000a900467ffffffffffffffff16610c7e9190613cec565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600190505b868111610d585760086000815480929190610cc590613d28565b9190505550610cd688600854611fa4565b8773ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fbb9ad13c0de1a777020713212854c8c286c0c260f459a4f53aa84a65e3bc0db28b60085460006001604051610d3d9493929190613dd1565b60405180910390a38080610d5090613d28565b915050610cab565b508073ffffffffffffffffffffffffffffffffffffffff167f5bd7001d995bb594c91e6abb25ddbeaf9c358906be6aa0fadb5109f567609931896001600c60008d815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b60008e815260200190815260200160002060010160049054906101000a900467ffffffffffffffff16604051610e209493929190613e29565b60405180910390a25050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea45760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610e9b919061335c565b60405180910390fd5b6000610eb88383610eb3611e41565b611fc2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f2e578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610f2593929190613e6e565b60405180910390fd5b50505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d602052816000526040600020602052806000526040600020600091509150505481565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610fc083838360405180602001604052806000815250611a56565b505050565b600e60009054906101000a900460ff1681565b610fe0611e5b565b6000828290500361101d576040517f3ba0191100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181600f918261102e929190614052565b505050565b600061103e82611d7c565b9050919050565b61104d611e5b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110b3576040517f9926074200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600f805461110490613bfe565b80601f016020809104026020016040519081016040528092919081815260200182805461113090613bfe565b801561117d5780601f106111525761010080835404028352916020019161117d565b820191906000526020600020905b81548152906001019060200180831161116057829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111f85760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016111ef919061335c565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611247611e5b565b6112516000612063565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461128c90613bfe565b80601f01602080910402602001604051908101604052809291908181526020018280546112b890613bfe565b80156113055780601f106112da57610100808354040283529160200191611305565b820191906000526020600020905b8154815290600101906020018083116112e857829003601f168201915b5050505050905090565b611317611e5b565b80600e60006101000a81548160ff02191690831515021790555050565b61134661133f611e41565b8383612129565b5050565b600b6020528060005260406000206000915090508060000154908060010160009054906101000a900463ffffffff16908060010160049054906101000a900467ffffffffffffffff169080600101600c9054906101000a900467ffffffffffffffff16908060010160149054906101000a900467ffffffffffffffff16905085565b6113d4611e5b565b60008214806113e35750602682115b1561142957600160266040517fd40d76ca00000000000000000000000000000000000000000000000000000000815260040161142092919061415d565b60405180910390fd5b80600a60008481526020019081526020016000208181611449919061456b565b9050505050565b602681565b60008514806114645750602685115b8061146f5750600083145b806114a65750600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b156114dd576040517f41abc80100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600a60008781526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160189054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905060006115f5611e41565b9050816080015167ffffffffffffffff1642108061162057508160a0015167ffffffffffffffff1642115b1561166c5781608001518260a001516040517fcbaef561000000000000000000000000000000000000000000000000000000008152600401611663929190613c60565b60405180910390fd5b60008260000151036116aa576040517f1140cf7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816040015163ffffffff1685600d60008a815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117119190613cb8565b118061173f5750816020015163ffffffff1685836060015167ffffffffffffffff1661173d9190613cb8565b115b15611776576040517fdad4f32900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600a600089815260200190815260200160002060010160088282829054906101000a900467ffffffffffffffff166117af9190613cec565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555084600d600089815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118359190613cb8565b92505081905550600085836000015161184e9190614579565b90506118c182600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612298909392919063ffffffff16565b6000600190505b86811161197c57600860008154809291906118e290613d28565b91905055506118f388600854611fa4565b8773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fbb9ad13c0de1a777020713212854c8c286c0c260f459a4f53aa84a65e3bc0db28b600854886000015160008c8c604051611961969594939291906145e8565b60405180910390a3808061197490613d28565b9150506118c8565b508173ffffffffffffffffffffffffffffffffffffffff167f5bd7001d995bb594c91e6abb25ddbeaf9c358906be6aa0fadb5109f567609931896000600d60008d815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a60008e815260200190815260200160002060010160089054906101000a900467ffffffffffffffff16604051611a449493929190613e29565b60405180910390a25050505050505050565b611a61848484610e32565b611a6d8484848461231a565b50505050565b6060611a7e82611d7c565b506000611a896124d1565b90506000815111611aa95760405180602001604052806000815250611ad4565b80611ab384612563565b604051602001611ac4929190614680565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600a6020528060005260406000206000915090508060000154908060010160009054906101000a900463ffffffff16908060010160049054906101000a900463ffffffff16908060010160089054906101000a900467ffffffffffffffff16908060010160109054906101000a900467ffffffffffffffff16908060010160189054906101000a900467ffffffffffffffff16905086565b611c10611e5b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611c825760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611c79919061335c565b60405180910390fd5b611c8b81612063565b50565b611c96611e5b565b6000821480611ca55750602682115b15611ceb57600160266040517fd40d76ca000000000000000000000000000000000000000000000000000000008152600401611ce292919061415d565b60405180910390fd5b80600b60008481526020019081526020016000208181611d0b91906148f3565b9050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080611d8883612631565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611dfb57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611df29190613432565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b611e56838383600161266e565b505050565b611e63611e41565b73ffffffffffffffffffffffffffffffffffffffff16611e81611253565b73ffffffffffffffffffffffffffffffffffffffff1614611ee057611ea4611e41565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611ed7919061335c565b60405180910390fd5b565b6000808585604051602001611ef8929190614901565b60405160208183030381529060405280519060200120604051602001611f1e919061494b565b604051602081830303815290604052805190602001209050611f98848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050600b60008a81526020019081526020016000206000015483612833565b91505095945050505050565b611fbe82826040518060200160405280600081525061284a565b5050565b600080611fd0858585612866565b9050600e60009054906101000a900460ff16806120195750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b612058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204f906149b2565b60405180910390fd5b809150509392505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361219a57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401612191919061335c565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161228b91906131eb565b60405180910390a3505050565b612314848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016122cd939291906149d2565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612a80565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156124cb578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261235e611e41565b8685856040518563ffffffff1660e01b81526004016123809493929190614a5e565b6020604051808303816000875af19250505080156123bc57506040513d601f19601f820116820180604052508101906123b99190614abf565b60015b612440573d80600081146123ec576040519150601f19603f3d011682016040523d82523d6000602084013e6123f1565b606091505b50600081510361243857836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161242f919061335c565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146124c957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016124c0919061335c565b60405180910390fd5b505b50505050565b6060600f80546124e090613bfe565b80601f016020809104026020016040519081016040528092919081815260200182805461250c90613bfe565b80156125595780601f1061252e57610100808354040283529160200191612559565b820191906000526020600020905b81548152906001019060200180831161253c57829003601f168201915b5050505050905090565b60606000600161257284612b17565b01905060008167ffffffffffffffff81111561259157612590613921565b5b6040519080825280601f01601f1916602001820160405280156125c35781602001600182028036833780820191505090505b509050600082602001820190505b600115612626578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161261a57612619614aec565b5b049450600085036125d1575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806126a75750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156127db5760006126b784611d7c565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561272257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561273557506127338184611adc565b155b1561277757826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161276e919061335c565b60405180910390fd5b81156127d957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000826128408584612c6a565b1490509392505050565b6128548383612cc0565b612861600084848461231a565b505050565b60008061287284612631565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146128b4576128b3818486612db9565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612945576128f660008560008061266e565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146129c8576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000612aab828473ffffffffffffffffffffffffffffffffffffffff16612e7d90919063ffffffff16565b90506000815114158015612ad0575080806020019051810190612ace9190614b30565b155b15612b1257826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401612b09919061335c565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612b75577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381612b6b57612b6a614aec565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612bb2576d04ee2d6d415b85acef81000000008381612ba857612ba7614aec565b5b0492506020810190505b662386f26fc100008310612be157662386f26fc100008381612bd757612bd6614aec565b5b0492506010810190505b6305f5e1008310612c0a576305f5e1008381612c0057612bff614aec565b5b0492506008810190505b6127108310612c2f576127108381612c2557612c24614aec565b5b0492506004810190505b60648310612c525760648381612c4857612c47614aec565b5b0492506002810190505b600a8310612c61576001810190505b80915050919050565b60008082905060005b8451811015612cb557612ca082868381518110612c9357612c92614b5d565b5b6020026020010151612e93565b91508080612cad90613d28565b915050612c73565b508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612d325760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401612d29919061335c565b60405180910390fd5b6000612d4083836000611fc2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612db45760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401612dab919061335c565b60405180910390fd5b505050565b612dc4838383612ebe565b612e7857600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612e3957806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401612e309190613432565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401612e6f929190614901565b60405180910390fd5b505050565b6060612e8b83836000612f7f565b905092915050565b6000818310612eab57612ea6828461304c565b612eb6565b612eb5838361304c565b5b905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015612f7657508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612f375750612f368484611adc565b5b80612f7557508273ffffffffffffffffffffffffffffffffffffffff16612f5d83611e04565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b606081471015612fc657306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401612fbd919061335c565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051612fef9190614bc8565b60006040518083038185875af1925050503d806000811461302c576040519150601f19603f3d011682016040523d82523d6000602084013e613031565b606091505b5091509150613041868383613063565b925050509392505050565b600082600052816020526040600020905092915050565b60608261307857613073826130f2565b6130ea565b600082511480156130a0575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156130e257836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016130d9919061335c565b60405180910390fd5b8190506130eb565b5b9392505050565b6000815111156131055780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6131808161314b565b811461318b57600080fd5b50565b60008135905061319d81613177565b92915050565b6000602082840312156131b9576131b8613141565b5b60006131c78482850161318e565b91505092915050565b60008115159050919050565b6131e5816131d0565b82525050565b600060208201905061320060008301846131dc565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613240578082015181840152602081019050613225565b60008484015250505050565b6000601f19601f8301169050919050565b600061326882613206565b6132728185613211565b9350613282818560208601613222565b61328b8161324c565b840191505092915050565b600060208201905081810360008301526132b0818461325d565b905092915050565b6000819050919050565b6132cb816132b8565b81146132d657600080fd5b50565b6000813590506132e8816132c2565b92915050565b60006020828403121561330457613303613141565b5b6000613312848285016132d9565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006133468261331b565b9050919050565b6133568161333b565b82525050565b6000602082019050613371600083018461334d565b92915050565b6133808161333b565b811461338b57600080fd5b50565b60008135905061339d81613377565b92915050565b600080604083850312156133ba576133b9613141565b5b60006133c88582860161338e565b92505060206133d9858286016132d9565b9150509250929050565b600080604083850312156133fa576133f9613141565b5b6000613408858286016132d9565b92505060206134198582860161338e565b9150509250929050565b61342c816132b8565b82525050565b60006020820190506134476000830184613423565b92915050565b60006020828403121561346357613462613141565b5b60006134718482850161338e565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261349f5761349e61347a565b5b8235905067ffffffffffffffff8111156134bc576134bb61347f565b5b6020830191508360208202830111156134d8576134d7613484565b5b9250929050565b60008060008060008060a087890312156134fc576134fb613141565b5b600061350a89828a016132d9565b965050602061351b89828a0161338e565b955050604061352c89828a016132d9565b945050606061353d89828a016132d9565b935050608087013567ffffffffffffffff81111561355e5761355d613146565b5b61356a89828a01613489565b92509250509295509295509295565b60008060006060848603121561359257613591613141565b5b60006135a08682870161338e565b93505060206135b18682870161338e565b92505060406135c2868287016132d9565b9150509250925092565b6000819050919050565b60006135f16135ec6135e78461331b565b6135cc565b61331b565b9050919050565b6000613603826135d6565b9050919050565b6000613615826135f8565b9050919050565b6136258161360a565b82525050565b6000602082019050613640600083018461361c565b92915050565b60008083601f84011261365c5761365b61347a565b5b8235905067ffffffffffffffff8111156136795761367861347f565b5b60208301915083600182028301111561369557613694613484565b5b9250929050565b600080602083850312156136b3576136b2613141565b5b600083013567ffffffffffffffff8111156136d1576136d0613146565b5b6136dd85828601613646565b92509250509250929050565b6136f2816131d0565b81146136fd57600080fd5b50565b60008135905061370f816136e9565b92915050565b60006020828403121561372b5761372a613141565b5b600061373984828501613700565b91505092915050565b6000806040838503121561375957613758613141565b5b60006137678582860161338e565b925050602061377885828601613700565b9150509250929050565b6000819050919050565b61379581613782565b82525050565b600063ffffffff82169050919050565b6137b48161379b565b82525050565b600067ffffffffffffffff82169050919050565b6137d7816137ba565b82525050565b600060a0820190506137f2600083018861378c565b6137ff60208301876137ab565b61380c60408301866137ce565b61381960608301856137ce565b61382660808301846137ce565b9695505050505050565b600080fd5b600060c0828403121561384b5761384a613830565b5b81905092915050565b60008060e0838503121561386b5761386a613141565b5b6000613879858286016132d9565b925050602061388a85828601613835565b9150509250929050565b6000806000806000608086880312156138b0576138af613141565b5b60006138be888289016132d9565b95505060206138cf8882890161338e565b94505060406138e0888289016132d9565b935050606086013567ffffffffffffffff81111561390157613900613146565b5b61390d88828901613646565b92509250509295509295909350565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6139598261324c565b810181811067ffffffffffffffff8211171561397857613977613921565b5b80604052505050565b600061398b613137565b90506139978282613950565b919050565b600067ffffffffffffffff8211156139b7576139b6613921565b5b6139c08261324c565b9050602081019050919050565b82818337600083830152505050565b60006139ef6139ea8461399c565b613981565b905082815260208101848484011115613a0b57613a0a61391c565b5b613a168482856139cd565b509392505050565b600082601f830112613a3357613a3261347a565b5b8135613a438482602086016139dc565b91505092915050565b60008060008060808587031215613a6657613a65613141565b5b6000613a748782880161338e565b9450506020613a858782880161338e565b9350506040613a96878288016132d9565b925050606085013567ffffffffffffffff811115613ab757613ab6613146565b5b613ac387828801613a1e565b91505092959194509250565b60008060408385031215613ae657613ae5613141565b5b6000613af48582860161338e565b9250506020613b058582860161338e565b9150509250929050565b600060c082019050613b246000830189613423565b613b3160208301886137ab565b613b3e60408301876137ab565b613b4b60608301866137ce565b613b5860808301856137ce565b613b6560a08301846137ce565b979650505050505050565b600060a08284031215613b8657613b85613830565b5b81905092915050565b60008060c08385031215613ba657613ba5613141565b5b6000613bb4858286016132d9565b9250506020613bc585828601613b70565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613c1657607f821691505b602082108103613c2957613c28613bcf565b5b50919050565b6000613c4a613c45613c40846137ba565b6135cc565b6132b8565b9050919050565b613c5a81613c2f565b82525050565b6000604082019050613c756000830185613c51565b613c826020830184613c51565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613cc3826132b8565b9150613cce836132b8565b9250828201905080821115613ce657613ce5613c89565b5b92915050565b6000613cf7826137ba565b9150613d02836137ba565b9250828201905067ffffffffffffffff811115613d2257613d21613c89565b5b92915050565b6000613d33826132b8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613d6557613d64613c89565b5b600182019050919050565b6000819050919050565b6000613d95613d90613d8b84613d70565b6135cc565b6132b8565b9050919050565b613da581613d7a565b82525050565b50565b6000613dbb600083613211565b9150613dc682613dab565b600082019050919050565b600060a082019050613de66000830187613423565b613df36020830186613423565b613e006040830185613d9c565b613e0d60608301846131dc565b8181036080830152613e1e81613dae565b905095945050505050565b6000608082019050613e3e6000830187613423565b613e4b60208301866131dc565b613e586040830185613423565b613e656060830184613c51565b95945050505050565b6000606082019050613e83600083018661334d565b613e906020830185613423565b613e9d604083018461334d565b949350505050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613f127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613ed5565b613f1c8683613ed5565b95508019841693508086168417925050509392505050565b6000613f4f613f4a613f45846132b8565b6135cc565b6132b8565b9050919050565b6000819050919050565b613f6983613f34565b613f7d613f7582613f56565b848454613ee2565b825550505050565b600090565b613f92613f85565b613f9d818484613f60565b505050565b5b81811015613fc157613fb6600082613f8a565b600181019050613fa3565b5050565b601f82111561400657613fd781613eb0565b613fe084613ec5565b81016020851015613fef578190505b614003613ffb85613ec5565b830182613fa2565b50505b505050565b600082821c905092915050565b60006140296000198460080261400b565b1980831691505092915050565b60006140428383614018565b9150826002028217905092915050565b61405c8383613ea5565b67ffffffffffffffff81111561407557614074613921565b5b61407f8254613bfe565b61408a828285613fc5565b6000601f8311600181146140b957600084156140a7578287013590505b6140b18582614036565b865550614119565b601f1984166140c786613eb0565b60005b828110156140ef578489013582556001820191506020850194506020810190506140ca565b8683101561410c5784890135614108601f891682614018565b8355505b6001600288020188555050505b50505050505050565b6000819050919050565b600061414761414261413d84614122565b6135cc565b6132b8565b9050919050565b6141578161412c565b82525050565b6000604082019050614172600083018561414e565b61417f6020830184613423565b9392505050565b60008135614193816132c2565b80915050919050565b60008160001b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141d58461419c565b9350801983169250808416831791505092915050565b6141f482613f34565b61420761420082613f56565b83546141a9565b8255505050565b6142178161379b565b811461422257600080fd5b50565b600081356142328161420e565b80915050919050565b600063ffffffff61424b8461419c565b9350801983169250808416831791505092915050565b600061427c6142776142728461379b565b6135cc565b61379b565b9050919050565b6000819050919050565b61429682614261565b6142a96142a282614283565b835461423b565b8255505050565b60008160201b9050919050565b600067ffffffff000000006142d1846142b0565b9350801983169250808416831791505092915050565b6142f082614261565b6143036142fc82614283565b83546142bd565b8255505050565b614313816137ba565b811461431e57600080fd5b50565b6000813561432e8161430a565b80915050919050565b60008160401b9050919050565b60006fffffffffffffffff000000000000000061436084614337565b9350801983169250808416831791505092915050565b600061439161438c614387846137ba565b6135cc565b6137ba565b9050919050565b6000819050919050565b6143ab82614376565b6143be6143b782614398565b8354614344565b8255505050565b60008160801b9050919050565b600077ffffffffffffffff000000000000000000000000000000006143f6846143c5565b9350801983169250808416831791505092915050565b61441582614376565b61442861442182614398565b83546143d2565b8255505050565b60008160c01b9050919050565b60007fffffffffffffffff0000000000000000000000000000000000000000000000006144688461442f565b9350801983169250808416831791505092915050565b61448782614376565b61449a61449382614398565b835461443c565b8255505050565b6000810160008301806144b381614186565b90506144bf81846141eb565b5050506001810160208301806144d481614225565b90506144e0818461428d565b5050506001810160408301806144f581614225565b905061450181846142e7565b50505060018101606083018061451681614321565b905061452281846143a2565b50505060018101608083018061453781614321565b9050614543818461440c565b5050506001810160a083018061455881614321565b9050614564818461447e565b5050505050565b61457582826144a1565b5050565b6000614584826132b8565b915061458f836132b8565b925082820261459d816132b8565b915082820484148315176145b4576145b3613c89565b5b5092915050565b60006145c78385613211565b93506145d48385846139cd565b6145dd8361324c565b840190509392505050565b600060a0820190506145fd6000830189613423565b61460a6020830188613423565b6146176040830187613423565b61462460608301866131dc565b81810360808301526146378184866145bb565b9050979650505050505050565b600081905092915050565b600061465a82613206565b6146648185614644565b9350614674818560208601613222565b80840191505092915050565b600061468c828561464f565b9150614698828461464f565b91508190509392505050565b6146ad81613782565b81146146b857600080fd5b50565b600081356146c8816146a4565b80915050919050565b60006146dc82613782565b9050919050565b60008160001c9050919050565b60006146fb826146e3565b9050919050565b61470b826146d1565b61471e614717826146f0565b83546141a9565b8255505050565b60006bffffffffffffffff0000000061473d846142b0565b9350801983169250808416831791505092915050565b61475c82614376565b61476f61476882614398565b8354614725565b8255505050565b60008160601b9050919050565b600073ffffffffffffffff0000000000000000000000006147a384614776565b9350801983169250808416831791505092915050565b6147c282614376565b6147d56147ce82614398565b8354614783565b8255505050565b60008160a01b9050919050565b60007bffffffffffffffff0000000000000000000000000000000000000000614811846147dc565b9350801983169250808416831791505092915050565b61483082614376565b61484361483c82614398565b83546147e9565b8255505050565b60008101600083018061485c816146bb565b90506148688184614702565b50505060018101602083018061487d81614225565b9050614889818461428d565b50505060018101604083018061489e81614321565b90506148aa8184614753565b5050506001810160608301806148bf81614321565b90506148cb81846147b9565b5050506001810160808301806148e081614321565b90506148ec8184614827565b5050505050565b6148fd828261484a565b5050565b6000604082019050614916600083018561334d565b6149236020830184613423565b9392505050565b6000819050919050565b61494561494082613782565b61492a565b82525050565b60006149578284614934565b60208201915081905092915050565b7f5472616e73666572206e6f7420656e61626c6564000000000000000000000000600082015250565b600061499c601483613211565b91506149a782614966565b602082019050919050565b600060208201905081810360008301526149cb8161498f565b9050919050565b60006060820190506149e7600083018661334d565b6149f4602083018561334d565b614a016040830184613423565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000614a3082614a09565b614a3a8185614a14565b9350614a4a818560208601613222565b614a538161324c565b840191505092915050565b6000608082019050614a73600083018761334d565b614a80602083018661334d565b614a8d6040830185613423565b8181036060830152614a9f8184614a25565b905095945050505050565b600081519050614ab981613177565b92915050565b600060208284031215614ad557614ad4613141565b5b6000614ae384828501614aaa565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050614b2a816136e9565b92915050565b600060208284031215614b4657614b45613141565b5b6000614b5484828501614b1b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b6000614ba282614a09565b614bac8185614b8c565b9350614bbc818560208601613222565b80840191505092915050565b6000614bd48284614b97565b91508190509291505056fea2646970667358221220a203e6ca8aa3037e5f73d18ab47301e47bde30851559e09c3f1b867078f0b0c164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C0360EB GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xACB889EE GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0xF1CE5FE0 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x633 JUMPI DUP1 PUSH4 0xFCF9E1F8 EQ PUSH2 0x64F JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xACB889EE EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xAF3A19C7 EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xB8240540 EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x582 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x9FE9F623 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA4532FB9 EQ PUSH2 0x4F8 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x484 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x3013CE29 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x4CD412D5 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x4CD412D5 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x6A326AB1 EQ PUSH2 0x410 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x33D9F1FA EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x378077A8 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x38A JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x1ACA45A7 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x1ACA45A7 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x1BB08048 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x1D68E8CE EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x302 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x27E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x31A3 JUMP JUMPDEST PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x31EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x33E3 JUMP JUMPDEST PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x344D JUMP JUMPDEST PUSH2 0x836 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x34DF JUMP JUMPDEST PUSH2 0x8E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST PUSH2 0xE32 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x362B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x33E3 JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x31EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x344D JUMP JUMPDEST PUSH2 0x1045 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x434 PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x464 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x344D JUMP JUMPDEST PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x482 PUSH2 0x123F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48C PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AA PUSH2 0x127D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x3715 JUMP JUMPDEST PUSH2 0x130F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x3742 JUMP JUMPDEST PUSH2 0x1334 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x512 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x523 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x546 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x3854 JUMP JUMPDEST PUSH2 0x13CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x550 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x3894 JUMP JUMPDEST PUSH2 0x1455 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x3A4C JUMP JUMPDEST PUSH2 0x1A56 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x3ACF JUMP JUMPDEST PUSH2 0x1ADC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x31EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x618 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62A SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x344D JUMP JUMPDEST PUSH2 0x1C08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x669 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST PUSH2 0x1C8E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x736 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x746 JUMPI POP PUSH2 0x745 DUP3 PUSH2 0x1D12 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x1D7C JUMP JUMPDEST POP PUSH2 0x7F4 DUP3 PUSH2 0x1E04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80D DUP3 DUP3 PUSH2 0x808 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x1E49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x83E PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9926074200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 EQ DUP1 PUSH2 0x8F7 JUMPI POP PUSH1 0x26 DUP7 GT JUMPDEST DUP1 PUSH2 0x92E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x939 JUMPI POP PUSH1 0x0 DUP5 EQ JUMPDEST ISZERO PUSH2 0x970 JUMPI PUSH1 0x40 MLOAD PUSH32 0x41ABC80100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xA62 PUSH2 0x1E41 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x60 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0xA8D JUMPI POP DUP2 PUSH1 0x80 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0xAD9 JUMPI DUP2 PUSH1 0x60 ADD MLOAD DUP3 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0xCBAEF56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD0 SWAP3 SWAP2 SWAP1 PUSH2 0x3C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP7 PUSH1 0xC PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST GT DUP1 PUSH2 0xB64 JUMPI POP DUP2 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP7 DUP4 PUSH1 0x40 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xB9B JUMPI PUSH1 0x40 MLOAD PUSH32 0xDAD4F32900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA8 DUP9 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x9BDE33900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0xC PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC3E SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0xB PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xC7E SWAP2 SWAP1 PUSH2 0x3CEC JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP7 DUP2 GT PUSH2 0xD58 JUMPI PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCC5 SWAP1 PUSH2 0x3D28 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xCD6 DUP9 PUSH1 0x8 SLOAD PUSH2 0x1FA4 JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB9AD13C0DE1A777020713212854C8C286C0C260F459A4F53AA84A65E3BC0DB2 DUP12 PUSH1 0x8 SLOAD PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD3D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH2 0xD50 SWAP1 PUSH2 0x3D28 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCAB JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5BD7001D995BB594C91E6ABB25DDBEAF9C358906BE6AA0FADB5109F567609931 DUP10 PUSH1 0x1 PUSH1 0xC PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xB PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xE20 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEB8 DUP4 DUP4 PUSH2 0xEB3 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x1FC2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF2E JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF25 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xFC0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xFE0 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP SUB PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BA0191100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0xF SWAP2 DUP3 PUSH2 0x102E SWAP3 SWAP2 SWAP1 PUSH2 0x4052 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103E DUP3 PUSH2 0x1D7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x104D PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9926074200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x1104 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1130 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x117D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1152 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x117D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1160 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1247 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x1251 PUSH1 0x0 PUSH2 0x2063 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x128C SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12B8 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1305 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1305 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1317 PUSH2 0x1E5B JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1346 PUSH2 0x133F PUSH2 0x1E41 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2129 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0x13D4 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 PUSH2 0x13E3 JUMPI POP PUSH1 0x26 DUP3 GT JUMPDEST ISZERO PUSH2 0x1429 JUMPI PUSH1 0x1 PUSH1 0x26 PUSH1 0x40 MLOAD PUSH32 0xD40D76CA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1420 SWAP3 SWAP2 SWAP1 PUSH2 0x415D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 DUP2 PUSH2 0x1449 SWAP2 SWAP1 PUSH2 0x456B JUMP JUMPDEST SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x26 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP6 EQ DUP1 PUSH2 0x1464 JUMPI POP PUSH1 0x26 DUP6 GT JUMPDEST DUP1 PUSH2 0x146F JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST DUP1 PUSH2 0x14A6 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x14DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x41ABC80100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x15F5 PUSH2 0x1E41 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x80 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x1620 JUMPI POP DUP2 PUSH1 0xA0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x166C JUMPI DUP2 PUSH1 0x80 ADD MLOAD DUP3 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0xCBAEF56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1663 SWAP3 SWAP2 SWAP1 PUSH2 0x3C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD SUB PUSH2 0x16AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x1140CF7F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP6 PUSH1 0xD PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1711 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST GT DUP1 PUSH2 0x173F JUMPI POP DUP2 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP6 DUP4 PUSH1 0x60 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x173D SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x1776 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDAD4F32900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0xA PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x17AF SWAP2 SWAP1 PUSH2 0x3CEC JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1835 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP6 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x184E SWAP2 SWAP1 PUSH2 0x4579 JUMP JUMPDEST SWAP1 POP PUSH2 0x18C1 DUP3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2298 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP7 DUP2 GT PUSH2 0x197C JUMPI PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x18E2 SWAP1 PUSH2 0x3D28 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x18F3 DUP9 PUSH1 0x8 SLOAD PUSH2 0x1FA4 JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB9AD13C0DE1A777020713212854C8C286C0C260F459A4F53AA84A65E3BC0DB2 DUP12 PUSH1 0x8 SLOAD DUP9 PUSH1 0x0 ADD MLOAD PUSH1 0x0 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x1961 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x45E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH2 0x1974 SWAP1 PUSH2 0x3D28 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18C8 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5BD7001D995BB594C91E6ABB25DDBEAF9C358906BE6AA0FADB5109F567609931 DUP10 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1A44 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A61 DUP5 DUP5 DUP5 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x1A6D DUP5 DUP5 DUP5 DUP5 PUSH2 0x231A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A7E DUP3 PUSH2 0x1D7C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1A89 PUSH2 0x24D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1AA9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1AD4 JUMP JUMPDEST DUP1 PUSH2 0x1AB3 DUP5 PUSH2 0x2563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AC4 SWAP3 SWAP2 SWAP1 PUSH2 0x4680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x1C10 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C82 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C79 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C8B DUP2 PUSH2 0x2063 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C96 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 PUSH2 0x1CA5 JUMPI POP PUSH1 0x26 DUP3 GT JUMPDEST ISZERO PUSH2 0x1CEB JUMPI PUSH1 0x1 PUSH1 0x26 PUSH1 0x40 MLOAD PUSH32 0xD40D76CA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE2 SWAP3 SWAP2 SWAP1 PUSH2 0x415D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 DUP2 PUSH2 0x1D0B SWAP2 SWAP1 PUSH2 0x48F3 JUMP JUMPDEST SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D88 DUP4 PUSH2 0x2631 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DFB JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF2 SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E56 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x266E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1E63 PUSH2 0x1E41 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E81 PUSH2 0x1253 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EE0 JUMPI PUSH2 0x1EA4 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED7 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EF8 SWAP3 SWAP2 SWAP1 PUSH2 0x4901 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F1E SWAP2 SWAP1 PUSH2 0x494B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1F98 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0xB PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 PUSH2 0x2833 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1FBE DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x284A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1FD0 DUP6 DUP6 DUP6 PUSH2 0x2866 JUMP JUMPDEST SWAP1 POP PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2019 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x204F SWAP1 PUSH2 0x49B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x219A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2191 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x228B SWAP2 SWAP1 PUSH2 0x31EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2314 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x22CD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2A80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x24CB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x235E PUSH2 0x1E41 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2380 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A5E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x23BC JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B9 SWAP2 SWAP1 PUSH2 0x4ABF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2440 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23EC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23F1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2438 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x242F SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x24C9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C0 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF DUP1 SLOAD PUSH2 0x24E0 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x250C SWAP1 PUSH2 0x3BFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2559 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x252E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2559 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x253C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2572 DUP5 PUSH2 0x2B17 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2591 JUMPI PUSH2 0x2590 PUSH2 0x3921 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x25C3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2626 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x261A JUMPI PUSH2 0x2619 PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x25D1 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x26A7 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x27DB JUMPI PUSH1 0x0 PUSH2 0x26B7 DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2722 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2735 JUMPI POP PUSH2 0x2733 DUP2 DUP5 PUSH2 0x1ADC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2777 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276E SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x27D9 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2840 DUP6 DUP5 PUSH2 0x2C6A JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2854 DUP4 DUP4 PUSH2 0x2CC0 JUMP JUMPDEST PUSH2 0x2861 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x231A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2872 DUP5 PUSH2 0x2631 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28B4 JUMPI PUSH2 0x28B3 DUP2 DUP5 DUP7 PUSH2 0x2DB9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2945 JUMPI PUSH2 0x28F6 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x266E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29C8 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AAB DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E7D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x2AD0 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2ACE SWAP2 SWAP1 PUSH2 0x4B30 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2B12 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B09 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2B75 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2B6B JUMPI PUSH2 0x2B6A PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2BB2 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2BA8 JUMPI PUSH2 0x2BA7 PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2BE1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2BD7 JUMPI PUSH2 0x2BD6 PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2C0A JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2C00 JUMPI PUSH2 0x2BFF PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2C2F JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2C25 JUMPI PUSH2 0x2C24 PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2C52 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x2C48 JUMPI PUSH2 0x2C47 PUSH2 0x4AEC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2C61 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2CB5 JUMPI PUSH2 0x2CA0 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2C93 JUMPI PUSH2 0x2C92 PUSH2 0x4B5D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E93 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x2CAD SWAP1 PUSH2 0x3D28 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2C73 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D32 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D29 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D40 DUP4 DUP4 PUSH1 0x0 PUSH2 0x1FC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DB4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DAB SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2DC4 DUP4 DUP4 DUP4 PUSH2 0x2EBE JUMP JUMPDEST PUSH2 0x2E78 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2E39 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E30 SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E6F SWAP3 SWAP2 SWAP1 PUSH2 0x4901 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E8B DUP4 DUP4 PUSH1 0x0 PUSH2 0x2F7F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2EAB JUMPI PUSH2 0x2EA6 DUP3 DUP5 PUSH2 0x304C JUMP JUMPDEST PUSH2 0x2EB6 JUMP JUMPDEST PUSH2 0x2EB5 DUP4 DUP4 PUSH2 0x304C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2F76 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2F37 JUMPI POP PUSH2 0x2F36 DUP5 DUP5 PUSH2 0x1ADC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2F75 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F5D DUP4 PUSH2 0x1E04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x2FC6 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FBD SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x2FEF SWAP2 SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x302C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3031 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3041 DUP7 DUP4 DUP4 PUSH2 0x3063 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x3078 JUMPI PUSH2 0x3073 DUP3 PUSH2 0x30F2 JUMP JUMPDEST PUSH2 0x30EA JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x30A0 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x30E2 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D9 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x30EB JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x3105 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3180 DUP2 PUSH2 0x314B JUMP JUMPDEST DUP2 EQ PUSH2 0x318B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x319D DUP2 PUSH2 0x3177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31B9 JUMPI PUSH2 0x31B8 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31C7 DUP5 DUP3 DUP6 ADD PUSH2 0x318E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31E5 DUP2 PUSH2 0x31D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3200 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3240 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3225 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3268 DUP3 PUSH2 0x3206 JUMP JUMPDEST PUSH2 0x3272 DUP2 DUP6 PUSH2 0x3211 JUMP JUMPDEST SWAP4 POP PUSH2 0x3282 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3222 JUMP JUMPDEST PUSH2 0x328B DUP2 PUSH2 0x324C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32B0 DUP2 DUP5 PUSH2 0x325D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32CB DUP2 PUSH2 0x32B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x32D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32E8 DUP2 PUSH2 0x32C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3304 JUMPI PUSH2 0x3303 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3312 DUP5 DUP3 DUP6 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3346 DUP3 PUSH2 0x331B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3356 DUP2 PUSH2 0x333B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3371 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x334D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3380 DUP2 PUSH2 0x333B JUMP JUMPDEST DUP2 EQ PUSH2 0x338B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x339D DUP2 PUSH2 0x3377 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33BA JUMPI PUSH2 0x33B9 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33C8 DUP6 DUP3 DUP7 ADD PUSH2 0x338E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x33D9 DUP6 DUP3 DUP7 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33FA JUMPI PUSH2 0x33F9 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3408 DUP6 DUP3 DUP7 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3419 DUP6 DUP3 DUP7 ADD PUSH2 0x338E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x342C DUP2 PUSH2 0x32B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3447 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3423 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3463 JUMPI PUSH2 0x3462 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3471 DUP5 DUP3 DUP6 ADD PUSH2 0x338E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x349F JUMPI PUSH2 0x349E PUSH2 0x347A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34BC JUMPI PUSH2 0x34BB PUSH2 0x347F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x34D8 JUMPI PUSH2 0x34D7 PUSH2 0x3484 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x34FC JUMPI PUSH2 0x34FB PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x350A DUP10 DUP3 DUP11 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x351B DUP10 DUP3 DUP11 ADD PUSH2 0x338E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x352C DUP10 DUP3 DUP11 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x353D DUP10 DUP3 DUP11 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x355E JUMPI PUSH2 0x355D PUSH2 0x3146 JUMP JUMPDEST JUMPDEST PUSH2 0x356A DUP10 DUP3 DUP11 ADD PUSH2 0x3489 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3592 JUMPI PUSH2 0x3591 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35A0 DUP7 DUP3 DUP8 ADD PUSH2 0x338E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x35B1 DUP7 DUP3 DUP8 ADD PUSH2 0x338E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x35C2 DUP7 DUP3 DUP8 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F1 PUSH2 0x35EC PUSH2 0x35E7 DUP5 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x331B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3603 DUP3 PUSH2 0x35D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3615 DUP3 PUSH2 0x35F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3625 DUP2 PUSH2 0x360A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3640 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x361C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x365C JUMPI PUSH2 0x365B PUSH2 0x347A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3679 JUMPI PUSH2 0x3678 PUSH2 0x347F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3695 JUMPI PUSH2 0x3694 PUSH2 0x3484 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36B3 JUMPI PUSH2 0x36B2 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36D1 JUMPI PUSH2 0x36D0 PUSH2 0x3146 JUMP JUMPDEST JUMPDEST PUSH2 0x36DD DUP6 DUP3 DUP7 ADD PUSH2 0x3646 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F2 DUP2 PUSH2 0x31D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x36FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x370F DUP2 PUSH2 0x36E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x372B JUMPI PUSH2 0x372A PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3739 DUP5 DUP3 DUP6 ADD PUSH2 0x3700 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3759 JUMPI PUSH2 0x3758 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3767 DUP6 DUP3 DUP7 ADD PUSH2 0x338E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3778 DUP6 DUP3 DUP7 ADD PUSH2 0x3700 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3795 DUP2 PUSH2 0x3782 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37B4 DUP2 PUSH2 0x379B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37D7 DUP2 PUSH2 0x37BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x37F2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x378C JUMP JUMPDEST PUSH2 0x37FF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x37AB JUMP JUMPDEST PUSH2 0x380C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x37CE JUMP JUMPDEST PUSH2 0x3819 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x37CE JUMP JUMPDEST PUSH2 0x3826 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x37CE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x384B JUMPI PUSH2 0x384A PUSH2 0x3830 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x386B JUMPI PUSH2 0x386A PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3879 DUP6 DUP3 DUP7 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x388A DUP6 DUP3 DUP7 ADD PUSH2 0x3835 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x38B0 JUMPI PUSH2 0x38AF PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38BE DUP9 DUP3 DUP10 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x38CF DUP9 DUP3 DUP10 ADD PUSH2 0x338E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x38E0 DUP9 DUP3 DUP10 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3901 JUMPI PUSH2 0x3900 PUSH2 0x3146 JUMP JUMPDEST JUMPDEST PUSH2 0x390D DUP9 DUP3 DUP10 ADD PUSH2 0x3646 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3959 DUP3 PUSH2 0x324C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3978 JUMPI PUSH2 0x3977 PUSH2 0x3921 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x398B PUSH2 0x3137 JUMP JUMPDEST SWAP1 POP PUSH2 0x3997 DUP3 DUP3 PUSH2 0x3950 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x39B7 JUMPI PUSH2 0x39B6 PUSH2 0x3921 JUMP JUMPDEST JUMPDEST PUSH2 0x39C0 DUP3 PUSH2 0x324C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39EF PUSH2 0x39EA DUP5 PUSH2 0x399C JUMP JUMPDEST PUSH2 0x3981 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3A0B JUMPI PUSH2 0x3A0A PUSH2 0x391C JUMP JUMPDEST JUMPDEST PUSH2 0x3A16 DUP5 DUP3 DUP6 PUSH2 0x39CD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A33 JUMPI PUSH2 0x3A32 PUSH2 0x347A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A43 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x39DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3A66 JUMPI PUSH2 0x3A65 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A74 DUP8 DUP3 DUP9 ADD PUSH2 0x338E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3A85 DUP8 DUP3 DUP9 ADD PUSH2 0x338E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3A96 DUP8 DUP3 DUP9 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB7 JUMPI PUSH2 0x3AB6 PUSH2 0x3146 JUMP JUMPDEST JUMPDEST PUSH2 0x3AC3 DUP8 DUP3 DUP9 ADD PUSH2 0x3A1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AE6 JUMPI PUSH2 0x3AE5 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AF4 DUP6 DUP3 DUP7 ADD PUSH2 0x338E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B05 DUP6 DUP3 DUP7 ADD PUSH2 0x338E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3B24 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x3B31 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x37AB JUMP JUMPDEST PUSH2 0x3B3E PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x37AB JUMP JUMPDEST PUSH2 0x3B4B PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x37CE JUMP JUMPDEST PUSH2 0x3B58 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x37CE JUMP JUMPDEST PUSH2 0x3B65 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x37CE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B86 JUMPI PUSH2 0x3B85 PUSH2 0x3830 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BA6 JUMPI PUSH2 0x3BA5 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BB4 DUP6 DUP3 DUP7 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3BC5 DUP6 DUP3 DUP7 ADD PUSH2 0x3B70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3C16 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3C29 JUMPI PUSH2 0x3C28 PUSH2 0x3BCF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C4A PUSH2 0x3C45 PUSH2 0x3C40 DUP5 PUSH2 0x37BA JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x32B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C5A DUP2 PUSH2 0x3C2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C75 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C51 JUMP JUMPDEST PUSH2 0x3C82 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3CC3 DUP3 PUSH2 0x32B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CCE DUP4 PUSH2 0x32B8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3CE6 JUMPI PUSH2 0x3CE5 PUSH2 0x3C89 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CF7 DUP3 PUSH2 0x37BA JUMP JUMPDEST SWAP2 POP PUSH2 0x3D02 DUP4 PUSH2 0x37BA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D22 JUMPI PUSH2 0x3D21 PUSH2 0x3C89 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D33 DUP3 PUSH2 0x32B8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3D65 JUMPI PUSH2 0x3D64 PUSH2 0x3C89 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D95 PUSH2 0x3D90 PUSH2 0x3D8B DUP5 PUSH2 0x3D70 JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x32B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DA5 DUP2 PUSH2 0x3D7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DBB PUSH1 0x0 DUP4 PUSH2 0x3211 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DC6 DUP3 PUSH2 0x3DAB JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3DE6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x3DF3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x3E00 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3D9C JUMP JUMPDEST PUSH2 0x3E0D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x31DC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3E1E DUP2 PUSH2 0x3DAE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3E3E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x3E4B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x31DC JUMP JUMPDEST PUSH2 0x3E58 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x3E65 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3C51 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3E83 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x3E90 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x3E9D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x334D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3F12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3ED5 JUMP JUMPDEST PUSH2 0x3F1C DUP7 DUP4 PUSH2 0x3ED5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F4F PUSH2 0x3F4A PUSH2 0x3F45 DUP5 PUSH2 0x32B8 JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x32B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F69 DUP4 PUSH2 0x3F34 JUMP JUMPDEST PUSH2 0x3F7D PUSH2 0x3F75 DUP3 PUSH2 0x3F56 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3EE2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3F92 PUSH2 0x3F85 JUMP JUMPDEST PUSH2 0x3F9D DUP2 DUP5 DUP5 PUSH2 0x3F60 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3FC1 JUMPI PUSH2 0x3FB6 PUSH1 0x0 DUP3 PUSH2 0x3F8A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3FA3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4006 JUMPI PUSH2 0x3FD7 DUP2 PUSH2 0x3EB0 JUMP JUMPDEST PUSH2 0x3FE0 DUP5 PUSH2 0x3EC5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3FEF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4003 PUSH2 0x3FFB DUP6 PUSH2 0x3EC5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3FA2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4029 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x400B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4042 DUP4 DUP4 PUSH2 0x4018 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x405C DUP4 DUP4 PUSH2 0x3EA5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4075 JUMPI PUSH2 0x4074 PUSH2 0x3921 JUMP JUMPDEST JUMPDEST PUSH2 0x407F DUP3 SLOAD PUSH2 0x3BFE JUMP JUMPDEST PUSH2 0x408A DUP3 DUP3 DUP6 PUSH2 0x3FC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x40B9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x40A7 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x40B1 DUP6 DUP3 PUSH2 0x4036 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4119 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x40C7 DUP7 PUSH2 0x3EB0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x40EF JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x40CA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x410C JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x4108 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4018 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4147 PUSH2 0x4142 PUSH2 0x413D DUP5 PUSH2 0x4122 JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x32B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4157 DUP2 PUSH2 0x412C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4172 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x414E JUMP JUMPDEST PUSH2 0x417F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3423 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD PUSH2 0x4193 DUP2 PUSH2 0x32C2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x41D5 DUP5 PUSH2 0x419C JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x41F4 DUP3 PUSH2 0x3F34 JUMP JUMPDEST PUSH2 0x4207 PUSH2 0x4200 DUP3 PUSH2 0x3F56 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x41A9 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x4217 DUP2 PUSH2 0x379B JUMP JUMPDEST DUP2 EQ PUSH2 0x4222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD PUSH2 0x4232 DUP2 PUSH2 0x420E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x424B DUP5 PUSH2 0x419C JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x427C PUSH2 0x4277 PUSH2 0x4272 DUP5 PUSH2 0x379B JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x379B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4296 DUP3 PUSH2 0x4261 JUMP JUMPDEST PUSH2 0x42A9 PUSH2 0x42A2 DUP3 PUSH2 0x4283 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x423B JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFF00000000 PUSH2 0x42D1 DUP5 PUSH2 0x42B0 JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42F0 DUP3 PUSH2 0x4261 JUMP JUMPDEST PUSH2 0x4303 PUSH2 0x42FC DUP3 PUSH2 0x4283 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x42BD JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x4313 DUP2 PUSH2 0x37BA JUMP JUMPDEST DUP2 EQ PUSH2 0x431E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD PUSH2 0x432E DUP2 PUSH2 0x430A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 PUSH2 0x4360 DUP5 PUSH2 0x4337 JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4391 PUSH2 0x438C PUSH2 0x4387 DUP5 PUSH2 0x37BA JUMP JUMPDEST PUSH2 0x35CC JUMP JUMPDEST PUSH2 0x37BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43AB DUP3 PUSH2 0x4376 JUMP JUMPDEST PUSH2 0x43BE PUSH2 0x43B7 DUP3 PUSH2 0x4398 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x4344 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x80 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFF00000000000000000000000000000000 PUSH2 0x43F6 DUP5 PUSH2 0x43C5 JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4415 DUP3 PUSH2 0x4376 JUMP JUMPDEST PUSH2 0x4428 PUSH2 0x4421 DUP3 PUSH2 0x4398 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x43D2 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xC0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 PUSH2 0x4468 DUP5 PUSH2 0x442F JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4487 DUP3 PUSH2 0x4376 JUMP JUMPDEST PUSH2 0x449A PUSH2 0x4493 DUP3 PUSH2 0x4398 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x443C JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ADD PUSH1 0x0 DUP4 ADD DUP1 PUSH2 0x44B3 DUP2 PUSH2 0x4186 JUMP JUMPDEST SWAP1 POP PUSH2 0x44BF DUP2 DUP5 PUSH2 0x41EB JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x20 DUP4 ADD DUP1 PUSH2 0x44D4 DUP2 PUSH2 0x4225 JUMP JUMPDEST SWAP1 POP PUSH2 0x44E0 DUP2 DUP5 PUSH2 0x428D JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x40 DUP4 ADD DUP1 PUSH2 0x44F5 DUP2 PUSH2 0x4225 JUMP JUMPDEST SWAP1 POP PUSH2 0x4501 DUP2 DUP5 PUSH2 0x42E7 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x60 DUP4 ADD DUP1 PUSH2 0x4516 DUP2 PUSH2 0x4321 JUMP JUMPDEST SWAP1 POP PUSH2 0x4522 DUP2 DUP5 PUSH2 0x43A2 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x80 DUP4 ADD DUP1 PUSH2 0x4537 DUP2 PUSH2 0x4321 JUMP JUMPDEST SWAP1 POP PUSH2 0x4543 DUP2 DUP5 PUSH2 0x440C JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0xA0 DUP4 ADD DUP1 PUSH2 0x4558 DUP2 PUSH2 0x4321 JUMP JUMPDEST SWAP1 POP PUSH2 0x4564 DUP2 DUP5 PUSH2 0x447E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4575 DUP3 DUP3 PUSH2 0x44A1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4584 DUP3 PUSH2 0x32B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x458F DUP4 PUSH2 0x32B8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x459D DUP2 PUSH2 0x32B8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x45B4 JUMPI PUSH2 0x45B3 PUSH2 0x3C89 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45C7 DUP4 DUP6 PUSH2 0x3211 JUMP JUMPDEST SWAP4 POP PUSH2 0x45D4 DUP4 DUP6 DUP5 PUSH2 0x39CD JUMP JUMPDEST PUSH2 0x45DD DUP4 PUSH2 0x324C JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x45FD PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x460A PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x4617 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3423 JUMP JUMPDEST PUSH2 0x4624 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x31DC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x4637 DUP2 DUP5 DUP7 PUSH2 0x45BB JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x465A DUP3 PUSH2 0x3206 JUMP JUMPDEST PUSH2 0x4664 DUP2 DUP6 PUSH2 0x4644 JUMP JUMPDEST SWAP4 POP PUSH2 0x4674 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3222 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468C DUP3 DUP6 PUSH2 0x464F JUMP JUMPDEST SWAP2 POP PUSH2 0x4698 DUP3 DUP5 PUSH2 0x464F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x46AD DUP2 PUSH2 0x3782 JUMP JUMPDEST DUP2 EQ PUSH2 0x46B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD PUSH2 0x46C8 DUP2 PUSH2 0x46A4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46DC DUP3 PUSH2 0x3782 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46FB DUP3 PUSH2 0x46E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x470B DUP3 PUSH2 0x46D1 JUMP JUMPDEST PUSH2 0x471E PUSH2 0x4717 DUP3 PUSH2 0x46F0 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x41A9 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFF00000000 PUSH2 0x473D DUP5 PUSH2 0x42B0 JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x475C DUP3 PUSH2 0x4376 JUMP JUMPDEST PUSH2 0x476F PUSH2 0x4768 DUP3 PUSH2 0x4398 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x4725 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFF000000000000000000000000 PUSH2 0x47A3 DUP5 PUSH2 0x4776 JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47C2 DUP3 PUSH2 0x4376 JUMP JUMPDEST PUSH2 0x47D5 PUSH2 0x47CE DUP3 PUSH2 0x4398 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x4783 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH2 0x4811 DUP5 PUSH2 0x47DC JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4830 DUP3 PUSH2 0x4376 JUMP JUMPDEST PUSH2 0x4843 PUSH2 0x483C DUP3 PUSH2 0x4398 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x47E9 JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ADD PUSH1 0x0 DUP4 ADD DUP1 PUSH2 0x485C DUP2 PUSH2 0x46BB JUMP JUMPDEST SWAP1 POP PUSH2 0x4868 DUP2 DUP5 PUSH2 0x4702 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x20 DUP4 ADD DUP1 PUSH2 0x487D DUP2 PUSH2 0x4225 JUMP JUMPDEST SWAP1 POP PUSH2 0x4889 DUP2 DUP5 PUSH2 0x428D JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x40 DUP4 ADD DUP1 PUSH2 0x489E DUP2 PUSH2 0x4321 JUMP JUMPDEST SWAP1 POP PUSH2 0x48AA DUP2 DUP5 PUSH2 0x4753 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x60 DUP4 ADD DUP1 PUSH2 0x48BF DUP2 PUSH2 0x4321 JUMP JUMPDEST SWAP1 POP PUSH2 0x48CB DUP2 DUP5 PUSH2 0x47B9 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x80 DUP4 ADD DUP1 PUSH2 0x48E0 DUP2 PUSH2 0x4321 JUMP JUMPDEST SWAP1 POP PUSH2 0x48EC DUP2 DUP5 PUSH2 0x4827 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x48FD DUP3 DUP3 PUSH2 0x484A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4916 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x4923 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3423 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4945 PUSH2 0x4940 DUP3 PUSH2 0x3782 JUMP JUMPDEST PUSH2 0x492A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4957 DUP3 DUP5 PUSH2 0x4934 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206E6F7420656E61626C6564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499C PUSH1 0x14 DUP4 PUSH2 0x3211 JUMP JUMPDEST SWAP2 POP PUSH2 0x49A7 DUP3 PUSH2 0x4966 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49CB DUP2 PUSH2 0x498F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x49E7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x49F4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x4A01 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3423 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A30 DUP3 PUSH2 0x4A09 JUMP JUMPDEST PUSH2 0x4A3A DUP2 DUP6 PUSH2 0x4A14 JUMP JUMPDEST SWAP4 POP PUSH2 0x4A4A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3222 JUMP JUMPDEST PUSH2 0x4A53 DUP2 PUSH2 0x324C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4A73 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x4A80 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x4A8D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3423 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4A9F DUP2 DUP5 PUSH2 0x4A25 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4AB9 DUP2 PUSH2 0x3177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD5 JUMPI PUSH2 0x4AD4 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4AE3 DUP5 DUP3 DUP6 ADD PUSH2 0x4AAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4B2A DUP2 PUSH2 0x36E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B46 JUMPI PUSH2 0x4B45 PUSH2 0x3141 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B54 DUP5 DUP3 DUP6 ADD PUSH2 0x4B1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA2 DUP3 PUSH2 0x4A09 JUMP JUMPDEST PUSH2 0x4BAC DUP2 DUP6 PUSH2 0x4B8C JUMP JUMPDEST SWAP4 POP PUSH2 0x4BBC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3222 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD4 DUP3 DUP5 PUSH2 0x4B97 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 SUB 0xE6 0xCA DUP11 LOG3 SUB PUSH31 0x5F73D18AB47301E47BDE30851559E09C3F1B867078F0B0C164736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"615:12151:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1681:74:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10506:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:1684;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1099:26:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1761:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1227:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1903:27:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7297:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10964:163:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1988:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10102:105:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3718:144:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1542:61:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;8202:487;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1358:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2994:1815;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1481:55:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9363:501:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1561:300:7;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;1681:74:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10506:174::-;1531:13:0;:11;:13::i;:::-;10608:1:19::1;10586:24;;:10;:24;;::::0;10582:53:::1;;10619:16;;;;;;;;;;;;;;10582:53;10663:10;10646:14;;:27;;;;;;;;;;;;;;;;;;10506:174:::0;:::o;5328:1684::-;5561:1;5553:4;:9;:28;;;;1393:2;5566:4;:15;5553:28;:48;;;;5599:1;5585:16;;:2;:16;;;5553:48;:63;;;;5615:1;5605:6;:11;5553:63;5549:104;;;5637:16;;;;;;;;;;;;;;5549:104;5791:27;5821:20;:26;5842:4;5821:26;;;;;;;;;;;5791:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5857:14;5874:12;:10;:12::i;:::-;5857:29;;5918:6;:12;;;5900:30;;:15;:30;:62;;;;5952:6;:10;;;5934:28;;:15;:28;5900:62;5896:130;;;6001:6;:12;;;6015:6;:10;;;5983:43;;;;;;;;;;;;:::i;:::-;;;;;;;;5896:130;6098:9;6089:6;6053:19;:25;6073:4;6053:25;;;;;;;;;;;:33;6079:6;6053:33;;;;;;;;;;;;;;;;:42;;;;:::i;:::-;:54;:123;;;;6159:6;:17;;;6123:53;;6150:6;6123;:24;;;:33;;;;;;:::i;:::-;:53;6053:123;6036:175;;;6194:17;;;;;;;;;;;;;;6036:175;6226:52;6241:4;6247:6;6255:9;6266:11;;6226:14;:52::i;:::-;6221:92;;6299:14;;;;;;;;;;;;;;6221:92;6475:6;6438:19;:25;6458:4;6438:25;;;;;;;;;;;:33;6464:6;6438:33;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;6546:6;6491:20;:26;6512:4;6491:26;;;;;;;;;;;:44;;;:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6615:9;6627:1;6615:13;;6610:193;6635:6;6630:1;:11;6610:193;;6662:12;;:14;;;;;;;;;:::i;:::-;;;;;;6690:27;6700:2;6704:12;;6690:9;:27::i;:::-;6756:2;6736:56;;6748:6;6736:56;;;6760:4;6766:12;;6780:1;6783:4;6736:56;;;;;;;;;:::i;:::-;;;;;;;;6643:3;;;;;:::i;:::-;;;;6610:193;;;;6848:6;6818:187;;;6868:4;6886;6904:19;:25;6924:4;6904:25;;;;;;;;;;;:33;6930:6;6904:33;;;;;;;;;;;;;;;;6951:20;:26;6972:4;6951:26;;;;;;;;;;;:44;;;;;;;;;;;;6818:187;;;;;;;;;:::i;:::-;;;;;;;;5499:1513;;5328:1684;;;;;;:::o;4143:578:7:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1099:26:19:-;;;;;;;;;;;;;:::o;1761:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1227:74::-;;;;;;;;;;;;;:::o;4787:132:7:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1903:27:19:-;;;;;;;;;;;;;:::o;7297:157::-;1531:13:0;:11;:13::i;:::-;7398:1:19::1;7380:6;;7374:20;;:25:::0;7370:50:::1;;7408:12;;;;;;;;;;;;;;7370:50;7441:6;;7431:7;:16;;;;;;;:::i;:::-;;7297:157:::0;;:::o;2185:118:7:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;10964:163:19:-;1531:13:0;:11;:13::i;:::-;11054:1:19::1;11037:19;;:5;:19;;::::0;11033:48:::1;;11065:16;;;;;;;;;;;;;;11033:48;11114:5;11092:12;;:28;;;;;;;;;;;;;;;;;;10964:163:::0;:::o;1988:21::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1920:208:7:-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:7:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;10102:105:19:-;1531:13:0;:11;:13::i;:::-;10192:8:19::1;10174:15;;:26;;;;;;;;;;;;;;;;;;10102:105:::0;:::o;3718:144:7:-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;1542:61:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8202:487::-;1531:13:0;:11;:13::i;:::-;8582:1:19::1;8574:4;:9;:28;;;;1393:2;8587:4;:15;8574:28;8570:67;;;8625:1;1393:2;8611:26;;;;;;;;;;;;:::i;:::-;;;;;;;;8570:67;8674:8;8648:17;:23;8666:4;8648:23;;;;;;;;;;;:34;;;;;;:::i;:::-;;;;8202:487:::0;;:::o;1358:37::-;1393:2;1358:37;:::o;2994:1815::-;3187:1;3179:4;:9;:28;;;;1393:2;3192:4;:15;3179:28;:43;;;;3221:1;3211:6;:11;3179:43;:63;;;;3240:1;3226:16;;:2;:16;;;3179:63;3175:104;;;3263:16;;;;;;;;;;;;;;3175:104;3357:24;3384:17;:23;3402:4;3384:23;;;;;;;;;;;3357:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3417:14;3434:12;:10;:12::i;:::-;3417:29;;3478:6;:12;;;3460:30;;:15;:30;:62;;;;3512:6;:10;;;3494:28;;:15;:28;3460:62;3456:130;;;3561:6;:12;;;3575:6;:10;;;3543:43;;;;;;;;;;;;:::i;:::-;;;;;;;;3456:130;3616:1;3600:6;:12;;;:17;3596:50;;3626:20;;;;;;;;;;;;;;3596:50;3715:6;:17;;;3673:59;;3706:6;3673:16;:22;3690:4;3673:22;;;;;;;;;;;:30;3696:6;3673:30;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;:59;:128;;;;3784:6;:17;;;3748:53;;3775:6;3748;:24;;;:33;;;;;;:::i;:::-;:53;3673:128;3656:180;;;3819:17;;;;;;;;;;;;;;3656:180;3960:6;3908:17;:23;3926:4;3908:23;;;;;;;;;;;:41;;;:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4056:6;4022:16;:22;4039:4;4022:22;;;;;;;;;;;:30;4045:6;4022:30;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;4093:20;4131:6;4116;:12;;;:21;;;;:::i;:::-;4093:44;;4147:67;4177:6;4185:14;;;;;;;;;;;4201:12;4147;;;;;;;;;;;:29;;;;:67;;;;;;:::i;:::-;4277:9;4289:1;4277:13;;4272:333;4297:6;4292:1;:11;4272:333;;4324:12;;:14;;;;;;;;;:::i;:::-;;;;;;4352:27;4362:2;4366:12;;4352:9;:27::i;:::-;4451:2;4398:196;;4427:6;4398:196;;;4471:4;4493:12;;4523:6;:12;;;4553:5;4576:4;;4398:196;;;;;;;;;;;:::i;:::-;;;;;;;;4305:3;;;;;:::i;:::-;;;;4272:333;;;;4650:6;4620:182;;;4670:4;4688:5;4707:16;:22;4724:4;4707:22;;;;;;;;;;;:30;4730:6;4707:30;;;;;;;;;;;;;;;;4751:17;:23;4769:4;4751:23;;;;;;;;;;;:41;;;;;;;;;;;;4620:182;;;;;;;;;:::i;:::-;;;;;;;;3125:1684;;;2994:1815;;;;;:::o;4985:208:7:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;3928:153::-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1481:55:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;9363:501:19:-;1531:13:0;:11;:13::i;:::-;9754:1:19::1;9746:4;:9;:28;;;;1393:2;9759:4;:15;9746:28;9742:67;;;9797:1;1393:2;9783:26;;;;;;;;;;;;:::i;:::-;;;;;;;;9742:67;9849:8;9820:20;:26;9841:4;9820:26;;;;;;;;;;;:37;;;;;;:::i;:::-;;;;9363:501:::0;;:::o;762:146:15:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:7:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:12:-;709:7;735:10;728:17;;656:96;:::o;14418:120:7:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;11627:449:19:-;11788:4;11804:12;11876:2;11880:9;11865:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11855:36;;;;;;11842:50;;;;;;;;:::i;:::-;;;;;;;;;;;;;11819:83;;;;;;11804:98;;11931:138;11967:11;;11931:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11996:20;:26;12017:4;11996:26;;;;;;;;;;;:37;;;12051:4;11931:18;:138::i;:::-;11912:157;;;11627:449;;;;;;;:::o;10633:100:7:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;12300:360:19:-;12425:7;12444:21;12468:32;12482:2;12486:7;12495:4;12468:13;:32::i;:::-;12444:56;;12531:15;;;;;;;;;;;:46;;;;12575:1;12550:27;;:13;:27;;;12531:46;12510:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;12640:13;12633:20;;;12300:360;;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15591:312:7:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;1702:188:6:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;16918:782:7:-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;12666:98:19:-;12718:13;12750:7;12743:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12666:98;:::o;637:698:13:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:7:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;1265:154:14:-;1356:4;1408;1379:25;1392:5;1399:4;1379:12;:25::i;:::-;:33;1372:40;;1265:154;;;;;:::o;10954:182:7:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;4059:629:6:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;12214:916:17:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;1967:290:14:-;2050:7;2069:20;2092:4;2069:27;;2111:9;2106:116;2130:5;:12;2126:1;:16;2106:116;;;2178:33;2188:12;2202:5;2208:1;2202:8;;;;;;;;:::i;:::-;;;;;;;;2178:9;:33::i;:::-;2163:48;;2144:3;;;;;:::i;:::-;;;;2106:116;;;;2238:12;2231:19;;;1967:290;;;;:::o;9955:327:7:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;2705:151:11:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;9229:147:14:-;9292:7;9322:1;9318;:5;:51;;9349:20;9364:1;9367;9349:14;:20::i;:::-;9318:51;;;9326:20;9341:1;9344;9326:14;:20::i;:::-;9318:51;9311:58;;9229:147;;;;:::o;6376:272:7:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;3180:392:11:-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;9496:261:14:-;9564:13;9668:1;9662:4;9655:15;9696:1;9690:4;9683:15;9736:4;9730;9720:21;9711:30;;9496:261;;;;:::o;4625:582:11:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:21;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:::-;4958:6;4966;5015:2;5003:9;4994:7;4990:23;4986:32;4983:119;;;5021:79;;:::i;:::-;4983:119;5141:1;5166:53;5211:7;5202:6;5191:9;5187:22;5166:53;:::i;:::-;5156:63;;5112:117;5268:2;5294:53;5339:7;5330:6;5319:9;5315:22;5294:53;:::i;:::-;5284:63;;5239:118;4890:474;;;;;:::o;5370:118::-;5457:24;5475:5;5457:24;:::i;:::-;5452:3;5445:37;5370:118;;:::o;5494:222::-;5587:4;5625:2;5614:9;5610:18;5602:26;;5638:71;5706:1;5695:9;5691:17;5682:6;5638:71;:::i;:::-;5494:222;;;;:::o;5722:329::-;5781:6;5830:2;5818:9;5809:7;5805:23;5801:32;5798:119;;;5836:79;;:::i;:::-;5798:119;5956:1;5981:53;6026:7;6017:6;6006:9;6002:22;5981:53;:::i;:::-;5971:63;;5927:117;5722:329;;;;:::o;6057:117::-;6166:1;6163;6156:12;6180:117;6289:1;6286;6279:12;6303:117;6412:1;6409;6402:12;6443:568;6516:8;6526:6;6576:3;6569:4;6561:6;6557:17;6553:27;6543:122;;6584:79;;:::i;:::-;6543:122;6697:6;6684:20;6674:30;;6727:18;6719:6;6716:30;6713:117;;;6749:79;;:::i;:::-;6713:117;6863:4;6855:6;6851:17;6839:29;;6917:3;6909:4;6901:6;6897:17;6887:8;6883:32;6880:41;6877:128;;;6924:79;;:::i;:::-;6877:128;6443:568;;;;;:::o;7017:1141::-;7139:6;7147;7155;7163;7171;7179;7228:3;7216:9;7207:7;7203:23;7199:33;7196:120;;;7235:79;;:::i;:::-;7196:120;7355:1;7380:53;7425:7;7416:6;7405:9;7401:22;7380:53;:::i;:::-;7370:63;;7326:117;7482:2;7508:53;7553:7;7544:6;7533:9;7529:22;7508:53;:::i;:::-;7498:63;;7453:118;7610:2;7636:53;7681:7;7672:6;7661:9;7657:22;7636:53;:::i;:::-;7626:63;;7581:118;7738:2;7764:53;7809:7;7800:6;7789:9;7785:22;7764:53;:::i;:::-;7754:63;;7709:118;7894:3;7883:9;7879:19;7866:33;7926:18;7918:6;7915:30;7912:117;;;7948:79;;:::i;:::-;7912:117;8061:80;8133:7;8124:6;8113:9;8109:22;8061:80;:::i;:::-;8043:98;;;;7837:314;7017:1141;;;;;;;;:::o;8164:619::-;8241:6;8249;8257;8306:2;8294:9;8285:7;8281:23;8277:32;8274:119;;;8312:79;;:::i;:::-;8274:119;8432:1;8457:53;8502:7;8493:6;8482:9;8478:22;8457:53;:::i;:::-;8447:63;;8403:117;8559:2;8585:53;8630:7;8621:6;8610:9;8606:22;8585:53;:::i;:::-;8575:63;;8530:118;8687:2;8713:53;8758:7;8749:6;8738:9;8734:22;8713:53;:::i;:::-;8703:63;;8658:118;8164:619;;;;;:::o;8789:60::-;8817:3;8838:5;8831:12;;8789:60;;;:::o;8855:142::-;8905:9;8938:53;8956:34;8965:24;8983:5;8965:24;:::i;:::-;8956:34;:::i;:::-;8938:53;:::i;:::-;8925:66;;8855:142;;;:::o;9003:126::-;9053:9;9086:37;9117:5;9086:37;:::i;:::-;9073:50;;9003:126;;;:::o;9135:140::-;9199:9;9232:37;9263:5;9232:37;:::i;:::-;9219:50;;9135:140;;;:::o;9281:159::-;9382:51;9427:5;9382:51;:::i;:::-;9377:3;9370:64;9281:159;;:::o;9446:250::-;9553:4;9591:2;9580:9;9576:18;9568:26;;9604:85;9686:1;9675:9;9671:17;9662:6;9604:85;:::i;:::-;9446:250;;;;:::o;9716:553::-;9774:8;9784:6;9834:3;9827:4;9819:6;9815:17;9811:27;9801:122;;9842:79;;:::i;:::-;9801:122;9955:6;9942:20;9932:30;;9985:18;9977:6;9974:30;9971:117;;;10007:79;;:::i;:::-;9971:117;10121:4;10113:6;10109:17;10097:29;;10175:3;10167:4;10159:6;10155:17;10145:8;10141:32;10138:41;10135:128;;;10182:79;;:::i;:::-;10135:128;9716:553;;;;;:::o;10275:529::-;10346:6;10354;10403:2;10391:9;10382:7;10378:23;10374:32;10371:119;;;10409:79;;:::i;:::-;10371:119;10557:1;10546:9;10542:17;10529:31;10587:18;10579:6;10576:30;10573:117;;;10609:79;;:::i;:::-;10573:117;10722:65;10779:7;10770:6;10759:9;10755:22;10722:65;:::i;:::-;10704:83;;;;10500:297;10275:529;;;;;:::o;10810:116::-;10880:21;10895:5;10880:21;:::i;:::-;10873:5;10870:32;10860:60;;10916:1;10913;10906:12;10860:60;10810:116;:::o;10932:133::-;10975:5;11013:6;11000:20;10991:29;;11029:30;11053:5;11029:30;:::i;:::-;10932:133;;;;:::o;11071:323::-;11127:6;11176:2;11164:9;11155:7;11151:23;11147:32;11144:119;;;11182:79;;:::i;:::-;11144:119;11302:1;11327:50;11369:7;11360:6;11349:9;11345:22;11327:50;:::i;:::-;11317:60;;11273:114;11071:323;;;;:::o;11400:468::-;11465:6;11473;11522:2;11510:9;11501:7;11497:23;11493:32;11490:119;;;11528:79;;:::i;:::-;11490:119;11648:1;11673:53;11718:7;11709:6;11698:9;11694:22;11673:53;:::i;:::-;11663:63;;11619:117;11775:2;11801:50;11843:7;11834:6;11823:9;11819:22;11801:50;:::i;:::-;11791:60;;11746:115;11400:468;;;;;:::o;11874:77::-;11911:7;11940:5;11929:16;;11874:77;;;:::o;11957:118::-;12044:24;12062:5;12044:24;:::i;:::-;12039:3;12032:37;11957:118;;:::o;12081:93::-;12117:7;12157:10;12150:5;12146:22;12135:33;;12081:93;;;:::o;12180:115::-;12265:23;12282:5;12265:23;:::i;:::-;12260:3;12253:36;12180:115;;:::o;12301:101::-;12337:7;12377:18;12370:5;12366:30;12355:41;;12301:101;;;:::o;12408:115::-;12493:23;12510:5;12493:23;:::i;:::-;12488:3;12481:36;12408:115;;:::o;12529:648::-;12726:4;12764:3;12753:9;12749:19;12741:27;;12778:71;12846:1;12835:9;12831:17;12822:6;12778:71;:::i;:::-;12859:70;12925:2;12914:9;12910:18;12901:6;12859:70;:::i;:::-;12939;13005:2;12994:9;12990:18;12981:6;12939:70;:::i;:::-;13019;13085:2;13074:9;13070:18;13061:6;13019:70;:::i;:::-;13099:71;13165:3;13154:9;13150:19;13141:6;13099:71;:::i;:::-;12529:648;;;;;;;;:::o;13183:117::-;13292:1;13289;13282:12;13339:235;13415:5;13456:3;13447:6;13442:3;13438:16;13434:26;13431:113;;;13463:79;;:::i;:::-;13431:113;13562:6;13553:15;;13339:235;;;;:::o;13580:535::-;13678:6;13686;13735:3;13723:9;13714:7;13710:23;13706:33;13703:120;;;13742:79;;:::i;:::-;13703:120;13862:1;13887:53;13932:7;13923:6;13912:9;13908:22;13887:53;:::i;:::-;13877:63;;13833:117;13989:2;14015:83;14090:7;14081:6;14070:9;14066:22;14015:83;:::i;:::-;14005:93;;13960:148;13580:535;;;;;:::o;14121:965::-;14219:6;14227;14235;14243;14251;14300:3;14288:9;14279:7;14275:23;14271:33;14268:120;;;14307:79;;:::i;:::-;14268:120;14427:1;14452:53;14497:7;14488:6;14477:9;14473:22;14452:53;:::i;:::-;14442:63;;14398:117;14554:2;14580:53;14625:7;14616:6;14605:9;14601:22;14580:53;:::i;:::-;14570:63;;14525:118;14682:2;14708:53;14753:7;14744:6;14733:9;14729:22;14708:53;:::i;:::-;14698:63;;14653:118;14838:2;14827:9;14823:18;14810:32;14869:18;14861:6;14858:30;14855:117;;;14891:79;;:::i;:::-;14855:117;15004:65;15061:7;15052:6;15041:9;15037:22;15004:65;:::i;:::-;14986:83;;;;14781:298;14121:965;;;;;;;;:::o;15092:117::-;15201:1;15198;15191:12;15215:180;15263:77;15260:1;15253:88;15360:4;15357:1;15350:15;15384:4;15381:1;15374:15;15401:281;15484:27;15506:4;15484:27;:::i;:::-;15476:6;15472:40;15614:6;15602:10;15599:22;15578:18;15566:10;15563:34;15560:62;15557:88;;;15625:18;;:::i;:::-;15557:88;15665:10;15661:2;15654:22;15444:238;15401:281;;:::o;15688:129::-;15722:6;15749:20;;:::i;:::-;15739:30;;15778:33;15806:4;15798:6;15778:33;:::i;:::-;15688:129;;;:::o;15823:307::-;15884:4;15974:18;15966:6;15963:30;15960:56;;;15996:18;;:::i;:::-;15960:56;16034:29;16056:6;16034:29;:::i;:::-;16026:37;;16118:4;16112;16108:15;16100:23;;15823:307;;;:::o;16136:146::-;16233:6;16228:3;16223;16210:30;16274:1;16265:6;16260:3;16256:16;16249:27;16136:146;;;:::o;16288:423::-;16365:5;16390:65;16406:48;16447:6;16406:48;:::i;:::-;16390:65;:::i;:::-;16381:74;;16478:6;16471:5;16464:21;16516:4;16509:5;16505:16;16554:3;16545:6;16540:3;16536:16;16533:25;16530:112;;;16561:79;;:::i;:::-;16530:112;16651:54;16698:6;16693:3;16688;16651:54;:::i;:::-;16371:340;16288:423;;;;;:::o;16730:338::-;16785:5;16834:3;16827:4;16819:6;16815:17;16811:27;16801:122;;16842:79;;:::i;:::-;16801:122;16959:6;16946:20;16984:78;17058:3;17050:6;17043:4;17035:6;17031:17;16984:78;:::i;:::-;16975:87;;16791:277;16730:338;;;;:::o;17074:943::-;17169:6;17177;17185;17193;17242:3;17230:9;17221:7;17217:23;17213:33;17210:120;;;17249:79;;:::i;:::-;17210:120;17369:1;17394:53;17439:7;17430:6;17419:9;17415:22;17394:53;:::i;:::-;17384:63;;17340:117;17496:2;17522:53;17567:7;17558:6;17547:9;17543:22;17522:53;:::i;:::-;17512:63;;17467:118;17624:2;17650:53;17695:7;17686:6;17675:9;17671:22;17650:53;:::i;:::-;17640:63;;17595:118;17780:2;17769:9;17765:18;17752:32;17811:18;17803:6;17800:30;17797:117;;;17833:79;;:::i;:::-;17797:117;17938:62;17992:7;17983:6;17972:9;17968:22;17938:62;:::i;:::-;17928:72;;17723:287;17074:943;;;;;;;:::o;18023:474::-;18091:6;18099;18148:2;18136:9;18127:7;18123:23;18119:32;18116:119;;;18154:79;;:::i;:::-;18116:119;18274:1;18299:53;18344:7;18335:6;18324:9;18320:22;18299:53;:::i;:::-;18289:63;;18245:117;18401:2;18427:53;18472:7;18463:6;18452:9;18448:22;18427:53;:::i;:::-;18417:63;;18372:118;18023:474;;;;;:::o;18503:755::-;18726:4;18764:3;18753:9;18749:19;18741:27;;18778:71;18846:1;18835:9;18831:17;18822:6;18778:71;:::i;:::-;18859:70;18925:2;18914:9;18910:18;18901:6;18859:70;:::i;:::-;18939;19005:2;18994:9;18990:18;18981:6;18939:70;:::i;:::-;19019;19085:2;19074:9;19070:18;19061:6;19019:70;:::i;:::-;19099:71;19165:3;19154:9;19150:19;19141:6;19099:71;:::i;:::-;19180;19246:3;19235:9;19231:19;19222:6;19180:71;:::i;:::-;18503:755;;;;;;;;;:::o;19300:238::-;19379:5;19420:3;19411:6;19406:3;19402:16;19398:26;19395:113;;;19427:79;;:::i;:::-;19395:113;19526:6;19517:15;;19300:238;;;;:::o;19544:541::-;19645:6;19653;19702:3;19690:9;19681:7;19677:23;19673:33;19670:120;;;19709:79;;:::i;:::-;19670:120;19829:1;19854:53;19899:7;19890:6;19879:9;19875:22;19854:53;:::i;:::-;19844:63;;19800:117;19956:2;19982:86;20060:7;20051:6;20040:9;20036:22;19982:86;:::i;:::-;19972:96;;19927:151;19544:541;;;;;:::o;20091:180::-;20139:77;20136:1;20129:88;20236:4;20233:1;20226:15;20260:4;20257:1;20250:15;20277:320;20321:6;20358:1;20352:4;20348:12;20338:22;;20405:1;20399:4;20395:12;20426:18;20416:81;;20482:4;20474:6;20470:17;20460:27;;20416:81;20544:2;20536:6;20533:14;20513:18;20510:38;20507:84;;20563:18;;:::i;:::-;20507:84;20328:269;20277:320;;;:::o;20603:140::-;20652:9;20685:52;20703:33;20712:23;20729:5;20712:23;:::i;:::-;20703:33;:::i;:::-;20685:52;:::i;:::-;20672:65;;20603:140;;;:::o;20749:129::-;20835:36;20865:5;20835:36;:::i;:::-;20830:3;20823:49;20749:129;;:::o;20884:328::-;21003:4;21041:2;21030:9;21026:18;21018:26;;21054:70;21121:1;21110:9;21106:17;21097:6;21054:70;:::i;:::-;21134:71;21201:2;21190:9;21186:18;21177:6;21134:71;:::i;:::-;20884:328;;;;;:::o;21218:180::-;21266:77;21263:1;21256:88;21363:4;21360:1;21353:15;21387:4;21384:1;21377:15;21404:191;21444:3;21463:20;21481:1;21463:20;:::i;:::-;21458:25;;21497:20;21515:1;21497:20;:::i;:::-;21492:25;;21540:1;21537;21533:9;21526:16;;21561:3;21558:1;21555:10;21552:36;;;21568:18;;:::i;:::-;21552:36;21404:191;;;;:::o;21601:205::-;21640:3;21659:19;21676:1;21659:19;:::i;:::-;21654:24;;21692:19;21709:1;21692:19;:::i;:::-;21687:24;;21734:1;21731;21727:9;21720:16;;21757:18;21752:3;21749:27;21746:53;;;21779:18;;:::i;:::-;21746:53;21601:205;;;;:::o;21812:233::-;21851:3;21874:24;21892:5;21874:24;:::i;:::-;21865:33;;21920:66;21913:5;21910:77;21907:103;;21990:18;;:::i;:::-;21907:103;22037:1;22030:5;22026:13;22019:20;;21812:233;;;:::o;22051:85::-;22096:7;22125:5;22114:16;;22051:85;;;:::o;22142:158::-;22200:9;22233:61;22251:42;22260:32;22286:5;22260:32;:::i;:::-;22251:42;:::i;:::-;22233:61;:::i;:::-;22220:74;;22142:158;;;:::o;22306:147::-;22401:45;22440:5;22401:45;:::i;:::-;22396:3;22389:58;22306:147;;:::o;22459:114::-;;:::o;22579:364::-;22721:3;22742:66;22806:1;22801:3;22742:66;:::i;:::-;22735:73;;22817:93;22906:3;22817:93;:::i;:::-;22935:1;22930:3;22926:11;22919:18;;22579:364;;;:::o;22949:865::-;23229:4;23267:3;23256:9;23252:19;23244:27;;23281:71;23349:1;23338:9;23334:17;23325:6;23281:71;:::i;:::-;23362:72;23430:2;23419:9;23415:18;23406:6;23362:72;:::i;:::-;23444:80;23520:2;23509:9;23505:18;23496:6;23444:80;:::i;:::-;23534:66;23596:2;23585:9;23581:18;23572:6;23534:66;:::i;:::-;23648:9;23642:4;23638:20;23632:3;23621:9;23617:19;23610:49;23676:131;23802:4;23676:131;:::i;:::-;23668:139;;22949:865;;;;;;;:::o;23820:539::-;23990:4;24028:3;24017:9;24013:19;24005:27;;24042:71;24110:1;24099:9;24095:17;24086:6;24042:71;:::i;:::-;24123:66;24185:2;24174:9;24170:18;24161:6;24123:66;:::i;:::-;24199:72;24267:2;24256:9;24252:18;24243:6;24199:72;:::i;:::-;24281:71;24348:2;24337:9;24333:18;24324:6;24281:71;:::i;:::-;23820:539;;;;;;;:::o;24365:442::-;24514:4;24552:2;24541:9;24537:18;24529:26;;24565:71;24633:1;24622:9;24618:17;24609:6;24565:71;:::i;:::-;24646:72;24714:2;24703:9;24699:18;24690:6;24646:72;:::i;:::-;24728;24796:2;24785:9;24781:18;24772:6;24728:72;:::i;:::-;24365:442;;;;;;:::o;24813:97::-;24872:6;24900:3;24890:13;;24813:97;;;;:::o;24916:141::-;24965:4;24988:3;24980:11;;25011:3;25008:1;25001:14;25045:4;25042:1;25032:18;25024:26;;24916:141;;;:::o;25063:93::-;25100:6;25147:2;25142;25135:5;25131:14;25127:23;25117:33;;25063:93;;;:::o;25162:107::-;25206:8;25256:5;25250:4;25246:16;25225:37;;25162:107;;;;:::o;25275:393::-;25344:6;25394:1;25382:10;25378:18;25417:97;25447:66;25436:9;25417:97;:::i;:::-;25535:39;25565:8;25554:9;25535:39;:::i;:::-;25523:51;;25607:4;25603:9;25596:5;25592:21;25583:30;;25656:4;25646:8;25642:19;25635:5;25632:30;25622:40;;25351:317;;25275:393;;;;;:::o;25674:142::-;25724:9;25757:53;25775:34;25784:24;25802:5;25784:24;:::i;:::-;25775:34;:::i;:::-;25757:53;:::i;:::-;25744:66;;25674:142;;;:::o;25822:75::-;25865:3;25886:5;25879:12;;25822:75;;;:::o;25903:269::-;26013:39;26044:7;26013:39;:::i;:::-;26074:91;26123:41;26147:16;26123:41;:::i;:::-;26115:6;26108:4;26102:11;26074:91;:::i;:::-;26068:4;26061:105;25979:193;25903:269;;;:::o;26178:73::-;26223:3;26178:73;:::o;26257:189::-;26334:32;;:::i;:::-;26375:65;26433:6;26425;26419:4;26375:65;:::i;:::-;26310:136;26257:189;;:::o;26452:186::-;26512:120;26529:3;26522:5;26519:14;26512:120;;;26583:39;26620:1;26613:5;26583:39;:::i;:::-;26556:1;26549:5;26545:13;26536:22;;26512:120;;;26452:186;;:::o;26644:543::-;26745:2;26740:3;26737:11;26734:446;;;26779:38;26811:5;26779:38;:::i;:::-;26863:29;26881:10;26863:29;:::i;:::-;26853:8;26849:44;27046:2;27034:10;27031:18;27028:49;;;27067:8;27052:23;;27028:49;27090:80;27146:22;27164:3;27146:22;:::i;:::-;27136:8;27132:37;27119:11;27090:80;:::i;:::-;26749:431;;26734:446;26644:543;;;:::o;27193:117::-;27247:8;27297:5;27291:4;27287:16;27266:37;;27193:117;;;;:::o;27316:169::-;27360:6;27393:51;27441:1;27437:6;27429:5;27426:1;27422:13;27393:51;:::i;:::-;27389:56;27474:4;27468;27464:15;27454:25;;27367:118;27316:169;;;;:::o;27490:295::-;27566:4;27712:29;27737:3;27731:4;27712:29;:::i;:::-;27704:37;;27774:3;27771:1;27767:11;27761:4;27758:21;27750:29;;27490:295;;;;:::o;27790:1403::-;27914:44;27954:3;27949;27914:44;:::i;:::-;28023:18;28015:6;28012:30;28009:56;;;28045:18;;:::i;:::-;28009:56;28089:38;28121:4;28115:11;28089:38;:::i;:::-;28174:67;28234:6;28226;28220:4;28174:67;:::i;:::-;28268:1;28297:2;28289:6;28286:14;28314:1;28309:632;;;;28985:1;29002:6;28999:84;;;29058:9;29053:3;29049:19;29036:33;29027:42;;28999:84;29109:67;29169:6;29162:5;29109:67;:::i;:::-;29103:4;29096:81;28958:229;28279:908;;28309:632;28361:4;28357:9;28349:6;28345:22;28395:37;28427:4;28395:37;:::i;:::-;28454:1;28468:215;28482:7;28479:1;28476:14;28468:215;;;28568:9;28563:3;28559:19;28546:33;28538:6;28531:49;28619:1;28611:6;28607:14;28597:24;;28666:2;28655:9;28651:18;28638:31;;28505:4;28502:1;28498:12;28493:17;;28468:215;;;28711:6;28702:7;28699:19;28696:186;;;28776:9;28771:3;28767:19;28754:33;28819:48;28861:4;28853:6;28849:17;28838:9;28819:48;:::i;:::-;28811:6;28804:64;28719:163;28696:186;28928:1;28924;28916:6;28912:14;28908:22;28902:4;28895:36;28316:625;;;28279:908;;27889:1304;;;27790:1403;;;:::o;29199:85::-;29244:7;29273:5;29262:16;;29199:85;;;:::o;29290:158::-;29348:9;29381:61;29399:42;29408:32;29434:5;29408:32;:::i;:::-;29399:42;:::i;:::-;29381:61;:::i;:::-;29368:74;;29290:158;;;:::o;29454:147::-;29549:45;29588:5;29549:45;:::i;:::-;29544:3;29537:58;29454:147;;:::o;29607:348::-;29736:4;29774:2;29763:9;29759:18;29751:26;;29787:79;29863:1;29852:9;29848:17;29839:6;29787:79;:::i;:::-;29876:72;29944:2;29933:9;29929:18;29920:6;29876:72;:::i;:::-;29607:348;;;;;:::o;30147:186::-;30192:11;30241:3;30228:17;30254:33;30281:5;30254:33;:::i;:::-;30321:5;30297:29;;30204:129;30147:186;;;:::o;30339:92::-;30371:8;30418:5;30415:1;30411:13;30390:34;;30339:92;;;:::o;30437:290::-;30495:6;30524:66;30611:22;30624:8;30611:22;:::i;:::-;30599:34;;30666:4;30662:9;30655:5;30651:21;30642:30;;30715:4;30705:8;30701:19;30694:5;30691:30;30681:40;;30502:225;30437:290;;;;:::o;30733:262::-;30843:39;30874:7;30843:39;:::i;:::-;30904:84;30946:41;30970:16;30946:41;:::i;:::-;30939:4;30933:11;30904:84;:::i;:::-;30898:4;30891:98;30809:186;30733:262;;:::o;31001:120::-;31073:23;31090:5;31073:23;:::i;:::-;31066:5;31063:34;31053:62;;31111:1;31108;31101:12;31053:62;31001:120;:::o;31127:184::-;31171:11;31220:3;31207:17;31233:32;31259:5;31233:32;:::i;:::-;31299:5;31275:29;;31183:128;31127:184;;;:::o;31317:233::-;31374:6;31403:10;31434:22;31447:8;31434:22;:::i;:::-;31422:34;;31489:4;31485:9;31478:5;31474:21;31465:30;;31538:4;31528:8;31524:19;31517:5;31514:30;31504:40;;31381:169;31317:233;;;;:::o;31556:138::-;31604:9;31637:51;31654:33;31663:23;31680:5;31663:23;:::i;:::-;31654:33;:::i;:::-;31637:51;:::i;:::-;31624:64;;31556:138;;;:::o;31700:74::-;31742:3;31763:5;31756:12;;31700:74;;;:::o;31780:256::-;31888:37;31917:7;31888:37;:::i;:::-;31947:82;31988:40;32011:16;31988:40;:::i;:::-;31981:4;31975:11;31947:82;:::i;:::-;31941:4;31934:96;31854:182;31780:256;;:::o;32042:94::-;32075:8;32123:5;32119:2;32115:14;32094:35;;32042:94;;;:::o;32142:242::-;32199:6;32228:18;32267:23;32281:8;32267:23;:::i;:::-;32255:35;;32323:4;32319:9;32312:5;32308:21;32299:30;;32372:4;32362:8;32358:19;32351:5;32348:30;32338:40;;32206:178;32142:242;;;;:::o;32390:256::-;32498:37;32527:7;32498:37;:::i;:::-;32557:82;32598:40;32621:16;32598:40;:::i;:::-;32591:4;32585:11;32557:82;:::i;:::-;32551:4;32544:96;32464:182;32390:256;;:::o;32652:120::-;32724:23;32741:5;32724:23;:::i;:::-;32717:5;32714:34;32704:62;;32762:1;32759;32752:12;32704:62;32652:120;:::o;32778:184::-;32822:11;32871:3;32858:17;32884:32;32910:5;32884:32;:::i;:::-;32950:5;32926:29;;32834:128;32778:184;;;:::o;32968:94::-;33001:8;33049:5;33045:2;33041:14;33020:35;;32968:94;;;:::o;33068:258::-;33125:6;33154:34;33209:23;33223:8;33209:23;:::i;:::-;33197:35;;33265:4;33261:9;33254:5;33250:21;33241:30;;33314:4;33304:8;33300:19;33293:5;33290:30;33280:40;;33132:194;33068:258;;;;:::o;33332:138::-;33380:9;33413:51;33430:33;33439:23;33456:5;33439:23;:::i;:::-;33430:33;:::i;:::-;33413:51;:::i;:::-;33400:64;;33332:138;;;:::o;33476:74::-;33518:3;33539:5;33532:12;;33476:74;;;:::o;33556:256::-;33664:37;33693:7;33664:37;:::i;:::-;33723:82;33764:40;33787:16;33764:40;:::i;:::-;33757:4;33751:11;33723:82;:::i;:::-;33717:4;33710:96;33630:182;33556:256;;:::o;33818:96::-;33852:8;33901:5;33896:3;33892:15;33871:36;;33818:96;;;:::o;33920:276::-;33978:6;34007:50;34078:24;34093:8;34078:24;:::i;:::-;34066:36;;34135:4;34131:9;34124:5;34120:21;34111:30;;34184:4;34174:8;34170:19;34163:5;34160:30;34150:40;;33985:211;33920:276;;;;:::o;34202:258::-;34311:37;34340:7;34311:37;:::i;:::-;34370:83;34412:40;34435:16;34412:40;:::i;:::-;34405:4;34399:11;34370:83;:::i;:::-;34364:4;34357:97;34277:183;34202:258;;:::o;34466:96::-;34500:8;34549:5;34544:3;34540:15;34519:36;;34466:96;;;:::o;34568:292::-;34626:6;34655:66;34742:24;34757:8;34742:24;:::i;:::-;34730:36;;34799:4;34795:9;34788:5;34784:21;34775:30;;34848:4;34838:8;34834:19;34827:5;34824:30;34814:40;;34633:227;34568:292;;;;:::o;34866:258::-;34975:37;35004:7;34975:37;:::i;:::-;35034:83;35076:40;35099:16;35076:40;:::i;:::-;35069:4;35063:11;35034:83;:::i;:::-;35028:4;35021:97;34941:183;34866:258;;:::o;35130:2152::-;35312:1;35306:4;35302:12;35358:1;35351:5;35347:13;35408:12;35451:42;35479:13;35451:42;:::i;:::-;35434:59;;35507:78;35571:13;35559:10;35507:78;:::i;:::-;35269:327;;;35649:1;35643:4;35639:12;35695:2;35688:5;35684:14;35746:12;35789:41;35816:13;35789:41;:::i;:::-;35772:58;;35844:76;35906:13;35894:10;35844:76;:::i;:::-;35606:325;;;35984:1;35978:4;35974:12;36030:2;36023:5;36019:14;36081:12;36124:41;36151:13;36124:41;:::i;:::-;36107:58;;36179:76;36241:13;36229:10;36179:76;:::i;:::-;35941:325;;;36319:1;36313:4;36309:12;36365:2;36358:5;36354:14;36416:12;36459:41;36486:13;36459:41;:::i;:::-;36442:58;;36514:76;36576:13;36564:10;36514:76;:::i;:::-;36276:325;;;36654:1;36648:4;36644:12;36700:3;36693:5;36689:15;36752:12;36795:41;36822:13;36795:41;:::i;:::-;36778:58;;36850:77;36913:13;36901:10;36850:77;:::i;:::-;36611:327;;;36991:1;36985:4;36981:12;37037:3;37030:5;37026:15;37089:12;37132:41;37159:13;37132:41;:::i;:::-;37115:58;;37187:77;37250:13;37238:10;37187:77;:::i;:::-;36948:327;;;35130:2152;;:::o;37288:268::-;37430:120;37542:7;37536:4;37430:120;:::i;:::-;37288:268;;:::o;37562:410::-;37602:7;37625:20;37643:1;37625:20;:::i;:::-;37620:25;;37659:20;37677:1;37659:20;:::i;:::-;37654:25;;37714:1;37711;37707:9;37736:30;37754:11;37736:30;:::i;:::-;37725:41;;37915:1;37906:7;37902:15;37899:1;37896:22;37876:1;37869:9;37849:83;37826:139;;37945:18;;:::i;:::-;37826:139;37610:362;37562:410;;;;:::o;38002:317::-;38100:3;38121:71;38185:6;38180:3;38121:71;:::i;:::-;38114:78;;38202:56;38251:6;38246:3;38239:5;38202:56;:::i;:::-;38283:29;38305:6;38283:29;:::i;:::-;38278:3;38274:39;38267:46;;38002:317;;;;;:::o;38325:763::-;38554:4;38592:3;38581:9;38577:19;38569:27;;38606:71;38674:1;38663:9;38659:17;38650:6;38606:71;:::i;:::-;38687:72;38755:2;38744:9;38740:18;38731:6;38687:72;:::i;:::-;38769;38837:2;38826:9;38822:18;38813:6;38769:72;:::i;:::-;38851:66;38913:2;38902:9;38898:18;38889:6;38851:66;:::i;:::-;38965:9;38959:4;38955:20;38949:3;38938:9;38934:19;38927:49;38993:88;39076:4;39067:6;39059;38993:88;:::i;:::-;38985:96;;38325:763;;;;;;;;;:::o;39094:148::-;39196:11;39233:3;39218:18;;39094:148;;;;:::o;39248:390::-;39354:3;39382:39;39415:5;39382:39;:::i;:::-;39437:89;39519:6;39514:3;39437:89;:::i;:::-;39430:96;;39535:65;39593:6;39588:3;39581:4;39574:5;39570:16;39535:65;:::i;:::-;39625:6;39620:3;39616:16;39609:23;;39358:280;39248:390;;;;:::o;39644:435::-;39824:3;39846:95;39937:3;39928:6;39846:95;:::i;:::-;39839:102;;39958:95;40049:3;40040:6;39958:95;:::i;:::-;39951:102;;40070:3;40063:10;;39644:435;;;;;:::o;40085:122::-;40158:24;40176:5;40158:24;:::i;:::-;40151:5;40148:35;40138:63;;40197:1;40194;40187:12;40138:63;40085:122;:::o;40213:186::-;40258:11;40307:3;40294:17;40320:33;40347:5;40320:33;:::i;:::-;40387:5;40363:29;;40270:129;40213:186;;;:::o;40405:113::-;40455:9;40488:24;40506:5;40488:24;:::i;:::-;40475:37;;40405:113;;;:::o;40524:102::-;40566:8;40613:5;40610:1;40606:13;40585:34;;40524:102;;;:::o;40632:99::-;40675:3;40696:29;40719:5;40696:29;:::i;:::-;40689:36;;40632:99;;;:::o;40737:262::-;40847:39;40878:7;40847:39;:::i;:::-;40908:84;40950:41;40974:16;40950:41;:::i;:::-;40943:4;40937:11;40908:84;:::i;:::-;40902:4;40895:98;40813:186;40737:262;;:::o;41005:250::-;41062:6;41091:26;41138:23;41152:8;41138:23;:::i;:::-;41126:35;;41194:4;41190:9;41183:5;41179:21;41170:30;;41243:4;41233:8;41229:19;41222:5;41219:30;41209:40;;41069:186;41005:250;;;;:::o;41261:256::-;41369:37;41398:7;41369:37;:::i;:::-;41428:82;41469:40;41492:16;41469:40;:::i;:::-;41462:4;41456:11;41428:82;:::i;:::-;41422:4;41415:96;41335:182;41261:256;;:::o;41523:94::-;41556:8;41604:5;41600:2;41596:14;41575:35;;41523:94;;;:::o;41623:267::-;41681:6;41710:42;41773:23;41787:8;41773:23;:::i;:::-;41761:35;;41829:4;41825:9;41818:5;41814:21;41805:30;;41878:4;41868:8;41864:19;41857:5;41854:30;41844:40;;41688:202;41623:267;;;;:::o;41896:258::-;42005:37;42034:7;42005:37;:::i;:::-;42064:83;42106:40;42129:16;42106:40;:::i;:::-;42099:4;42093:11;42064:83;:::i;:::-;42058:4;42051:97;41971:183;41896:258;;:::o;42160:96::-;42194:8;42243:5;42238:3;42234:15;42213:36;;42160:96;;;:::o;42262:284::-;42320:6;42349:58;42428:24;42443:8;42428:24;:::i;:::-;42416:36;;42485:4;42481:9;42474:5;42470:21;42461:30;;42534:4;42524:8;42520:19;42513:5;42510:30;42500:40;;42327:219;42262:284;;;;:::o;42552:258::-;42661:37;42690:7;42661:37;:::i;:::-;42720:83;42762:40;42785:16;42762:40;:::i;:::-;42755:4;42749:11;42720:83;:::i;:::-;42714:4;42707:97;42627:183;42552:258;;:::o;42816:1822::-;43004:1;42998:4;42994:12;43050:1;43043:5;43039:13;43100:12;43143:42;43171:13;43143:42;:::i;:::-;43126:59;;43199:78;43263:13;43251:10;43199:78;:::i;:::-;42961:327;;;43341:1;43335:4;43331:12;43387:2;43380:5;43376:14;43438:12;43481:41;43508:13;43481:41;:::i;:::-;43464:58;;43536:76;43598:13;43586:10;43536:76;:::i;:::-;43298:325;;;43676:1;43670:4;43666:12;43722:2;43715:5;43711:14;43773:12;43816:41;43843:13;43816:41;:::i;:::-;43799:58;;43871:76;43933:13;43921:10;43871:76;:::i;:::-;43633:325;;;44011:1;44005:4;44001:12;44057:2;44050:5;44046:14;44108:12;44151:41;44178:13;44151:41;:::i;:::-;44134:58;;44206:77;44269:13;44257:10;44206:77;:::i;:::-;43968:326;;;44347:1;44341:4;44337:12;44393:3;44386:5;44382:15;44445:12;44488:41;44515:13;44488:41;:::i;:::-;44471:58;;44543:77;44606:13;44594:10;44543:77;:::i;:::-;44304:327;;;42816:1822;;:::o;44644:280::-;44792:126;44910:7;44904:4;44792:126;:::i;:::-;44644:280;;:::o;44930:332::-;45051:4;45089:2;45078:9;45074:18;45066:26;;45102:71;45170:1;45159:9;45155:17;45146:6;45102:71;:::i;:::-;45183:72;45251:2;45240:9;45236:18;45227:6;45183:72;:::i;:::-;44930:332;;;;;:::o;45268:79::-;45307:7;45336:5;45325:16;;45268:79;;;:::o;45353:157::-;45458:45;45478:24;45496:5;45478:24;:::i;:::-;45458:45;:::i;:::-;45453:3;45446:58;45353:157;;:::o;45516:256::-;45628:3;45643:75;45714:3;45705:6;45643:75;:::i;:::-;45743:2;45738:3;45734:12;45727:19;;45763:3;45756:10;;45516:256;;;;:::o;45778:170::-;45918:22;45914:1;45906:6;45902:14;45895:46;45778:170;:::o;45954:366::-;46096:3;46117:67;46181:2;46176:3;46117:67;:::i;:::-;46110:74;;46193:93;46282:3;46193:93;:::i;:::-;46311:2;46306:3;46302:12;46295:19;;45954:366;;;:::o;46326:419::-;46492:4;46530:2;46519:9;46515:18;46507:26;;46579:9;46573:4;46569:20;46565:1;46554:9;46550:17;46543:47;46607:131;46733:4;46607:131;:::i;:::-;46599:139;;46326:419;;;:::o;46751:442::-;46900:4;46938:2;46927:9;46923:18;46915:26;;46951:71;47019:1;47008:9;47004:17;46995:6;46951:71;:::i;:::-;47032:72;47100:2;47089:9;47085:18;47076:6;47032:72;:::i;:::-;47114;47182:2;47171:9;47167:18;47158:6;47114:72;:::i;:::-;46751:442;;;;;;:::o;47199:98::-;47250:6;47284:5;47278:12;47268:22;;47199:98;;;:::o;47303:168::-;47386:11;47420:6;47415:3;47408:19;47460:4;47455:3;47451:14;47436:29;;47303:168;;;;:::o;47477:373::-;47563:3;47591:38;47623:5;47591:38;:::i;:::-;47645:70;47708:6;47703:3;47645:70;:::i;:::-;47638:77;;47724:65;47782:6;47777:3;47770:4;47763:5;47759:16;47724:65;:::i;:::-;47814:29;47836:6;47814:29;:::i;:::-;47809:3;47805:39;47798:46;;47567:283;47477:373;;;;:::o;47856:640::-;48051:4;48089:3;48078:9;48074:19;48066:27;;48103:71;48171:1;48160:9;48156:17;48147:6;48103:71;:::i;:::-;48184:72;48252:2;48241:9;48237:18;48228:6;48184:72;:::i;:::-;48266;48334:2;48323:9;48319:18;48310:6;48266:72;:::i;:::-;48385:9;48379:4;48375:20;48370:2;48359:9;48355:18;48348:48;48413:76;48484:4;48475:6;48413:76;:::i;:::-;48405:84;;47856:640;;;;;;;:::o;48502:141::-;48558:5;48589:6;48583:13;48574:22;;48605:32;48631:5;48605:32;:::i;:::-;48502:141;;;;:::o;48649:349::-;48718:6;48767:2;48755:9;48746:7;48742:23;48738:32;48735:119;;;48773:79;;:::i;:::-;48735:119;48893:1;48918:63;48973:7;48964:6;48953:9;48949:22;48918:63;:::i;:::-;48908:73;;48864:127;48649:349;;;;:::o;49004:180::-;49052:77;49049:1;49042:88;49149:4;49146:1;49139:15;49173:4;49170:1;49163:15;49190:137;49244:5;49275:6;49269:13;49260:22;;49291:30;49315:5;49291:30;:::i;:::-;49190:137;;;;:::o;49333:345::-;49400:6;49449:2;49437:9;49428:7;49424:23;49420:32;49417:119;;;49455:79;;:::i;:::-;49417:119;49575:1;49600:61;49653:7;49644:6;49633:9;49629:22;49600:61;:::i;:::-;49590:71;;49546:125;49333:345;;;;:::o;49684:180::-;49732:77;49729:1;49722:88;49829:4;49826:1;49819:15;49853:4;49850:1;49843:15;49870:147;49971:11;50008:3;49993:18;;49870:147;;;;:::o;50023:386::-;50127:3;50155:38;50187:5;50155:38;:::i;:::-;50209:88;50290:6;50285:3;50209:88;:::i;:::-;50202:95;;50306:65;50364:6;50359:3;50352:4;50345:5;50341:16;50306:65;:::i;:::-;50396:6;50391:3;50387:16;50380:23;;50131:278;50023:386;;;;:::o;50415:271::-;50545:3;50567:93;50656:3;50647:6;50567:93;:::i;:::-;50560:100;;50677:3;50670:10;;50415:271;;;;:::o"},"methodIdentifiers":{"KIPFundAddress()":"378077a8","MAX_TIER()":"af3a19c7","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","baseURI()":"6c0360eb","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","paymentToken()":"3013ce29","publicMint(uint256,address,uint256,string)":"b8240540","publicSaleConfigs(uint256)":"f1ce5fe0","publicUserMinted(uint256,address)":"33d9f1fa","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","setKIPFundAddress(address)":"1bb08048","setPaymentToken(address)":"6a326ab1","setPublicSaleConfigs(uint256,(uint256,uint32,uint32,uint64,uint64,uint64))":"acb889ee","setTransferEnabled(bool)":"9fe9f623","setWhitelistSaleConfigs(uint256,(bytes32,uint32,uint64,uint64,uint64))":"fcf9e1f8","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferEnabled()":"4cd412d5","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","whitelistMint(uint256,address,uint256,uint256,bytes32[])":"1d68e8ce","whitelistSaleConfigs(uint256)":"a4532fb9","whitelistUserMinted(uint256,address)":"1aca45a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTier\",\"type\":\"uint256\"}],\"name\":\"InvalidConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidURI\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceNotConfigured\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"SaleEventNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetAddressZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelist\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userMintCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tierMintCount\",\"type\":\"uint256\"}],\"name\":\"MintCountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelist\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"code\",\"type\":\"string\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"KIPFundAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"code\",\"type\":\"string\"}],\"name\":\"publicMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"publicSaleConfigs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"maxPerTier\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxPerUser\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"totalMintedAmount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"publicUserMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setKIPFundAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tier\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"maxPerTier\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxPerUser\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"totalMintedAmount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"}],\"internalType\":\"struct KIPNode.PublicSale\",\"name\":\"settings\",\"type\":\"tuple\"}],\"name\":\"setPublicSaleConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"setTransferEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tier\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"maxPerTier\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"totalMintedAmount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"}],\"internalType\":\"struct KIPNode.WhitelistSale\",\"name\":\"settings\",\"type\":\"tuple\"}],\"name\":\"setWhitelistSaleConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"whitelistMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whitelistSaleConfigs\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"maxPerTier\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"totalMintedAmount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistUserMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"publicMint(uint256,address,uint256,string)\":{\"details\":\"- Requirements: - Caller can be ANY - Params: - tier      Tier number (1 ~ 38) - to        Address of the Receiver - amount    A number of Licenses is requested to mint - code      External message\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setBaseURI(string)\":{\"details\":\"- Requirements: - Caller must be `owner` - New string value of `baseURI` should not be empty - Params: - newURI      A new value of `baseURI` (as string)\"},\"setKIPFundAddress(address)\":{\"details\":\"- Requirements: - Caller must be `owner` - New updating address must be non-zero (not 0x00) - Params: - newAddress            New address of KIP Protocol Treasury\"},\"setPaymentToken(address)\":{\"details\":\"- Requirements: - Caller must be `owner` - New updating payment token must be non-zero (not 0x00) - Params: - token            New address of the payment acceptance (ERC-20)\"},\"setPublicSaleConfigs(uint256,(uint256,uint32,uint32,uint64,uint64,uint64))\":{\"details\":\"- Requirements: - Caller must be `owner` - Params: - tier            Tier number (1 ~ 38) - settings: - start               The starting time of the Public Sale (timestamp) - end                 The ending time of the Public Sale (timestamp) - price               The payment amount per License - totalMintedAmount   The total Licenses that minted in the event (init value = 0) - maxPerUser          The max number of Licenses is allowed to purchased - maxPerTier          The max number of Licenses can be purchased in this tier\"},\"setTransferEnabled(bool)\":{\"details\":\"- Requirements: - Caller must be `owner` - Params: - newState            New state of `transferEnabled` (true or false)\"},\"setWhitelistSaleConfigs(uint256,(bytes32,uint32,uint64,uint64,uint64))\":{\"details\":\"- Requirements: - Caller must be `owner` - Params: - tier            Tier number (1 ~ 38) - settings: - start               The starting time of the Whitelist Sale (timestamp) - end                 The ending time of the Whitelist Sale (timestamp) - totalMintedAmount   The total Licenses that minted in the event (init value = 0) - maxPerTier          The max number of Licenses can be purchased in this tier - merkleRoot          The computed hash of Merkle Tree\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"whitelistMint(uint256,address,uint256,uint256,bytes32[])\":{\"details\":\"- Requirements: - Caller can be ANY - Params: - tier            Tier number (1 ~ 38) - to              Address of the Receiver - amount          A number of Licenses is requested to mint - maxAmount       A max number of Licenses can be purchased (set in the Merkle Tree) - merkleProof     An array of proof\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"publicMint(uint256,address,uint256,string)\":{\"notice\":\"Function for Minting Licenses in the Public Sale\"},\"setBaseURI(string)\":{\"notice\":\"Update the new value of `baseURI`\"},\"setKIPFundAddress(address)\":{\"notice\":\"Update the new address of KIP Protocol Treasury\"},\"setPaymentToken(address)\":{\"notice\":\"Set new Payment Token\"},\"setPublicSaleConfigs(uint256,(uint256,uint32,uint32,uint64,uint64,uint64))\":{\"notice\":\"Update the Public Sale configurations (per Tier)\"},\"setTransferEnabled(bool)\":{\"notice\":\"Allow/Disable License Transfer\"},\"setWhitelistSaleConfigs(uint256,(bytes32,uint32,uint64,uint64,uint64))\":{\"notice\":\"Update the Whitelist Sale configurations (per Tier)\"},\"whitelistMint(uint256,address,uint256,uint256,bytes32[])\":{\"notice\":\"Function for Minting Licenses in the Whitelist Sale\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KIPNode.sol\":\"KIPNode\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/KIPNode.sol\":{\"keccak256\":\"0x46c18e01ec10b9d61526bb7380ac9061a971348c0415286361563f7952c4417f\",\"license\":\"None\",\"urls\":[\"bzz-raw://51ab4261d55350fa5c5655037ee80d9b0bca25857aae20a7a874ba27e7d43fc2\",\"dweb:/ipfs/QmW87X6rxCn6geHfGHDcWN8YPuPFAq27ennHuyYEbxeXXs\"]}},\"version\":1}"}},"contracts/mock/Token20.sol":{"Token20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_336":{"entryPoint":null,"id":336,"parameterSlots":2,"returnSlots":0},"@_5417":{"entryPoint":null,"id":5417,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":380,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":455,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":506,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":251,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":103,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":282,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":750,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":639,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1071,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":886,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1032,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":906,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1226,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":336,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":771,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":697,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1196,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":197,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":896,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1164,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":650,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":150,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":946,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":123,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":128,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":118,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":113,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":133,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":787,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1151,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1004,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":800,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":956,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":999,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"423:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:21"},"nodeType":"YulFunctionCall","src":"433:12:21"},"nodeType":"YulExpressionStatement","src":"433:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:21"},{"body":{"nodeType":"YulBlock","src":"546:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:21"},"nodeType":"YulFunctionCall","src":"556:12:21"},"nodeType":"YulExpressionStatement","src":"556:12:21"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:21"},{"body":{"nodeType":"YulBlock","src":"628:54:21","statements":[{"nodeType":"YulAssignment","src":"638:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:21"},"nodeType":"YulFunctionCall","src":"652:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:21"},"nodeType":"YulFunctionCall","src":"668:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:21"},"nodeType":"YulFunctionCall","src":"648:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:21","type":""}],"src":"580:102:21"},{"body":{"nodeType":"YulBlock","src":"716:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:21"},"nodeType":"YulFunctionCall","src":"726:88:21"},"nodeType":"YulExpressionStatement","src":"726:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:21"},"nodeType":"YulFunctionCall","src":"823:15:21"},"nodeType":"YulExpressionStatement","src":"823:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:21"},"nodeType":"YulFunctionCall","src":"847:15:21"},"nodeType":"YulExpressionStatement","src":"847:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:21"},{"body":{"nodeType":"YulBlock","src":"917:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:21"},"nodeType":"YulFunctionCall","src":"957:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:21"},"nodeType":"YulFunctionCall","src":"945:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:21"},"nodeType":"YulFunctionCall","src":"1098:18:21"},"nodeType":"YulExpressionStatement","src":"1098:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:21"},"nodeType":"YulFunctionCall","src":"1036:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:21"},"nodeType":"YulFunctionCall","src":"1072:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:21"},"nodeType":"YulFunctionCall","src":"1033:62:21"},"nodeType":"YulIf","src":"1030:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:21"},"nodeType":"YulFunctionCall","src":"1127:22:21"},"nodeType":"YulExpressionStatement","src":"1127:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:21","type":""}],"src":"874:281:21"},{"body":{"nodeType":"YulBlock","src":"1202:88:21","statements":[{"nodeType":"YulAssignment","src":"1212:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:21"},"nodeType":"YulFunctionCall","src":"1222:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:21"},"nodeType":"YulFunctionCall","src":"1251:33:21"},"nodeType":"YulExpressionStatement","src":"1251:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:21","type":""}],"src":"1161:129:21"},{"body":{"nodeType":"YulBlock","src":"1363:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:21"},"nodeType":"YulFunctionCall","src":"1470:18:21"},"nodeType":"YulExpressionStatement","src":"1470:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:21"},"nodeType":"YulFunctionCall","src":"1437:30:21"},"nodeType":"YulIf","src":"1434:56:21"},{"nodeType":"YulAssignment","src":"1500:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:21"},"nodeType":"YulFunctionCall","src":"1508:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:21"}]},{"nodeType":"YulAssignment","src":"1574:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:21"},"nodeType":"YulFunctionCall","src":"1582:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:21","type":""}],"src":"1296:308:21"},{"body":{"nodeType":"YulBlock","src":"1672:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:21"},"nodeType":"YulFunctionCall","src":"1772:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:21"},"nodeType":"YulFunctionCall","src":"1791:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:21"},"nodeType":"YulFunctionCall","src":"1785:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:21"},"nodeType":"YulFunctionCall","src":"1765:39:21"},"nodeType":"YulExpressionStatement","src":"1765:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:21"},"nodeType":"YulFunctionCall","src":"1709:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:21","statements":[{"nodeType":"YulAssignment","src":"1725:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:21"},"nodeType":"YulFunctionCall","src":"1730:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:21","statements":[]},"src":"1701:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:21"},"nodeType":"YulFunctionCall","src":"1830:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:21"},"nodeType":"YulFunctionCall","src":"1823:27:21"},"nodeType":"YulExpressionStatement","src":"1823:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:21","type":""}],"src":"1610:246:21"},{"body":{"nodeType":"YulBlock","src":"1957:339:21","statements":[{"nodeType":"YulAssignment","src":"1967:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:21"},"nodeType":"YulFunctionCall","src":"1992:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:21"},"nodeType":"YulFunctionCall","src":"1976:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:21"},"nodeType":"YulFunctionCall","src":"2051:21:21"},"nodeType":"YulExpressionStatement","src":"2051:21:21"},{"nodeType":"YulVariableDeclaration","src":"2081:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:21"},"nodeType":"YulFunctionCall","src":"2092:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:21"},"nodeType":"YulFunctionCall","src":"2148:79:21"},"nodeType":"YulExpressionStatement","src":"2148:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:21"},"nodeType":"YulFunctionCall","src":"2123:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:21"},"nodeType":"YulFunctionCall","src":"2120:25:21"},"nodeType":"YulIf","src":"2117:112:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:21"},"nodeType":"YulFunctionCall","src":"2238:52:21"},"nodeType":"YulExpressionStatement","src":"2238:52:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:21","type":""}],"src":"1862:434:21"},{"body":{"nodeType":"YulBlock","src":"2389:282:21","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:21"},"nodeType":"YulFunctionCall","src":"2440:79:21"},"nodeType":"YulExpressionStatement","src":"2440:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:21"},"nodeType":"YulFunctionCall","src":"2413:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:21"},"nodeType":"YulFunctionCall","src":"2409:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:21"},"nodeType":"YulFunctionCall","src":"2402:35:21"},"nodeType":"YulIf","src":"2399:122:21"},{"nodeType":"YulVariableDeclaration","src":"2530:27:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:21"},"nodeType":"YulFunctionCall","src":"2544:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:21"},"nodeType":"YulFunctionCall","src":"2634:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:21"},"nodeType":"YulFunctionCall","src":"2575:90:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:21","type":""}],"src":"2316:355:21"},{"body":{"nodeType":"YulBlock","src":"2791:739:21","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:21"},"nodeType":"YulFunctionCall","src":"2839:79:21"},"nodeType":"YulExpressionStatement","src":"2839:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:21"},"nodeType":"YulFunctionCall","src":"2808:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:21"},"nodeType":"YulFunctionCall","src":"2804:32:21"},"nodeType":"YulIf","src":"2801:119:21"},{"nodeType":"YulBlock","src":"2930:291:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:21"},"nodeType":"YulFunctionCall","src":"2965:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:21"},"nodeType":"YulFunctionCall","src":"2959:24:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:21"},"nodeType":"YulFunctionCall","src":"3032:79:21"},"nodeType":"YulExpressionStatement","src":"3032:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:21"},"nodeType":"YulFunctionCall","src":"2999:30:21"},"nodeType":"YulIf","src":"2996:117:21"},{"nodeType":"YulAssignment","src":"3127:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:21"},"nodeType":"YulFunctionCall","src":"3179:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:21"},"nodeType":"YulFunctionCall","src":"3137:74:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:21"}]}]},{"nodeType":"YulBlock","src":"3231:292:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:21"},"nodeType":"YulFunctionCall","src":"3266:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:21"},"nodeType":"YulFunctionCall","src":"3260:25:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:21"},"nodeType":"YulFunctionCall","src":"3334:79:21"},"nodeType":"YulExpressionStatement","src":"3334:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:21"},"nodeType":"YulFunctionCall","src":"3301:30:21"},"nodeType":"YulIf","src":"3298:117:21"},{"nodeType":"YulAssignment","src":"3429:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:21"},"nodeType":"YulFunctionCall","src":"3481:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:21"},"nodeType":"YulFunctionCall","src":"3439:74:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:21","type":""}],"src":"2677:853:21"},{"body":{"nodeType":"YulBlock","src":"3595:40:21","statements":[{"nodeType":"YulAssignment","src":"3606:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:21"},"nodeType":"YulFunctionCall","src":"3616:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:21","type":""}],"src":"3536:99:21"},{"body":{"nodeType":"YulBlock","src":"3669:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:21"},"nodeType":"YulFunctionCall","src":"3679:88:21"},"nodeType":"YulExpressionStatement","src":"3679:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:21"},"nodeType":"YulFunctionCall","src":"3776:15:21"},"nodeType":"YulExpressionStatement","src":"3776:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:21"},"nodeType":"YulFunctionCall","src":"3800:15:21"},"nodeType":"YulExpressionStatement","src":"3800:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:21"},{"body":{"nodeType":"YulBlock","src":"3878:269:21","statements":[{"nodeType":"YulAssignment","src":"3888:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:21"},"nodeType":"YulFunctionCall","src":"3898:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:21"},"nodeType":"YulFunctionCall","src":"3945:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:21","statements":[{"nodeType":"YulAssignment","src":"4010:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:21"},"nodeType":"YulFunctionCall","src":"4020:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:21"},"nodeType":"YulFunctionCall","src":"3969:26:21"},"nodeType":"YulIf","src":"3966:81:21"},{"body":{"nodeType":"YulBlock","src":"4099:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:21"},"nodeType":"YulFunctionCall","src":"4113:18:21"},"nodeType":"YulExpressionStatement","src":"4113:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:21"},"nodeType":"YulFunctionCall","src":"4083:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:21"},"nodeType":"YulFunctionCall","src":"4060:38:21"},"nodeType":"YulIf","src":"4057:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:21","type":""}],"src":"3827:320:21"},{"body":{"nodeType":"YulBlock","src":"4207:87:21","statements":[{"nodeType":"YulAssignment","src":"4217:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:21"},"nodeType":"YulFunctionCall","src":"4238:14:21"},"nodeType":"YulExpressionStatement","src":"4238:14:21"},{"nodeType":"YulAssignment","src":"4261:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:21"},"nodeType":"YulFunctionCall","src":"4269:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:21","type":""}],"src":"4153:141:21"},{"body":{"nodeType":"YulBlock","src":"4344:49:21","statements":[{"nodeType":"YulAssignment","src":"4354:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:21"},"nodeType":"YulFunctionCall","src":"4368:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:21"},"nodeType":"YulFunctionCall","src":"4364:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:21","type":""}],"src":"4300:93:21"},{"body":{"nodeType":"YulBlock","src":"4452:54:21","statements":[{"nodeType":"YulAssignment","src":"4462:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:21"},"nodeType":"YulFunctionCall","src":"4483:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:21","type":""}],"src":"4399:107:21"},{"body":{"nodeType":"YulBlock","src":"4588:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:21"},"nodeType":"YulFunctionCall","src":"4615:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:21"},"nodeType":"YulFunctionCall","src":"4654:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:21","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:21"},"nodeType":"YulFunctionCall","src":"4772:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:21"}]},{"nodeType":"YulAssignment","src":"4820:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:21"},"nodeType":"YulFunctionCall","src":"4840:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:21"},"nodeType":"YulFunctionCall","src":"4829:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:21"}]},{"nodeType":"YulAssignment","src":"4859:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:21"},"nodeType":"YulFunctionCall","src":"4879:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:21"},"nodeType":"YulFunctionCall","src":"4869:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:21","type":""}],"src":"4512:393:21"},{"body":{"nodeType":"YulBlock","src":"4956:32:21","statements":[{"nodeType":"YulAssignment","src":"4966:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:21","type":""}],"src":"4911:77:21"},{"body":{"nodeType":"YulBlock","src":"5026:28:21","statements":[{"nodeType":"YulAssignment","src":"5036:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:21","type":""}],"src":"4994:60:21"},{"body":{"nodeType":"YulBlock","src":"5120:82:21","statements":[{"nodeType":"YulAssignment","src":"5130:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:21"},"nodeType":"YulFunctionCall","src":"5170:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:21"},"nodeType":"YulFunctionCall","src":"5161:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:21"},"nodeType":"YulFunctionCall","src":"5143:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:21","type":""}],"src":"5060:142:21"},{"body":{"nodeType":"YulBlock","src":"5255:28:21","statements":[{"nodeType":"YulAssignment","src":"5265:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:21","type":""}],"src":"5208:75:21"},{"body":{"nodeType":"YulBlock","src":"5365:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:21"},"nodeType":"YulFunctionCall","src":"5399:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:21"},"nodeType":"YulFunctionCall","src":"5488:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:21"},"nodeType":"YulFunctionCall","src":"5509:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:21"},"nodeType":"YulFunctionCall","src":"5460:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:21"},"nodeType":"YulFunctionCall","src":"5447:105:21"},"nodeType":"YulExpressionStatement","src":"5447:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:21","type":""}],"src":"5289:269:21"},{"body":{"nodeType":"YulBlock","src":"5613:24:21","statements":[{"nodeType":"YulAssignment","src":"5623:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:21","type":""}],"src":"5564:73:21"},{"body":{"nodeType":"YulBlock","src":"5696:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:21"},"nodeType":"YulFunctionCall","src":"5720:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:21"},"nodeType":"YulFunctionCall","src":"5761:65:21"},"nodeType":"YulExpressionStatement","src":"5761:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:21","type":""}],"src":"5643:189:21"},{"body":{"nodeType":"YulBlock","src":"5888:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:21"},"nodeType":"YulFunctionCall","src":"5969:39:21"},"nodeType":"YulExpressionStatement","src":"5969:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:21"},"nodeType":"YulFunctionCall","src":"5905:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:21","statements":[{"nodeType":"YulAssignment","src":"5922:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:21"},"nodeType":"YulFunctionCall","src":"5931:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:21","statements":[]},"src":"5898:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:21","type":""}],"src":"5838:186:21"},{"body":{"nodeType":"YulBlock","src":"6109:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:21"},"nodeType":"YulFunctionCall","src":"6165:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:21"},"nodeType":"YulFunctionCall","src":"6249:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:21"},"nodeType":"YulFunctionCall","src":"6235:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:21","statements":[{"nodeType":"YulAssignment","src":"6438:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:21"},"nodeType":"YulFunctionCall","src":"6417:18:21"},"nodeType":"YulIf","src":"6414:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:21"},"nodeType":"YulFunctionCall","src":"6532:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:21"},"nodeType":"YulFunctionCall","src":"6518:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:21"},"nodeType":"YulFunctionCall","src":"6476:80:21"},"nodeType":"YulExpressionStatement","src":"6476:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:21"},"nodeType":"YulFunctionCall","src":"6123:11:21"},"nodeType":"YulIf","src":"6120:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:21","type":""}],"src":"6030:543:21"},{"body":{"nodeType":"YulBlock","src":"6642:54:21","statements":[{"nodeType":"YulAssignment","src":"6652:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:21"},"nodeType":"YulFunctionCall","src":"6673:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:21","type":""}],"src":"6579:117:21"},{"body":{"nodeType":"YulBlock","src":"6753:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:21"},"nodeType":"YulFunctionCall","src":"6808:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:21"},"nodeType":"YulFunctionCall","src":"6823:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:21"},"nodeType":"YulFunctionCall","src":"6779:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:21"},"nodeType":"YulFunctionCall","src":"6775:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:21","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:21"},"nodeType":"YulFunctionCall","src":"6850:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:21","type":""}],"src":"6702:169:21"},{"body":{"nodeType":"YulBlock","src":"6957:214:21","statements":[{"nodeType":"YulAssignment","src":"7090:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:21"},"nodeType":"YulFunctionCall","src":"7098:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:21"}]},{"nodeType":"YulAssignment","src":"7136:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:21"},"nodeType":"YulFunctionCall","src":"7153:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:21"},"nodeType":"YulFunctionCall","src":"7144:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:21","type":""}],"src":"6876:295:21"},{"body":{"nodeType":"YulBlock","src":"7268:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:21"},"nodeType":"YulFunctionCall","src":"7293:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:21"},"nodeType":"YulFunctionCall","src":"7417:18:21"},"nodeType":"YulExpressionStatement","src":"7417:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:21"},"nodeType":"YulFunctionCall","src":"7384:30:21"},"nodeType":"YulIf","src":"7381:56:21"},{"nodeType":"YulVariableDeclaration","src":"7447:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:21"},"nodeType":"YulFunctionCall","src":"7487:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:21"},"nodeType":"YulFunctionCall","src":"7461:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:21"},"nodeType":"YulFunctionCall","src":"7546:67:21"},"nodeType":"YulExpressionStatement","src":"7546:67:21"},{"nodeType":"YulVariableDeclaration","src":"7623:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:21","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:21"},"nodeType":"YulFunctionCall","src":"7756:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:21"},"nodeType":"YulFunctionCall","src":"7744:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:21"},"nodeType":"YulFunctionCall","src":"7794:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:21"},"nodeType":"YulFunctionCall","src":"7951:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:21"},"nodeType":"YulFunctionCall","src":"7945:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:21"},"nodeType":"YulFunctionCall","src":"7930:42:21"},"nodeType":"YulExpressionStatement","src":"7930:42:21"},{"nodeType":"YulAssignment","src":"7989:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:21"},"nodeType":"YulFunctionCall","src":"7999:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:21"}]},{"nodeType":"YulAssignment","src":"8030:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:21"},"nodeType":"YulFunctionCall","src":"8043:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:21"},"nodeType":"YulFunctionCall","src":"7875:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:21","statements":[{"nodeType":"YulAssignment","src":"7892:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:21"},"nodeType":"YulFunctionCall","src":"7897:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:21","statements":[]},"src":"7867:208:21"},{"body":{"nodeType":"YulBlock","src":"8111:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:21"},"nodeType":"YulFunctionCall","src":"8152:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:21"},"nodeType":"YulFunctionCall","src":"8146:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:21"},"nodeType":"YulFunctionCall","src":"8234:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:21"},"nodeType":"YulFunctionCall","src":"8204:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:21"},"nodeType":"YulFunctionCall","src":"8189:64:21"},"nodeType":"YulExpressionStatement","src":"8189:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:21"},"nodeType":"YulFunctionCall","src":"8091:19:21"},"nodeType":"YulIf","src":"8088:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:21"},"nodeType":"YulFunctionCall","src":"8297:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:21"},"nodeType":"YulFunctionCall","src":"8293:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:21"},"nodeType":"YulFunctionCall","src":"8280:36:21"},"nodeType":"YulExpressionStatement","src":"8280:36:21"}]},"nodeType":"YulCase","src":"7708:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:21","statements":[{"nodeType":"YulAssignment","src":"8412:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:21"},"nodeType":"YulFunctionCall","src":"8427:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:21"},"nodeType":"YulFunctionCall","src":"8421:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:21"},"nodeType":"YulIf","src":"8384:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:21"},"nodeType":"YulFunctionCall","src":"8487:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:21"},"nodeType":"YulFunctionCall","src":"8474:81:21"},"nodeType":"YulExpressionStatement","src":"8474:81:21"}]},"nodeType":"YulCase","src":"8335:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:21"},"nodeType":"YulFunctionCall","src":"7685:14:21"},"nodeType":"YulSwitch","src":"7678:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:21","type":""}],"src":"7176:1395:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620014cd380380620014cd8339818101604052810190620000379190620001fa565b818181600390816200004a9190620004ca565b5080600490816200005c9190620004ca565b5050505050620005b1565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000d08262000085565b810181811067ffffffffffffffff82111715620000f257620000f162000096565b5b80604052505050565b60006200010762000067565b9050620001158282620000c5565b919050565b600067ffffffffffffffff82111562000138576200013762000096565b5b620001438262000085565b9050602081019050919050565b60005b838110156200017057808201518184015260208101905062000153565b60008484015250505050565b6000620001936200018d846200011a565b620000fb565b905082815260208101848484011115620001b257620001b162000080565b5b620001bf84828562000150565b509392505050565b600082601f830112620001df57620001de6200007b565b5b8151620001f18482602086016200017c565b91505092915050565b6000806040838503121562000214576200021362000071565b5b600083015167ffffffffffffffff81111562000235576200023462000076565b5b6200024385828601620001c7565b925050602083015167ffffffffffffffff81111562000267576200026662000076565b5b6200027585828601620001c7565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002d257607f821691505b602082108103620002e857620002e76200028a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000313565b6200035e868362000313565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003ab620003a56200039f8462000376565b62000380565b62000376565b9050919050565b6000819050919050565b620003c7836200038a565b620003df620003d682620003b2565b84845462000320565b825550505050565b600090565b620003f6620003e7565b62000403818484620003bc565b505050565b5b818110156200042b576200041f600082620003ec565b60018101905062000409565b5050565b601f8211156200047a576200044481620002ee565b6200044f8462000303565b810160208510156200045f578190505b620004776200046e8562000303565b83018262000408565b50505b505050565b600082821c905092915050565b60006200049f600019846008026200047f565b1980831691505092915050565b6000620004ba83836200048c565b9150826002028217905092915050565b620004d5826200027f565b67ffffffffffffffff811115620004f157620004f062000096565b5b620004fd8254620002b9565b6200050a8282856200042f565b600060209050601f8311600181146200054257600084156200052d578287015190505b620005398582620004ac565b865550620005a9565b601f1984166200055286620002ee565b60005b828110156200057c5784890151825560018201915060208501945060208101905062000555565b868310156200059c578489015162000598601f8916826200048c565b8355505b6001600288020188555050505b505050505050565b610f0c80620005c16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461015d57806370a082311461017957806395d89b41146101a9578063a9059cbb146101c7578063dd62ed3e146101f75761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100f157806323b872dd1461010f578063313ce5671461013f575b600080fd5b6100ab610227565b6040516100b89190610b60565b60405180910390f35b6100db60048036038101906100d69190610c1b565b6102b9565b6040516100e89190610c76565b60405180910390f35b6100f96102dc565b6040516101069190610ca0565b60405180910390f35b61012960048036038101906101249190610cbb565b6102e6565b6040516101369190610c76565b60405180910390f35b610147610315565b6040516101549190610d2a565b60405180910390f35b61017760048036038101906101729190610c1b565b61031e565b005b610193600480360381019061018e9190610d45565b61032c565b6040516101a09190610ca0565b60405180910390f35b6101b1610374565b6040516101be9190610b60565b60405180910390f35b6101e160048036038101906101dc9190610c1b565b610406565b6040516101ee9190610c76565b60405180910390f35b610211600480360381019061020c9190610d72565b610429565b60405161021e9190610ca0565b60405180910390f35b60606003805461023690610de1565b80601f016020809104026020016040519081016040528092919081815260200182805461026290610de1565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b5050505050905090565b6000806102c46104b0565b90506102d18185856104b8565b600191505092915050565b6000600254905090565b6000806102f16104b0565b90506102fe8582856104ca565b61030985858561055e565b60019150509392505050565b60006012905090565b6103288282610652565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461038390610de1565b80601f01602080910402602001604051908101604052809291908181526020018280546103af90610de1565b80156103fc5780601f106103d1576101008083540402835291602001916103fc565b820191906000526020600020905b8154815290600101906020018083116103df57829003601f168201915b5050505050905090565b6000806104116104b0565b905061041e81858561055e565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6104c583838360016106d4565b505050565b60006104d68484610429565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105585781811015610548578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161053f93929190610e21565b60405180910390fd5b610557848484840360006106d4565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105d05760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105c79190610e58565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106425760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106399190610e58565b60405180910390fd5b61064d8383836108ab565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106c45760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106bb9190610e58565b60405180910390fd5b6106d0600083836108ab565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107465760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161073d9190610e58565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107b85760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107af9190610e58565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156108a5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161089c9190610ca0565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108fd5780600260008282546108f19190610ea2565b925050819055506109d0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610989578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161098093929190610e21565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a195780600260008282540392505081905550610a66565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ac39190610ca0565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b0a578082015181840152602081019050610aef565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b3282610ad0565b610b3c8185610adb565b9350610b4c818560208601610aec565b610b5581610b16565b840191505092915050565b60006020820190508181036000830152610b7a8184610b27565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bb282610b87565b9050919050565b610bc281610ba7565b8114610bcd57600080fd5b50565b600081359050610bdf81610bb9565b92915050565b6000819050919050565b610bf881610be5565b8114610c0357600080fd5b50565b600081359050610c1581610bef565b92915050565b60008060408385031215610c3257610c31610b82565b5b6000610c4085828601610bd0565b9250506020610c5185828601610c06565b9150509250929050565b60008115159050919050565b610c7081610c5b565b82525050565b6000602082019050610c8b6000830184610c67565b92915050565b610c9a81610be5565b82525050565b6000602082019050610cb56000830184610c91565b92915050565b600080600060608486031215610cd457610cd3610b82565b5b6000610ce286828701610bd0565b9350506020610cf386828701610bd0565b9250506040610d0486828701610c06565b9150509250925092565b600060ff82169050919050565b610d2481610d0e565b82525050565b6000602082019050610d3f6000830184610d1b565b92915050565b600060208284031215610d5b57610d5a610b82565b5b6000610d6984828501610bd0565b91505092915050565b60008060408385031215610d8957610d88610b82565b5b6000610d9785828601610bd0565b9250506020610da885828601610bd0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610df957607f821691505b602082108103610e0c57610e0b610db2565b5b50919050565b610e1b81610ba7565b82525050565b6000606082019050610e366000830186610e12565b610e436020830185610c91565b610e506040830184610c91565b949350505050565b6000602082019050610e6d6000830184610e12565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ead82610be5565b9150610eb883610be5565b9250828201905080821115610ed057610ecf610e73565b5b9291505056fea264697066735822122097c10200fe627836d2b2690ad163f03131fed0c2ec99e04a97ff0e25014a61d864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14CD CODESIZE SUB DUP1 PUSH3 0x14CD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1FA JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x4CA JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x4CA JUMP JUMPDEST POP POP POP POP POP PUSH3 0x5B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xD0 DUP3 PUSH3 0x85 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xF2 JUMPI PUSH3 0xF1 PUSH3 0x96 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x107 PUSH3 0x67 JUMP JUMPDEST SWAP1 POP PUSH3 0x115 DUP3 DUP3 PUSH3 0xC5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x138 JUMPI PUSH3 0x137 PUSH3 0x96 JUMP JUMPDEST JUMPDEST PUSH3 0x143 DUP3 PUSH3 0x85 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x170 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x153 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x193 PUSH3 0x18D DUP5 PUSH3 0x11A JUMP JUMPDEST PUSH3 0xFB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1B2 JUMPI PUSH3 0x1B1 PUSH3 0x80 JUMP JUMPDEST JUMPDEST PUSH3 0x1BF DUP5 DUP3 DUP6 PUSH3 0x150 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DF JUMPI PUSH3 0x1DE PUSH3 0x7B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1F1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x17C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x214 JUMPI PUSH3 0x213 PUSH3 0x71 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x235 JUMPI PUSH3 0x234 PUSH3 0x76 JUMP JUMPDEST JUMPDEST PUSH3 0x243 DUP6 DUP3 DUP7 ADD PUSH3 0x1C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x267 JUMPI PUSH3 0x266 PUSH3 0x76 JUMP JUMPDEST JUMPDEST PUSH3 0x275 DUP6 DUP3 DUP7 ADD PUSH3 0x1C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E8 JUMPI PUSH3 0x2E7 PUSH3 0x28A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x352 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x313 JUMP JUMPDEST PUSH3 0x35E DUP7 DUP4 PUSH3 0x313 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3AB PUSH3 0x3A5 PUSH3 0x39F DUP5 PUSH3 0x376 JUMP JUMPDEST PUSH3 0x380 JUMP JUMPDEST PUSH3 0x376 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C7 DUP4 PUSH3 0x38A JUMP JUMPDEST PUSH3 0x3DF PUSH3 0x3D6 DUP3 PUSH3 0x3B2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x320 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F6 PUSH3 0x3E7 JUMP JUMPDEST PUSH3 0x403 DUP2 DUP5 DUP5 PUSH3 0x3BC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x42B JUMPI PUSH3 0x41F PUSH1 0x0 DUP3 PUSH3 0x3EC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x409 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x47A JUMPI PUSH3 0x444 DUP2 PUSH3 0x2EE JUMP JUMPDEST PUSH3 0x44F DUP5 PUSH3 0x303 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x477 PUSH3 0x46E DUP6 PUSH3 0x303 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x408 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4BA DUP4 DUP4 PUSH3 0x48C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D5 DUP3 PUSH3 0x27F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4F1 JUMPI PUSH3 0x4F0 PUSH3 0x96 JUMP JUMPDEST JUMPDEST PUSH3 0x4FD DUP3 SLOAD PUSH3 0x2B9 JUMP JUMPDEST PUSH3 0x50A DUP3 DUP3 DUP6 PUSH3 0x42F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x542 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x52D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x539 DUP6 DUP3 PUSH3 0x4AC JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x552 DUP7 PUSH3 0x2EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x57C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x555 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x59C JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x598 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x48C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF0C DUP1 PUSH3 0x5C1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x236 SWAP1 PUSH2 0xDE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x262 SWAP1 PUSH2 0xDE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x284 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x292 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2C4 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2D1 DUP2 DUP6 DUP6 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2F1 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FE DUP6 DUP3 DUP6 PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x309 DUP6 DUP6 DUP6 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x328 DUP3 DUP3 PUSH2 0x652 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x383 SWAP1 PUSH2 0xDE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AF SWAP1 PUSH2 0xDE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x411 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x41E DUP2 DUP6 DUP6 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4C5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 DUP5 DUP5 PUSH2 0x429 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x558 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x548 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x557 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x642 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64D DUP4 DUP4 DUP4 PUSH2 0x8AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D0 PUSH1 0x0 DUP4 DUP4 PUSH2 0x8AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x746 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73D SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7B8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x8A5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8FD JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x989 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x980 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA19 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA66 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB0A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB32 DUP3 PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0xB3C DUP2 DUP6 PUSH2 0xADB JUMP JUMPDEST SWAP4 POP PUSH2 0xB4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAEC JUMP JUMPDEST PUSH2 0xB55 DUP2 PUSH2 0xB16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB7A DUP2 DUP5 PUSH2 0xB27 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB2 DUP3 PUSH2 0xB87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC2 DUP2 PUSH2 0xBA7 JUMP JUMPDEST DUP2 EQ PUSH2 0xBCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDF DUP2 PUSH2 0xBB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF8 DUP2 PUSH2 0xBE5 JUMP JUMPDEST DUP2 EQ PUSH2 0xC03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC15 DUP2 PUSH2 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC32 JUMPI PUSH2 0xC31 PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC40 DUP6 DUP3 DUP7 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC51 DUP6 DUP3 DUP7 ADD PUSH2 0xC06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC70 DUP2 PUSH2 0xC5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC8B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC9A DUP2 PUSH2 0xBE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCB5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCD4 JUMPI PUSH2 0xCD3 PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE2 DUP7 DUP3 DUP8 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCF3 DUP7 DUP3 DUP8 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD04 DUP7 DUP3 DUP8 ADD PUSH2 0xC06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xD0E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5B JUMPI PUSH2 0xD5A PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD69 DUP5 DUP3 DUP6 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD89 JUMPI PUSH2 0xD88 PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD97 DUP6 DUP3 DUP7 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDA8 DUP6 DUP3 DUP7 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDF9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE0C JUMPI PUSH2 0xE0B PUSH2 0xDB2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1B DUP2 PUSH2 0xBA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE36 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0xE43 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC91 JUMP JUMPDEST PUSH2 0xE50 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC91 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEAD DUP3 PUSH2 0xBE5 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB8 DUP4 PUSH2 0xBE5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xED0 JUMPI PUSH2 0xECF PUSH2 0xE73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xC1 MUL STOP INVALID PUSH3 0x7836D2 0xB2 PUSH10 0xAD163F03131FED0C2EC SWAP10 0xE0 0x4A SWAP8 SELFDESTRUCT 0xE 0x25 ADD 0x4A PUSH2 0xD864 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"115:205:20:-:0;;;147:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;207:4;213:6;1970:5:2;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;147:76:20;;115:205;;7:75:21;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;115:205:20:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_690":{"entryPoint":1208,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":1748,"id":750,"parameterSlots":4,"returnSlots":0},"@_mint_639":{"entryPoint":1618,"id":639,"parameterSlots":2,"returnSlots":0},"@_msgSender_2666":{"entryPoint":1200,"id":2666,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_798":{"entryPoint":1226,"id":798,"parameterSlots":3,"returnSlots":0},"@_transfer_529":{"entryPoint":1374,"id":529,"parameterSlots":3,"returnSlots":0},"@_update_606":{"entryPoint":2219,"id":606,"parameterSlots":3,"returnSlots":0},"@allowance_426":{"entryPoint":1065,"id":426,"parameterSlots":2,"returnSlots":1},"@approve_450":{"entryPoint":697,"id":450,"parameterSlots":2,"returnSlots":1},"@balanceOf_385":{"entryPoint":812,"id":385,"parameterSlots":1,"returnSlots":1},"@decimals_363":{"entryPoint":789,"id":363,"parameterSlots":0,"returnSlots":1},"@mint_5430":{"entryPoint":798,"id":5430,"parameterSlots":2,"returnSlots":0},"@name_345":{"entryPoint":551,"id":345,"parameterSlots":0,"returnSlots":1},"@symbol_354":{"entryPoint":884,"id":354,"parameterSlots":0,"returnSlots":1},"@totalSupply_372":{"entryPoint":732,"id":372,"parameterSlots":0,"returnSlots":1},"@transferFrom_482":{"entryPoint":742,"id":482,"parameterSlots":3,"returnSlots":1},"@transfer_409":{"entryPoint":1030,"id":409,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3078,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3442,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3259,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3099,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3602,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3217,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3355,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3672,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3617,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2912,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3232,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3370,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2768,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2779,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3746,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2983,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3163,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2951,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3045,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3342,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2796,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3553,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3699,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3506,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2946,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2838,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3001,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3055,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7360:21","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:21","statements":[{"nodeType":"YulAssignment","src":"77:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:21"},"nodeType":"YulFunctionCall","src":"87:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:21","type":""}],"src":"7:99:21"},{"body":{"nodeType":"YulBlock","src":"208:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:21"},"nodeType":"YulFunctionCall","src":"218:19:21"},"nodeType":"YulExpressionStatement","src":"218:19:21"},{"nodeType":"YulAssignment","src":"246:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:21"},"nodeType":"YulFunctionCall","src":"261:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:21","type":""}],"src":"112:169:21"},{"body":{"nodeType":"YulBlock","src":"349:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:21"},"nodeType":"YulFunctionCall","src":"449:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:21"},"nodeType":"YulFunctionCall","src":"468:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:21"},"nodeType":"YulFunctionCall","src":"462:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:21"},"nodeType":"YulFunctionCall","src":"442:39:21"},"nodeType":"YulExpressionStatement","src":"442:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:21"},"nodeType":"YulFunctionCall","src":"386:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:21","statements":[{"nodeType":"YulAssignment","src":"402:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:21"},"nodeType":"YulFunctionCall","src":"407:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:21","statements":[]},"src":"378:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:21"},"nodeType":"YulFunctionCall","src":"507:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:21"},"nodeType":"YulFunctionCall","src":"500:27:21"},"nodeType":"YulExpressionStatement","src":"500:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:21","type":""}],"src":"287:246:21"},{"body":{"nodeType":"YulBlock","src":"587:54:21","statements":[{"nodeType":"YulAssignment","src":"597:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:21"},"nodeType":"YulFunctionCall","src":"611:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:21"},"nodeType":"YulFunctionCall","src":"627:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:21"},"nodeType":"YulFunctionCall","src":"607:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:21","type":""}],"src":"539:102:21"},{"body":{"nodeType":"YulBlock","src":"739:285:21","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:21"},"nodeType":"YulFunctionCall","src":"763:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:21","type":""}]},{"nodeType":"YulAssignment","src":"811:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:21"},"nodeType":"YulFunctionCall","src":"818:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:21"},"nodeType":"YulFunctionCall","src":"933:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:21"},"nodeType":"YulFunctionCall","src":"898:65:21"},"nodeType":"YulExpressionStatement","src":"898:65:21"},{"nodeType":"YulAssignment","src":"972:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:21"},"nodeType":"YulFunctionCall","src":"988:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:21"},"nodeType":"YulFunctionCall","src":"979:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:21","type":""}],"src":"647:377:21"},{"body":{"nodeType":"YulBlock","src":"1148:195:21","statements":[{"nodeType":"YulAssignment","src":"1158:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:21"},"nodeType":"YulFunctionCall","src":"1166:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:21"},"nodeType":"YulFunctionCall","src":"1201:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:21"},"nodeType":"YulFunctionCall","src":"1220:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:21"},"nodeType":"YulFunctionCall","src":"1194:47:21"},"nodeType":"YulExpressionStatement","src":"1194:47:21"},{"nodeType":"YulAssignment","src":"1250:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:21"},"nodeType":"YulFunctionCall","src":"1258:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:21","type":""}],"src":"1030:313:21"},{"body":{"nodeType":"YulBlock","src":"1389:35:21","statements":[{"nodeType":"YulAssignment","src":"1399:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:21"},"nodeType":"YulFunctionCall","src":"1409:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:21","type":""}],"src":"1349:75:21"},{"body":{"nodeType":"YulBlock","src":"1519:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:21"},"nodeType":"YulFunctionCall","src":"1529:12:21"},"nodeType":"YulExpressionStatement","src":"1529:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:21"},{"body":{"nodeType":"YulBlock","src":"1642:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:21"},"nodeType":"YulFunctionCall","src":"1652:12:21"},"nodeType":"YulExpressionStatement","src":"1652:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:21"},{"body":{"nodeType":"YulBlock","src":"1721:81:21","statements":[{"nodeType":"YulAssignment","src":"1731:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:21"},"nodeType":"YulFunctionCall","src":"1742:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:21","type":""}],"src":"1676:126:21"},{"body":{"nodeType":"YulBlock","src":"1853:51:21","statements":[{"nodeType":"YulAssignment","src":"1863:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:21"},"nodeType":"YulFunctionCall","src":"1874:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:21","type":""}],"src":"1808:96:21"},{"body":{"nodeType":"YulBlock","src":"1953:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:21"},"nodeType":"YulFunctionCall","src":"2012:12:21"},"nodeType":"YulExpressionStatement","src":"2012:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:21"},"nodeType":"YulFunctionCall","src":"1983:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:21"},"nodeType":"YulFunctionCall","src":"1973:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:21"},"nodeType":"YulFunctionCall","src":"1966:43:21"},"nodeType":"YulIf","src":"1963:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:21","type":""}],"src":"1910:122:21"},{"body":{"nodeType":"YulBlock","src":"2090:87:21","statements":[{"nodeType":"YulAssignment","src":"2100:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:21"},"nodeType":"YulFunctionCall","src":"2109:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:21"},"nodeType":"YulFunctionCall","src":"2138:33:21"},"nodeType":"YulExpressionStatement","src":"2138:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:21","type":""}],"src":"2038:139:21"},{"body":{"nodeType":"YulBlock","src":"2228:32:21","statements":[{"nodeType":"YulAssignment","src":"2238:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:21","type":""}],"src":"2183:77:21"},{"body":{"nodeType":"YulBlock","src":"2309:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:21"},"nodeType":"YulFunctionCall","src":"2368:12:21"},"nodeType":"YulExpressionStatement","src":"2368:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:21"},"nodeType":"YulFunctionCall","src":"2339:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:21"},"nodeType":"YulFunctionCall","src":"2329:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:21"},"nodeType":"YulFunctionCall","src":"2322:43:21"},"nodeType":"YulIf","src":"2319:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:21","type":""}],"src":"2266:122:21"},{"body":{"nodeType":"YulBlock","src":"2446:87:21","statements":[{"nodeType":"YulAssignment","src":"2456:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:21"},"nodeType":"YulFunctionCall","src":"2465:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:21"},"nodeType":"YulFunctionCall","src":"2494:33:21"},"nodeType":"YulExpressionStatement","src":"2494:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:21","type":""}],"src":"2394:139:21"},{"body":{"nodeType":"YulBlock","src":"2622:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:21"},"nodeType":"YulFunctionCall","src":"2670:79:21"},"nodeType":"YulExpressionStatement","src":"2670:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:21"},"nodeType":"YulFunctionCall","src":"2639:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:21"},"nodeType":"YulFunctionCall","src":"2635:32:21"},"nodeType":"YulIf","src":"2632:119:21"},{"nodeType":"YulBlock","src":"2761:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:21"},"nodeType":"YulFunctionCall","src":"2836:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:21"},"nodeType":"YulFunctionCall","src":"2815:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:21"}]}]},{"nodeType":"YulBlock","src":"2888:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:21"},"nodeType":"YulFunctionCall","src":"2964:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:21"},"nodeType":"YulFunctionCall","src":"2943:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:21","type":""}],"src":"2539:474:21"},{"body":{"nodeType":"YulBlock","src":"3061:48:21","statements":[{"nodeType":"YulAssignment","src":"3071:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:21"},"nodeType":"YulFunctionCall","src":"3089:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:21"},"nodeType":"YulFunctionCall","src":"3082:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:21","type":""}],"src":"3019:90:21"},{"body":{"nodeType":"YulBlock","src":"3174:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:21"},"nodeType":"YulFunctionCall","src":"3196:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:21"},"nodeType":"YulFunctionCall","src":"3184:34:21"},"nodeType":"YulExpressionStatement","src":"3184:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:21","type":""}],"src":"3115:109:21"},{"body":{"nodeType":"YulBlock","src":"3322:118:21","statements":[{"nodeType":"YulAssignment","src":"3332:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:21"},"nodeType":"YulFunctionCall","src":"3340:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:21"},"nodeType":"YulFunctionCall","src":"3415:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:21"},"nodeType":"YulFunctionCall","src":"3368:65:21"},"nodeType":"YulExpressionStatement","src":"3368:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:21","type":""}],"src":"3230:210:21"},{"body":{"nodeType":"YulBlock","src":"3511:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:21"},"nodeType":"YulFunctionCall","src":"3533:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:21"},"nodeType":"YulFunctionCall","src":"3521:37:21"},"nodeType":"YulExpressionStatement","src":"3521:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:21","type":""}],"src":"3446:118:21"},{"body":{"nodeType":"YulBlock","src":"3668:124:21","statements":[{"nodeType":"YulAssignment","src":"3678:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:21"},"nodeType":"YulFunctionCall","src":"3686:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:21"},"nodeType":"YulFunctionCall","src":"3767:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:21"},"nodeType":"YulFunctionCall","src":"3714:71:21"},"nodeType":"YulExpressionStatement","src":"3714:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:21","type":""}],"src":"3570:222:21"},{"body":{"nodeType":"YulBlock","src":"3898:519:21","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:21"},"nodeType":"YulFunctionCall","src":"3946:79:21"},"nodeType":"YulExpressionStatement","src":"3946:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:21"},"nodeType":"YulFunctionCall","src":"3915:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:21"},"nodeType":"YulFunctionCall","src":"3911:32:21"},"nodeType":"YulIf","src":"3908:119:21"},{"nodeType":"YulBlock","src":"4037:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:21"},"nodeType":"YulFunctionCall","src":"4112:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:21"},"nodeType":"YulFunctionCall","src":"4091:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:21"}]}]},{"nodeType":"YulBlock","src":"4164:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:21"},"nodeType":"YulFunctionCall","src":"4240:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:21"},"nodeType":"YulFunctionCall","src":"4219:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:21"}]}]},{"nodeType":"YulBlock","src":"4292:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:21"},"nodeType":"YulFunctionCall","src":"4368:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:21"},"nodeType":"YulFunctionCall","src":"4347:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:21","type":""}],"src":"3798:619:21"},{"body":{"nodeType":"YulBlock","src":"4466:43:21","statements":[{"nodeType":"YulAssignment","src":"4476:27:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:21"},"nodeType":"YulFunctionCall","src":"4487:16:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:21"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:21","type":""}],"src":"4423:86:21"},{"body":{"nodeType":"YulBlock","src":"4576:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:21"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:21"},"nodeType":"YulFunctionCall","src":"4598:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:21"},"nodeType":"YulFunctionCall","src":"4586:35:21"},"nodeType":"YulExpressionStatement","src":"4586:35:21"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:21","type":""}],"src":"4515:112:21"},{"body":{"nodeType":"YulBlock","src":"4727:120:21","statements":[{"nodeType":"YulAssignment","src":"4737:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:21"},"nodeType":"YulFunctionCall","src":"4745:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:21"},"nodeType":"YulFunctionCall","src":"4822:17:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:21"},"nodeType":"YulFunctionCall","src":"4773:67:21"},"nodeType":"YulExpressionStatement","src":"4773:67:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:21","type":""}],"src":"4633:214:21"},{"body":{"nodeType":"YulBlock","src":"4919:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:21"},"nodeType":"YulFunctionCall","src":"4967:79:21"},"nodeType":"YulExpressionStatement","src":"4967:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:21"},"nodeType":"YulFunctionCall","src":"4936:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:21"},"nodeType":"YulFunctionCall","src":"4932:32:21"},"nodeType":"YulIf","src":"4929:119:21"},{"nodeType":"YulBlock","src":"5058:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:21"},"nodeType":"YulFunctionCall","src":"5133:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:21"},"nodeType":"YulFunctionCall","src":"5112:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:21","type":""}],"src":"4853:329:21"},{"body":{"nodeType":"YulBlock","src":"5271:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:21"},"nodeType":"YulFunctionCall","src":"5319:79:21"},"nodeType":"YulExpressionStatement","src":"5319:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:21"},"nodeType":"YulFunctionCall","src":"5288:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:21"},"nodeType":"YulFunctionCall","src":"5284:32:21"},"nodeType":"YulIf","src":"5281:119:21"},{"nodeType":"YulBlock","src":"5410:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:21"},"nodeType":"YulFunctionCall","src":"5485:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:21"},"nodeType":"YulFunctionCall","src":"5464:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:21"}]}]},{"nodeType":"YulBlock","src":"5537:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:21"},"nodeType":"YulFunctionCall","src":"5613:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:21"},"nodeType":"YulFunctionCall","src":"5592:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:21","type":""}],"src":"5188:474:21"},{"body":{"nodeType":"YulBlock","src":"5696:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:21"},"nodeType":"YulFunctionCall","src":"5706:88:21"},"nodeType":"YulExpressionStatement","src":"5706:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:21"},"nodeType":"YulFunctionCall","src":"5803:15:21"},"nodeType":"YulExpressionStatement","src":"5803:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:21"},"nodeType":"YulFunctionCall","src":"5827:15:21"},"nodeType":"YulExpressionStatement","src":"5827:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:21"},{"body":{"nodeType":"YulBlock","src":"5905:269:21","statements":[{"nodeType":"YulAssignment","src":"5915:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:21"},"nodeType":"YulFunctionCall","src":"5925:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:21"},"nodeType":"YulFunctionCall","src":"5972:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:21","statements":[{"nodeType":"YulAssignment","src":"6037:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:21"},"nodeType":"YulFunctionCall","src":"6047:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:21"},"nodeType":"YulFunctionCall","src":"5996:26:21"},"nodeType":"YulIf","src":"5993:81:21"},{"body":{"nodeType":"YulBlock","src":"6126:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:21"},"nodeType":"YulFunctionCall","src":"6140:18:21"},"nodeType":"YulExpressionStatement","src":"6140:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:21"},"nodeType":"YulFunctionCall","src":"6110:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:21"},"nodeType":"YulFunctionCall","src":"6087:38:21"},"nodeType":"YulIf","src":"6084:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:21","type":""}],"src":"5854:320:21"},{"body":{"nodeType":"YulBlock","src":"6245:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6262:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6285:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6267:17:21"},"nodeType":"YulFunctionCall","src":"6267:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6255:6:21"},"nodeType":"YulFunctionCall","src":"6255:37:21"},"nodeType":"YulExpressionStatement","src":"6255:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6233:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6240:3:21","type":""}],"src":"6180:118:21"},{"body":{"nodeType":"YulBlock","src":"6458:288:21","statements":[{"nodeType":"YulAssignment","src":"6468:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6480:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6491:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6476:3:21"},"nodeType":"YulFunctionCall","src":"6476:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6468:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6548:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6561:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6572:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6557:3:21"},"nodeType":"YulFunctionCall","src":"6557:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6504:43:21"},"nodeType":"YulFunctionCall","src":"6504:71:21"},"nodeType":"YulExpressionStatement","src":"6504:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6629:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6642:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6653:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6638:3:21"},"nodeType":"YulFunctionCall","src":"6638:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6585:43:21"},"nodeType":"YulFunctionCall","src":"6585:72:21"},"nodeType":"YulExpressionStatement","src":"6585:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6711:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6724:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6735:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6720:3:21"},"nodeType":"YulFunctionCall","src":"6720:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6667:43:21"},"nodeType":"YulFunctionCall","src":"6667:72:21"},"nodeType":"YulExpressionStatement","src":"6667:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6414:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6426:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6434:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6442:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6453:4:21","type":""}],"src":"6304:442:21"},{"body":{"nodeType":"YulBlock","src":"6850:124:21","statements":[{"nodeType":"YulAssignment","src":"6860:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6872:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6883:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6868:3:21"},"nodeType":"YulFunctionCall","src":"6868:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6860:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6940:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6953:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6964:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6949:3:21"},"nodeType":"YulFunctionCall","src":"6949:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6896:43:21"},"nodeType":"YulFunctionCall","src":"6896:71:21"},"nodeType":"YulExpressionStatement","src":"6896:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6822:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6834:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6845:4:21","type":""}],"src":"6752:222:21"},{"body":{"nodeType":"YulBlock","src":"7008:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7025:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7028:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7018:6:21"},"nodeType":"YulFunctionCall","src":"7018:88:21"},"nodeType":"YulExpressionStatement","src":"7018:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7122:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7125:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7115:6:21"},"nodeType":"YulFunctionCall","src":"7115:15:21"},"nodeType":"YulExpressionStatement","src":"7115:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7146:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7149:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7139:6:21"},"nodeType":"YulFunctionCall","src":"7139:15:21"},"nodeType":"YulExpressionStatement","src":"7139:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6980:180:21"},{"body":{"nodeType":"YulBlock","src":"7210:147:21","statements":[{"nodeType":"YulAssignment","src":"7220:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7243:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7225:17:21"},"nodeType":"YulFunctionCall","src":"7225:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7220:1:21"}]},{"nodeType":"YulAssignment","src":"7254:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7277:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7259:17:21"},"nodeType":"YulFunctionCall","src":"7259:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7254:1:21"}]},{"nodeType":"YulAssignment","src":"7288:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7299:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"7302:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7295:3:21"},"nodeType":"YulFunctionCall","src":"7295:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7288:3:21"}]},{"body":{"nodeType":"YulBlock","src":"7328:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7330:16:21"},"nodeType":"YulFunctionCall","src":"7330:18:21"},"nodeType":"YulExpressionStatement","src":"7330:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7320:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"7323:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7317:2:21"},"nodeType":"YulFunctionCall","src":"7317:10:21"},"nodeType":"YulIf","src":"7314:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7197:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"7200:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7206:3:21","type":""}],"src":"7166:191:21"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461015d57806370a082311461017957806395d89b41146101a9578063a9059cbb146101c7578063dd62ed3e146101f75761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100f157806323b872dd1461010f578063313ce5671461013f575b600080fd5b6100ab610227565b6040516100b89190610b60565b60405180910390f35b6100db60048036038101906100d69190610c1b565b6102b9565b6040516100e89190610c76565b60405180910390f35b6100f96102dc565b6040516101069190610ca0565b60405180910390f35b61012960048036038101906101249190610cbb565b6102e6565b6040516101369190610c76565b60405180910390f35b610147610315565b6040516101549190610d2a565b60405180910390f35b61017760048036038101906101729190610c1b565b61031e565b005b610193600480360381019061018e9190610d45565b61032c565b6040516101a09190610ca0565b60405180910390f35b6101b1610374565b6040516101be9190610b60565b60405180910390f35b6101e160048036038101906101dc9190610c1b565b610406565b6040516101ee9190610c76565b60405180910390f35b610211600480360381019061020c9190610d72565b610429565b60405161021e9190610ca0565b60405180910390f35b60606003805461023690610de1565b80601f016020809104026020016040519081016040528092919081815260200182805461026290610de1565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b5050505050905090565b6000806102c46104b0565b90506102d18185856104b8565b600191505092915050565b6000600254905090565b6000806102f16104b0565b90506102fe8582856104ca565b61030985858561055e565b60019150509392505050565b60006012905090565b6103288282610652565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461038390610de1565b80601f01602080910402602001604051908101604052809291908181526020018280546103af90610de1565b80156103fc5780601f106103d1576101008083540402835291602001916103fc565b820191906000526020600020905b8154815290600101906020018083116103df57829003601f168201915b5050505050905090565b6000806104116104b0565b905061041e81858561055e565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6104c583838360016106d4565b505050565b60006104d68484610429565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105585781811015610548578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161053f93929190610e21565b60405180910390fd5b610557848484840360006106d4565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105d05760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105c79190610e58565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106425760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106399190610e58565b60405180910390fd5b61064d8383836108ab565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106c45760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106bb9190610e58565b60405180910390fd5b6106d0600083836108ab565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107465760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161073d9190610e58565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107b85760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107af9190610e58565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156108a5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161089c9190610ca0565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108fd5780600260008282546108f19190610ea2565b925050819055506109d0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610989578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161098093929190610e21565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a195780600260008282540392505081905550610a66565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ac39190610ca0565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b0a578082015181840152602081019050610aef565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b3282610ad0565b610b3c8185610adb565b9350610b4c818560208601610aec565b610b5581610b16565b840191505092915050565b60006020820190508181036000830152610b7a8184610b27565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bb282610b87565b9050919050565b610bc281610ba7565b8114610bcd57600080fd5b50565b600081359050610bdf81610bb9565b92915050565b6000819050919050565b610bf881610be5565b8114610c0357600080fd5b50565b600081359050610c1581610bef565b92915050565b60008060408385031215610c3257610c31610b82565b5b6000610c4085828601610bd0565b9250506020610c5185828601610c06565b9150509250929050565b60008115159050919050565b610c7081610c5b565b82525050565b6000602082019050610c8b6000830184610c67565b92915050565b610c9a81610be5565b82525050565b6000602082019050610cb56000830184610c91565b92915050565b600080600060608486031215610cd457610cd3610b82565b5b6000610ce286828701610bd0565b9350506020610cf386828701610bd0565b9250506040610d0486828701610c06565b9150509250925092565b600060ff82169050919050565b610d2481610d0e565b82525050565b6000602082019050610d3f6000830184610d1b565b92915050565b600060208284031215610d5b57610d5a610b82565b5b6000610d6984828501610bd0565b91505092915050565b60008060408385031215610d8957610d88610b82565b5b6000610d9785828601610bd0565b9250506020610da885828601610bd0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610df957607f821691505b602082108103610e0c57610e0b610db2565b5b50919050565b610e1b81610ba7565b82525050565b6000606082019050610e366000830186610e12565b610e436020830185610c91565b610e506040830184610c91565b949350505050565b6000602082019050610e6d6000830184610e12565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ead82610be5565b9150610eb883610be5565b9250828201905080821115610ed057610ecf610e73565b5b9291505056fea264697066735822122097c10200fe627836d2b2690ad163f03131fed0c2ec99e04a97ff0e25014a61d864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x236 SWAP1 PUSH2 0xDE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x262 SWAP1 PUSH2 0xDE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x284 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x292 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2C4 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2D1 DUP2 DUP6 DUP6 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2F1 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FE DUP6 DUP3 DUP6 PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x309 DUP6 DUP6 DUP6 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x328 DUP3 DUP3 PUSH2 0x652 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x383 SWAP1 PUSH2 0xDE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AF SWAP1 PUSH2 0xDE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x411 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x41E DUP2 DUP6 DUP6 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4C5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 DUP5 DUP5 PUSH2 0x429 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x558 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x548 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x557 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x642 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64D DUP4 DUP4 DUP4 PUSH2 0x8AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D0 PUSH1 0x0 DUP4 DUP4 PUSH2 0x8AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x746 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73D SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7B8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x8A5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8FD JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x989 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x980 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA19 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA66 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB0A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB32 DUP3 PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0xB3C DUP2 DUP6 PUSH2 0xADB JUMP JUMPDEST SWAP4 POP PUSH2 0xB4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAEC JUMP JUMPDEST PUSH2 0xB55 DUP2 PUSH2 0xB16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB7A DUP2 DUP5 PUSH2 0xB27 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB2 DUP3 PUSH2 0xB87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC2 DUP2 PUSH2 0xBA7 JUMP JUMPDEST DUP2 EQ PUSH2 0xBCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDF DUP2 PUSH2 0xBB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF8 DUP2 PUSH2 0xBE5 JUMP JUMPDEST DUP2 EQ PUSH2 0xC03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC15 DUP2 PUSH2 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC32 JUMPI PUSH2 0xC31 PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC40 DUP6 DUP3 DUP7 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC51 DUP6 DUP3 DUP7 ADD PUSH2 0xC06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC70 DUP2 PUSH2 0xC5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC8B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC9A DUP2 PUSH2 0xBE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCB5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCD4 JUMPI PUSH2 0xCD3 PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE2 DUP7 DUP3 DUP8 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCF3 DUP7 DUP3 DUP8 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD04 DUP7 DUP3 DUP8 ADD PUSH2 0xC06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xD0E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5B JUMPI PUSH2 0xD5A PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD69 DUP5 DUP3 DUP6 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD89 JUMPI PUSH2 0xD88 PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD97 DUP6 DUP3 DUP7 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDA8 DUP6 DUP3 DUP7 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDF9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE0C JUMPI PUSH2 0xE0B PUSH2 0xDB2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1B DUP2 PUSH2 0xBA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE36 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0xE43 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC91 JUMP JUMPDEST PUSH2 0xE50 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC91 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEAD DUP3 PUSH2 0xBE5 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB8 DUP4 PUSH2 0xBE5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xED0 JUMPI PUSH2 0xECF PUSH2 0xE73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xC1 MUL STOP INVALID PUSH3 0x7836D2 0xB2 PUSH10 0xAD163F03131FED0C2EC SWAP10 0xE0 0x4A SWAP8 SELFDESTRUCT 0xE 0x25 ADD 0x4A PUSH2 0xD864 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"115:205:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;229:89:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;229:89:20:-;292:19;298:3;303:7;292:5;:19::i;:::-;229:89;;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:12:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:21:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:118::-;6267:24;6285:5;6267:24;:::i;:::-;6262:3;6255:37;6180:118;;:::o;6304:442::-;6453:4;6491:2;6480:9;6476:18;6468:26;;6504:71;6572:1;6561:9;6557:17;6548:6;6504:71;:::i;:::-;6585:72;6653:2;6642:9;6638:18;6629:6;6585:72;:::i;:::-;6667;6735:2;6724:9;6720:18;6711:6;6667:72;:::i;:::-;6304:442;;;;;;:::o;6752:222::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6896:71;6964:1;6953:9;6949:17;6940:6;6896:71;:::i;:::-;6752:222;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/Token20.sol\":\"Token20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/mock/Token20.sol\":{\"keccak256\":\"0x0ab63e4bba3976eecc727b2c3e45f0e104e5ce05d037d2cc3e4f1c367fe09453\",\"license\":\"None\",\"urls\":[\"bzz-raw://9e1a988d162e1edbaf38b6a984bd10ea1b517caab0e0d15bde4a570e99e0fceb\",\"dweb:/ipfs/QmZXmYcYJC93ZKjZbRXYaB5rdLjfawNJ9LcVpweScMwiE8\"]}},\"version\":1}"}}}}}